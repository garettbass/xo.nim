import comapi
import d3dcommon
import dxgi

export comapi
export d3dcommon
export dxgi

when defined(vcc):
  {.link:"dxguid.lib".}
  {.link:"d3d11.lib".}
else:
  {.passL:"-ldxguid".}
  {.passL:"-ld3d11".}

const
  D3D11_16BIT_INDEX_STRIP_CUT_VALUE* = 0x0000FFFF
  D3D11_32BIT_INDEX_STRIP_CUT_VALUE* = 0xFFFFFFFF
  D3D11_8BIT_INDEX_STRIP_CUT_VALUE*  = 0x000000FF

const
  D3D11_ARRAY_AXIS_ADDRESS_RANGE_BIT_COUNT* = 9

const
  D3D11_CLIP_OR_CULL_DISTANCE_COUNT*         = 8
  D3D11_CLIP_OR_CULL_DISTANCE_ELEMENT_COUNT* = 2

const
  D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT* = 14
  D3D11_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS* = 4
  D3D11_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT* = 32
  D3D11_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT* = 15
  D3D11_COMMONSHADER_CONSTANT_BUFFER_PARTIAL_UPDATE_EXTENTS_BYTE_ALIGNMENT* = 16
  D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS* = 4
  D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT* = 15
  D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST* = 1
  D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS* = 1
  D3D11_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT* = 64
  D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS* = 4
  D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT* = 1
  D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST* = 1
  D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS* = 1
  D3D11_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT* = 32
  D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS* = 1
  D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT* = 128
  D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST* = 1
  D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS* = 1
  D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT* = 128
  D3D11_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS* = 1
  D3D11_COMMONSHADER_SAMPLER_REGISTER_COUNT* = 16
  D3D11_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST* = 1
  D3D11_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS* = 1
  D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT* = 16
  D3D11_COMMONSHADER_SUBROUTINE_NESTING_LIMIT* = 32
  D3D11_COMMONSHADER_TEMP_REGISTER_COMPONENTS* = 4
  D3D11_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_COMMONSHADER_TEMP_REGISTER_COUNT* = 4096
  D3D11_COMMONSHADER_TEMP_REGISTER_READS_PER_INST* = 3
  D3D11_COMMONSHADER_TEMP_REGISTER_READ_PORTS* = 3
  D3D11_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX* = 10
  D3D11_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN* = -10
  D3D11_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE* = -8
  D3D11_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE* = 7

const
  D3D11_CS_4_X_BUCKET00_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 256
  D3D11_CS_4_X_BUCKET00_MAX_NUM_THREADS_PER_GROUP* = 64
  D3D11_CS_4_X_BUCKET01_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 240
  D3D11_CS_4_X_BUCKET01_MAX_NUM_THREADS_PER_GROUP* = 68
  D3D11_CS_4_X_BUCKET02_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 224
  D3D11_CS_4_X_BUCKET02_MAX_NUM_THREADS_PER_GROUP* = 72
  D3D11_CS_4_X_BUCKET03_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 208
  D3D11_CS_4_X_BUCKET03_MAX_NUM_THREADS_PER_GROUP* = 76
  D3D11_CS_4_X_BUCKET04_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 192
  D3D11_CS_4_X_BUCKET04_MAX_NUM_THREADS_PER_GROUP* = 84
  D3D11_CS_4_X_BUCKET05_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 176
  D3D11_CS_4_X_BUCKET05_MAX_NUM_THREADS_PER_GROUP* = 92
  D3D11_CS_4_X_BUCKET06_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 160
  D3D11_CS_4_X_BUCKET06_MAX_NUM_THREADS_PER_GROUP* = 100
  D3D11_CS_4_X_BUCKET07_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 144
  D3D11_CS_4_X_BUCKET07_MAX_NUM_THREADS_PER_GROUP* = 112
  D3D11_CS_4_X_BUCKET08_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 128
  D3D11_CS_4_X_BUCKET08_MAX_NUM_THREADS_PER_GROUP* = 128
  D3D11_CS_4_X_BUCKET09_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 112
  D3D11_CS_4_X_BUCKET09_MAX_NUM_THREADS_PER_GROUP* = 144
  D3D11_CS_4_X_BUCKET10_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 96
  D3D11_CS_4_X_BUCKET10_MAX_NUM_THREADS_PER_GROUP* = 168
  D3D11_CS_4_X_BUCKET11_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 80
  D3D11_CS_4_X_BUCKET11_MAX_NUM_THREADS_PER_GROUP* = 204
  D3D11_CS_4_X_BUCKET12_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 64
  D3D11_CS_4_X_BUCKET12_MAX_NUM_THREADS_PER_GROUP* = 256
  D3D11_CS_4_X_BUCKET13_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 48
  D3D11_CS_4_X_BUCKET13_MAX_NUM_THREADS_PER_GROUP* = 340
  D3D11_CS_4_X_BUCKET14_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 32
  D3D11_CS_4_X_BUCKET14_MAX_NUM_THREADS_PER_GROUP* = 512
  D3D11_CS_4_X_BUCKET15_MAX_BYTES_TGSM_WRITABLE_PER_THREAD* = 16
  D3D11_CS_4_X_BUCKET15_MAX_NUM_THREADS_PER_GROUP* = 768
  D3D11_CS_4_X_DISPATCH_MAX_THREAD_GROUPS_IN_Z_DIMENSION* = 1
  D3D11_CS_4_X_RAW_UAV_BYTE_ALIGNMENT* = 256
  D3D11_CS_4_X_THREAD_GROUP_MAX_THREADS_PER_GROUP* = 768
  D3D11_CS_4_X_THREAD_GROUP_MAX_X* = 768
  D3D11_CS_4_X_THREAD_GROUP_MAX_Y* = 768
  D3D11_CS_4_X_UAV_REGISTER_COUNT* = 1

const
  D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION* = 65535
  D3D11_CS_TGSM_REGISTER_COUNT* = 8192
  D3D11_CS_TGSM_REGISTER_READS_PER_INST* = 1
  D3D11_CS_TGSM_RESOURCE_REGISTER_COMPONENTS* = 1
  D3D11_CS_TGSM_RESOURCE_REGISTER_READ_PORTS* = 1
  D3D11_CS_THREADGROUPID_REGISTER_COMPONENTS* = 3
  D3D11_CS_THREADGROUPID_REGISTER_COUNT* = 1
  D3D11_CS_THREADIDINGROUPFLATTENED_REGISTER_COMPONENTS* = 1
  D3D11_CS_THREADIDINGROUPFLATTENED_REGISTER_COUNT* = 1
  D3D11_CS_THREADIDINGROUP_REGISTER_COMPONENTS* = 3
  D3D11_CS_THREADIDINGROUP_REGISTER_COUNT* = 1
  D3D11_CS_THREADID_REGISTER_COMPONENTS* = 3
  D3D11_CS_THREADID_REGISTER_COUNT* = 1
  D3D11_CS_THREAD_GROUP_MAX_THREADS_PER_GROUP* = 1024
  D3D11_CS_THREAD_GROUP_MAX_X* = 1024
  D3D11_CS_THREAD_GROUP_MAX_Y* = 1024
  D3D11_CS_THREAD_GROUP_MAX_Z* = 64
  D3D11_CS_THREAD_GROUP_MIN_X* = 1
  D3D11_CS_THREAD_GROUP_MIN_Y* = 1
  D3D11_CS_THREAD_GROUP_MIN_Z* = 1
  D3D11_CS_THREAD_LOCAL_TEMP_REGISTER_POOL* = 16384

const
  D3D11_DEFAULT_BLEND_FACTOR_ALPHA* = 1f
  D3D11_DEFAULT_BLEND_FACTOR_BLUE* = 1f
  D3D11_DEFAULT_BLEND_FACTOR_GREEN* = 1f
  D3D11_DEFAULT_BLEND_FACTOR_RED* = 1f
  D3D11_DEFAULT_BORDER_COLOR_COMPONENT* = 0f
  D3D11_DEFAULT_DEPTH_BIAS* = 0
  D3D11_DEFAULT_DEPTH_BIAS_CLAMP* = 0f
  D3D11_DEFAULT_MAX_ANISOTROPY* = 16
  D3D11_DEFAULT_MIP_LOD_BIAS* = 0f
  D3D11_DEFAULT_RENDER_TARGET_ARRAY_INDEX* = 0
  D3D11_DEFAULT_SAMPLE_MASK* = 0xFFFFFFFF
  D3D11_DEFAULT_SCISSOR_ENDX* = 0
  D3D11_DEFAULT_SCISSOR_ENDY* = 0
  D3D11_DEFAULT_SCISSOR_STARTX* = 0
  D3D11_DEFAULT_SCISSOR_STARTY* = 0
  D3D11_DEFAULT_SLOPE_SCALED_DEPTH_BIAS* = 0f
  D3D11_DEFAULT_STENCIL_READ_MASK* = 0x000000FF
  D3D11_DEFAULT_STENCIL_REFERENCE* = 0
  D3D11_DEFAULT_STENCIL_WRITE_MASK* = 0x000000FF
  D3D11_DEFAULT_VIEWPORT_AND_SCISSORRECT_INDEX* = 0
  D3D11_DEFAULT_VIEWPORT_HEIGHT* = 0
  D3D11_DEFAULT_VIEWPORT_MAX_DEPTH* = 0f
  D3D11_DEFAULT_VIEWPORT_MIN_DEPTH* = 0f
  D3D11_DEFAULT_VIEWPORT_TOPLEFTX* = 0
  D3D11_DEFAULT_VIEWPORT_TOPLEFTY* = 0
  D3D11_DEFAULT_VIEWPORT_WIDTH* = 0

const
  D3D11_DS_INPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS* = 3968
  D3D11_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENTS* = 4
  D3D11_DS_INPUT_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_DS_INPUT_CONTROL_POINT_REGISTER_COUNT* = 32
  D3D11_DS_INPUT_CONTROL_POINT_REGISTER_READS_PER_INST* = 2
  D3D11_DS_INPUT_CONTROL_POINT_REGISTER_READ_PORTS* = 1
  D3D11_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENTS* = 3
  D3D11_DS_INPUT_DOMAIN_POINT_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_DS_INPUT_DOMAIN_POINT_REGISTER_COUNT* = 1
  D3D11_DS_INPUT_DOMAIN_POINT_REGISTER_READS_PER_INST* = 2
  D3D11_DS_INPUT_DOMAIN_POINT_REGISTER_READ_PORTS* = 1
  D3D11_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENTS* = 4
  D3D11_DS_INPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_DS_INPUT_PATCH_CONSTANT_REGISTER_COUNT* = 32
  D3D11_DS_INPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST* = 2
  D3D11_DS_INPUT_PATCH_CONSTANT_REGISTER_READ_PORTS* = 1
  D3D11_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS* = 1
  D3D11_DS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_DS_INPUT_PRIMITIVE_ID_REGISTER_COUNT* = 1
  D3D11_DS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST* = 2
  D3D11_DS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS* = 1
  D3D11_DS_OUTPUT_REGISTER_COMPONENTS* = 4
  D3D11_DS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_DS_OUTPUT_REGISTER_COUNT* = 32

const
  D3D11_FLOAT16_FUSED_TOLERANCE_IN_ULP*      = 5.9999999999999998e-001f
  D3D11_FLOAT32_MAX*                         = 3.4028234660000002e+038f
  D3D11_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP* = 5.9999999999999998e-001f
  D3D11_FLOAT_TO_SRGB_EXPONENT_DENOMINATOR*  = 2.3999999999999999e+000f
  D3D11_FLOAT_TO_SRGB_EXPONENT_NUMERATOR*    = 1.0000000000000000e+000f
  D3D11_FLOAT_TO_SRGB_OFFSET*                = 5.5000000000000000e-002f
  D3D11_FLOAT_TO_SRGB_SCALE_1*               = 1.2920000000000000e+001f
  D3D11_FLOAT_TO_SRGB_SCALE_2*               = 1.0549999999999999e+000f
  D3D11_FLOAT_TO_SRGB_THRESHOLD*             = 3.1308000000000000e-003f

const
  D3D11_FTOI_INSTRUCTION_MAX_INPUT* =  2.1474836479990001e+009f
  D3D11_FTOI_INSTRUCTION_MIN_INPUT* = -2.1474836489990001e+009f
  D3D11_FTOU_INSTRUCTION_MAX_INPUT* =  4.2949672959990001e+009f
  D3D11_FTOU_INSTRUCTION_MIN_INPUT* =  0.0000000000000000e+000f

const
  D3D11_GS_INPUT_INSTANCE_ID_READS_PER_INST* = 2
  D3D11_GS_INPUT_INSTANCE_ID_READ_PORTS* = 1
  D3D11_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENTS* = 1
  D3D11_GS_INPUT_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_GS_INPUT_INSTANCE_ID_REGISTER_COUNT* = 1
  D3D11_GS_INPUT_PRIM_CONST_REGISTER_COMPONENTS* = 1
  D3D11_GS_INPUT_PRIM_CONST_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_GS_INPUT_PRIM_CONST_REGISTER_COUNT* = 1
  D3D11_GS_INPUT_PRIM_CONST_REGISTER_READS_PER_INST* = 2
  D3D11_GS_INPUT_PRIM_CONST_REGISTER_READ_PORTS* = 1
  D3D11_GS_INPUT_REGISTER_COMPONENTS* = 4
  D3D11_GS_INPUT_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_GS_INPUT_REGISTER_COUNT* = 32
  D3D11_GS_INPUT_REGISTER_READS_PER_INST* = 2
  D3D11_GS_INPUT_REGISTER_READ_PORTS* = 1
  D3D11_GS_INPUT_REGISTER_VERTICES* = 32
  D3D11_GS_MAX_INSTANCE_COUNT* = 32
  D3D11_GS_MAX_OUTPUT_VERTEX_COUNT_ACROSS_INSTANCES* = 1024
  D3D11_GS_OUTPUT_ELEMENTS* = 32
  D3D11_GS_OUTPUT_REGISTER_COMPONENTS* = 4
  D3D11_GS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_GS_OUTPUT_REGISTER_COUNT* = 32

const
  D3D11_HS_CONTROL_POINT_PHASE_INPUT_REGISTER_COUNT* = 32
  D3D11_HS_CONTROL_POINT_PHASE_OUTPUT_REGISTER_COUNT* = 32
  D3D11_HS_CONTROL_POINT_REGISTER_COMPONENTS* = 4
  D3D11_HS_CONTROL_POINT_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_HS_CONTROL_POINT_REGISTER_READS_PER_INST* = 2
  D3D11_HS_CONTROL_POINT_REGISTER_READ_PORTS* = 1
  D3D11_HS_FORK_PHASE_INSTANCE_COUNT_UPPER_BOUND* = 0xFFFFFFFF
  D3D11_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENTS* = 1
  D3D11_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_HS_INPUT_FORK_INSTANCE_ID_REGISTER_COUNT* = 1
  D3D11_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READS_PER_INST* = 2
  D3D11_HS_INPUT_FORK_INSTANCE_ID_REGISTER_READ_PORTS* = 1
  D3D11_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENTS* = 1
  D3D11_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_COUNT* = 1
  D3D11_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READS_PER_INST* = 2
  D3D11_HS_INPUT_JOIN_INSTANCE_ID_REGISTER_READ_PORTS* = 1
  D3D11_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENTS* = 1
  D3D11_HS_INPUT_PRIMITIVE_ID_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_HS_INPUT_PRIMITIVE_ID_REGISTER_COUNT* = 1
  D3D11_HS_INPUT_PRIMITIVE_ID_REGISTER_READS_PER_INST* = 2
  D3D11_HS_INPUT_PRIMITIVE_ID_REGISTER_READ_PORTS* = 1
  D3D11_HS_JOIN_PHASE_INSTANCE_COUNT_UPPER_BOUND* = 0xFFFFFFFF
  D3D11_HS_MAXTESSFACTOR_LOWER_BOUND* = 1.0000000000000000e+000f
  D3D11_HS_MAXTESSFACTOR_UPPER_BOUND* = 6.4000000000000000e+001f
  D3D11_HS_OUTPUT_CONTROL_POINTS_MAX_TOTAL_SCALARS* = 3968
  D3D11_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENTS* = 1
  D3D11_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_COUNT* = 1
  D3D11_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READS_PER_INST* = 2
  D3D11_HS_OUTPUT_CONTROL_POINT_ID_REGISTER_READ_PORTS* = 1
  D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENTS* = 4
  D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_COUNT* = 32
  D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READS_PER_INST* = 2
  D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_READ_PORTS* = 1
  D3D11_HS_OUTPUT_PATCH_CONSTANT_REGISTER_SCALAR_COMPONENTS* = 128

const
  D3D11_IA_DEFAULT_INDEX_BUFFER_OFFSET_IN_BYTES* = 0
  D3D11_IA_DEFAULT_PRIMITIVE_TOPOLOGY* = 0
  D3D11_IA_DEFAULT_VERTEX_BUFFER_OFFSET_IN_BYTES* = 0
  D3D11_IA_INDEX_INPUT_RESOURCE_SLOT_COUNT* = 1
  D3D11_IA_INSTANCE_ID_BIT_COUNT* = 32
  D3D11_IA_INTEGER_ARITHMETIC_BIT_COUNT* = 32
  D3D11_IA_PATCH_MAX_CONTROL_POINT_COUNT* = 32
  D3D11_IA_PRIMITIVE_ID_BIT_COUNT* = 32
  D3D11_IA_VERTEX_ID_BIT_COUNT* = 32
  D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT* = 32
  D3D11_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS* = 128
  D3D11_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT* = 32

const
  D3D11_INTEGER_DIVIDE_BY_ZERO_QUOTIENT*  = 0xFFFFFFFF
  D3D11_INTEGER_DIVIDE_BY_ZERO_REMAINDER* = 0xFFFFFFFF

const
  D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL* = 0xFFFFFFFF
  D3D11_KEEP_UNORDERED_ACCESS_VIEWS*           = 0xFFFFFFFF

const
  D3D11_LINEAR_GAMMA* = 1.0000000000000000e+000f

const
  D3D11_MAJOR_VERSION* = 11
  D3D11_MINOR_VERSION* = 0

const
  D3D11_MAX_BORDER_COLOR_COMPONENT* = 1.0000000000000000e+000f
  D3D11_MIN_BORDER_COLOR_COMPONENT* = 0.0000000000000000e+000f

const
  D3D11_MAX_DEPTH* = 1.0000000000000000e+000f
  D3D11_MIN_DEPTH* = 0.0000000000000000e+000f

const
  D3D11_MAX_MAXANISOTROPY* = 16
  D3D11_MIN_MAXANISOTROPY* = 0
  D3D11_MAX_MULTISAMPLE_SAMPLE_COUNT* = 32
  D3D11_MAX_POSITION_VALUE* = 3.4028234660000004e+034f
  D3D11_MAX_TEXTURE_DIMENSION_2_TO_EXP* = 17

const
  D3D11_MIP_LOD_BIAS_MAX* =  1.5990000000000000e+001f
  D3D11_MIP_LOD_BIAS_MIN* = -1.6000000000000000e+001f
  D3D11_MIP_LOD_FRACTIONAL_BIT_COUNT* = 8
  D3D11_MIP_LOD_RANGE_BIT_COUNT* = 8

const
  D3D11_MULTISAMPLE_ANTIALIAS_LINE_WIDTH* = 1.3999999999999999e+000f

const
  D3D11_NONSAMPLE_FETCH_OUT_OF_RANGE_ACCESS_RESULT* = 0

const
  D3D11_PIXEL_ADDRESS_RANGE_BIT_COUNT* = 15
  D3D11_PRE_SCISSOR_PIXEL_ADDRESS_RANGE_BIT_COUNT* = 16

const
  D3D11_PS_CS_UAV_REGISTER_COMPONENTS* = 1
  D3D11_PS_CS_UAV_REGISTER_COUNT* = 8
  D3D11_PS_CS_UAV_REGISTER_READS_PER_INST* = 1
  D3D11_PS_CS_UAV_REGISTER_READ_PORTS* = 1
  D3D11_PS_FRONTFACING_DEFAULT_VALUE* = 0xFFFFFFFF
  D3D11_PS_FRONTFACING_FALSE_VALUE* = 0
  D3D11_PS_FRONTFACING_TRUE_VALUE* = 0xFFFFFFFF
  D3D11_PS_INPUT_REGISTER_COMPONENTS* = 4
  D3D11_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_PS_INPUT_REGISTER_COUNT* = 32
  D3D11_PS_INPUT_REGISTER_READS_PER_INST* = 2
  D3D11_PS_INPUT_REGISTER_READ_PORTS* = 1
  D3D11_PS_LEGACY_PIXEL_CENTER_FRACTIONAL_COMPONENT* = 0.0000000000000000e+000f
  D3D11_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS* = 1
  D3D11_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_PS_OUTPUT_DEPTH_REGISTER_COUNT* = 1
  D3D11_PS_OUTPUT_MASK_REGISTER_COMPONENTS* = 1
  D3D11_PS_OUTPUT_MASK_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_PS_OUTPUT_MASK_REGISTER_COUNT* = 1
  D3D11_PS_OUTPUT_REGISTER_COMPONENTS* = 4
  D3D11_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_PS_OUTPUT_REGISTER_COUNT* = 8
  D3D11_PS_PIXEL_CENTER_FRACTIONAL_COMPONENT* = 5.0000000000000000e-001f

const
  D3D11_RAW_UAV_SRV_BYTE_ALIGNMENT* = 16

const
  D3D11_REQ_BLEND_OBJECT_COUNT_PER_DEVICE* = 4096
  D3D11_REQ_BUFFER_RESOURCE_TEXEL_COUNT_2_TO_EXP* = 27
  D3D11_REQ_CONSTANT_BUFFER_ELEMENT_COUNT* = 4096
  D3D11_REQ_DEPTH_STENCIL_OBJECT_COUNT_PER_DEVICE* = 4096
  D3D11_REQ_DRAWINDEXED_INDEX_COUNT_2_TO_EXP* = 32
  D3D11_REQ_DRAW_VERTEX_COUNT_2_TO_EXP* = 32
  D3D11_REQ_FILTERING_HW_ADDRESSABLE_RESOURCE_DIMENSION* = 16384
  D3D11_REQ_GS_INVOCATION_32BIT_OUTPUT_COMPONENT_LIMIT* = 1024
  D3D11_REQ_IMMEDIATE_CONSTANT_BUFFER_ELEMENT_COUNT* = 4096
  D3D11_REQ_MAXANISOTROPY* = 16
  D3D11_REQ_MIP_LEVELS* = 15
  D3D11_REQ_MULTI_ELEMENT_STRUCTURE_SIZE_IN_BYTES* = 2048
  D3D11_REQ_RASTERIZER_OBJECT_COUNT_PER_DEVICE* = 4096
  D3D11_REQ_RENDER_TO_BUFFER_WINDOW_WIDTH* = 16384
  D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_A_TERM* = 128
  D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_B_TERM* = 2.5000000000000000e-001f
  D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_C_TERM* = 2048
  D3D11_REQ_RESOURCE_VIEW_COUNT_PER_DEVICE_2_TO_EXP* = 20
  D3D11_REQ_SAMPLER_OBJECT_COUNT_PER_DEVICE* = 4096
  D3D11_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION* = 2048
  D3D11_REQ_TEXTURE1D_U_DIMENSION* = 16384
  D3D11_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION* = 2048
  D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION* = 16384
  D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION* = 2048
  D3D11_REQ_TEXTURECUBE_DIMENSION* = 16384

const
  D3D11_RESINFO_INSTRUCTION_MISSING_COMPONENT_RETVAL* = 0

const
  D3D11_SHADER_MAJOR_VERSION* = 5
  D3D11_SHADER_MINOR_VERSION* = 0

const
  D3D11_SHADER_MAX_INSTANCES* = 65535
  D3D11_SHADER_MAX_INTERFACES* = 253
  D3D11_SHADER_MAX_INTERFACE_CALL_SITES* = 4096
  D3D11_SHADER_MAX_TYPES* = 65535

const
  D3D11_SHIFT_INSTRUCTION_PAD_VALUE* = 0
  D3D11_SHIFT_INSTRUCTION_SHIFT_VALUE_BIT_COUNT* = 5

const
  D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT* = 8

const
  D3D11_SO_BUFFER_MAX_STRIDE_IN_BYTES* = 2048
  D3D11_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES* = 512
  D3D11_SO_BUFFER_SLOT_COUNT* = 4
  D3D11_SO_DDI_REGISTER_INDEX_DENOTING_GAP* = 0xFFFFFFFF
  D3D11_SO_NO_RASTERIZED_STREAM* = 0xFFFFFFFF
  D3D11_SO_OUTPUT_COMPONENT_COUNT* = 128
  D3D11_SO_STREAM_COUNT* = 4

const
  D3D11_SPEC_DATE_DAY* = 16
  D3D11_SPEC_DATE_MONTH* = 0o000000000005
  D3D11_SPEC_DATE_YEAR* = 2011
  D3D11_SPEC_VERSION* = 1.0700000000000001e+000

const
  D3D11_SRGB_GAMMA*                     = 2.2000000000000002e+000f
  D3D11_SRGB_TO_FLOAT_DENOMINATOR_1*    = 1.2920000000000000e+001f
  D3D11_SRGB_TO_FLOAT_DENOMINATOR_2*    = 1.0549999999999999e+000f
  D3D11_SRGB_TO_FLOAT_EXPONENT*         = 2.3999999999999999e+000f
  D3D11_SRGB_TO_FLOAT_OFFSET*           = 5.5000000000000000e-002f
  D3D11_SRGB_TO_FLOAT_THRESHOLD*        = 4.0450000000000000e-002f
  D3D11_SRGB_TO_FLOAT_TOLERANCE_IN_ULP* = 5.0000000000000000e-001f

const
  D3D11_STANDARD_COMPONENT_BIT_COUNT* = 32
  D3D11_STANDARD_COMPONENT_BIT_COUNT_DOUBLED* = 64
  D3D11_STANDARD_MAXIMUM_ELEMENT_ALIGNMENT_BYTE_MULTIPLE* = 4
  D3D11_STANDARD_PIXEL_COMPONENT_COUNT* = 128
  D3D11_STANDARD_PIXEL_ELEMENT_COUNT* = 32
  D3D11_STANDARD_VECTOR_SIZE* = 4
  D3D11_STANDARD_VERTEX_ELEMENT_COUNT* = 32
  D3D11_STANDARD_VERTEX_TOTAL_COMPONENT_COUNT* = 64

const
  D3D11_SUBPIXEL_FRACTIONAL_BIT_COUNT* = 8
  D3D11_SUBTEXEL_FRACTIONAL_BIT_COUNT* = 8

const
  D3D11_TESSELLATOR_MAX_EVEN_TESSELLATION_FACTOR* = 64
  D3D11_TESSELLATOR_MAX_ISOLINE_DENSITY_TESSELLATION_FACTOR* = 64
  D3D11_TESSELLATOR_MAX_ODD_TESSELLATION_FACTOR* = 63
  D3D11_TESSELLATOR_MAX_TESSELLATION_FACTOR* = 64
  D3D11_TESSELLATOR_MIN_EVEN_TESSELLATION_FACTOR* = 2
  D3D11_TESSELLATOR_MIN_ISOLINE_DENSITY_TESSELLATION_FACTOR* = 1
  D3D11_TESSELLATOR_MIN_ODD_TESSELLATION_FACTOR* = 1

const
  D3D11_TEXEL_ADDRESS_RANGE_BIT_COUNT* = 16

const
  D3D11_UNBOUND_MEMORY_ACCESS_RESULT* = 0

const
  D3D11_VIEWPORT_AND_SCISSORRECT_MAX_INDEX* = 15
  D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE* = 16
  D3D11_VIEWPORT_BOUNDS_MAX* =  32767
  D3D11_VIEWPORT_BOUNDS_MIN* = -32768

const
  D3D11_VS_INPUT_REGISTER_COMPONENTS* = 4
  D3D11_VS_INPUT_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_VS_INPUT_REGISTER_COUNT* = 32
  D3D11_VS_INPUT_REGISTER_READS_PER_INST* = 2
  D3D11_VS_INPUT_REGISTER_READ_PORTS* = 1
  D3D11_VS_OUTPUT_REGISTER_COMPONENTS* = 4
  D3D11_VS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT* = 32
  D3D11_VS_OUTPUT_REGISTER_COUNT* = 32

const
  D3D11_WHQL_CONTEXT_COUNT_FOR_RESOURCE_LIMIT* = 10
  D3D11_WHQL_DRAWINDEXED_INDEX_COUNT_2_TO_EXP* = 25
  D3D11_WHQL_DRAW_VERTEX_COUNT_2_TO_EXP* = 25

const
  D3D11_1_UAV_SLOT_COUNT* = 64
  D3D11_2_TILED_RESOURCE_TILE_SIZE_IN_BYTES* = 65536

const U_FACD3D11* = 0x0000087C

template MAKE_D3D11_HRESULT*(code: untyped): untyped =
  MAKE_HRESULT(1, U_FACD3D11, code)

template MAKE_D3D11_STATUS*(code: untyped): untyped =
  MAKE_HRESULT(0, U_FACD3D11, code)

type D3D11_INPUT_CLASSIFICATION* {.size:sizeof(cint).} = enum
  D3D11_INPUT_PER_VERTEX_DATA   = 0
  D3D11_INPUT_PER_INSTANCE_DATA = 1

type D3D11_FILL_MODE* {.size:sizeof(cint).} = enum
  D3D11_FILL_WIREFRAME = 2
  D3D11_FILL_SOLID     = 3

type D3D11_CULL_MODE* {.size:sizeof(cint).} = enum
  D3D11_CULL_NONE  = 1
  D3D11_CULL_FRONT = 2
  D3D11_CULL_BACK  = 3

type D3D11_RESOURCE_DIMENSION* {.size:sizeof(cint).} = enum
  D3D11_RESOURCE_DIMENSION_UNKNOWN   = 0
  D3D11_RESOURCE_DIMENSION_BUFFER    = 1
  D3D11_RESOURCE_DIMENSION_TEXTURE1D = 2
  D3D11_RESOURCE_DIMENSION_TEXTURE2D = 3
  D3D11_RESOURCE_DIMENSION_TEXTURE3D = 4

type D3D11_DSV_DIMENSION* {.size:sizeof(cint).} = enum
  D3D11_DSV_DIMENSION_UNKNOWN          = 0
  D3D11_DSV_DIMENSION_TEXTURE1D        = 1
  D3D11_DSV_DIMENSION_TEXTURE1DARRAY   = 2
  D3D11_DSV_DIMENSION_TEXTURE2D        = 3
  D3D11_DSV_DIMENSION_TEXTURE2DARRAY   = 4
  D3D11_DSV_DIMENSION_TEXTURE2DMS      = 5
  D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY = 6

type D3D11_UAV_DIMENSION* {.size:sizeof(cint).} = enum
  D3D11_UAV_DIMENSION_UNKNOWN        = 0
  D3D11_UAV_DIMENSION_BUFFER         = 1
  D3D11_UAV_DIMENSION_TEXTURE1D      = 2
  D3D11_UAV_DIMENSION_TEXTURE1DARRAY = 3
  D3D11_UAV_DIMENSION_TEXTURE2D      = 4
  D3D11_UAV_DIMENSION_TEXTURE2DARRAY = 5
  D3D11_UAV_DIMENSION_TEXTURE3D      = 8

type D3D11_USAGE* {.size:sizeof(cint).} = enum
  D3D11_USAGE_DEFAULT   = 0
  D3D11_USAGE_IMMUTABLE = 1
  D3D11_USAGE_DYNAMIC   = 2
  D3D11_USAGE_STAGING   = 3

type D3D11_BIND_FLAG* {.size:sizeof(cint).} = enum
  D3D11_BIND_VERTEX_BUFFER    = 0x001
  D3D11_BIND_INDEX_BUFFER     = 0x002
  D3D11_BIND_CONSTANT_BUFFER  = 0x004
  D3D11_BIND_SHADER_RESOURCE  = 0x008
  D3D11_BIND_STREAM_OUTPUT    = 0x010
  D3D11_BIND_RENDER_TARGET    = 0x020
  D3D11_BIND_DEPTH_STENCIL    = 0x040
  D3D11_BIND_UNORDERED_ACCESS = 0x080
  D3D11_BIND_DECODER          = 0x200
  D3D11_BIND_VIDEO_ENCODER    = 0x400

proc `or`*(a,b:D3D11_BIND_FLAG):D3D11_BIND_FLAG =
  D3D11_BIND_FLAG(a.cint or b.cint)

type D3D11_CPU_ACCESS_FLAG* {.size:sizeof(cint).} = enum
  D3D11_CPU_ACCESS_WRITE      = 0x00010000
  D3D11_CPU_ACCESS_READ       = 0x00020000
  D3D11_CPU_ACCESS_READ_WRITE = 0x00030000

type D3D11_RESOURCE_MISC_FLAG* {.size:sizeof(cint).} = enum
  D3D11_RESOURCE_MISC_GENERATE_MIPS                   = 0x00001
  D3D11_RESOURCE_MISC_SHARED                          = 0x00002
  D3D11_RESOURCE_MISC_TEXTURECUBE                     = 0x00004
  D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS               = 0x00010
  D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS          = 0x00020
  D3D11_RESOURCE_MISC_BUFFER_STRUCTURED               = 0x00040
  D3D11_RESOURCE_MISC_RESOURCE_CLAMP                  = 0x00080
  D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX               = 0x00100
  D3D11_RESOURCE_MISC_GDI_COMPATIBLE                  = 0x00200
  D3D11_RESOURCE_MISC_SHARED_NTHANDLE                 = 0x00800
  D3D11_RESOURCE_MISC_RESTRICTED_CONTENT              = 0x01000
  D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE        = 0x02000
  D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER = 0x04000
  D3D11_RESOURCE_MISC_GUARDED                         = 0x08000
  D3D11_RESOURCE_MISC_TILE_POOL                       = 0x20000
  D3D11_RESOURCE_MISC_TILED                           = 0x40000

proc `or`*(a,b:D3D11_RESOURCE_MISC_FLAG):D3D11_RESOURCE_MISC_FLAG =
  D3D11_RESOURCE_MISC_FLAG(a.cint or b.cint)

type D3D11_MAP* {.size:sizeof(cint).} = enum
  D3D11_MAP_READ               = 1
  D3D11_MAP_WRITE              = 2
  D3D11_MAP_READ_WRITE         = 3
  D3D11_MAP_WRITE_DISCARD      = 4
  D3D11_MAP_WRITE_NO_OVERWRITE = 5

type D3D11_MAP_FLAG* {.size:sizeof(cint).} = enum
  D3D11_MAP_FLAG_DO_NOT_WAIT = 0x00100000

type D3D11_RAISE_FLAG* {.size:sizeof(cint).} = enum
  D3D11_RAISE_FLAG_DRIVER_INTERNAL_ERROR = 0x00000001

type D3D11_CLEAR_FLAG* {.size:sizeof(cint).} = enum
  D3D11_CLEAR_DEPTH         = 0x00000001
  D3D11_CLEAR_STENCIL       = 0x00000002
  D3D11_CLEAR_DEPTH_STENCIL = 0x00000003

type D3D11_COMPARISON_FUNC* {.size:sizeof(cint).} = enum
  D3D11_COMPARISON_NEVER         = 1
  D3D11_COMPARISON_LESS          = 2
  D3D11_COMPARISON_EQUAL         = 3
  D3D11_COMPARISON_LESS_EQUAL    = 4
  D3D11_COMPARISON_GREATER       = 5
  D3D11_COMPARISON_NOT_EQUAL     = 6
  D3D11_COMPARISON_GREATER_EQUAL = 7
  D3D11_COMPARISON_ALWAYS        = 8

type D3D11_DEPTH_WRITE_MASK* {.size:sizeof(cint).} = enum
  D3D11_DEPTH_WRITE_MASK_ZERO = 0
  D3D11_DEPTH_WRITE_MASK_ALL  = 1

type D3D11_STENCIL_OP* {.size:sizeof(cint).} = enum
  D3D11_STENCIL_OP_KEEP     = 1
  D3D11_STENCIL_OP_ZERO     = 2
  D3D11_STENCIL_OP_REPLACE  = 3
  D3D11_STENCIL_OP_INCR_SAT = 4
  D3D11_STENCIL_OP_DECR_SAT = 5
  D3D11_STENCIL_OP_INVERT   = 6
  D3D11_STENCIL_OP_INCR     = 7
  D3D11_STENCIL_OP_DECR     = 8

type D3D11_BLEND* {.size:sizeof(cint).} = enum
  D3D11_BLEND_ZERO             = 1
  D3D11_BLEND_ONE              = 2
  D3D11_BLEND_SRC_COLOR        = 3
  D3D11_BLEND_INV_SRC_COLOR    = 4
  D3D11_BLEND_SRC_ALPHA        = 5
  D3D11_BLEND_INV_SRC_ALPHA    = 6
  D3D11_BLEND_DEST_ALPHA       = 7
  D3D11_BLEND_INV_DEST_ALPHA   = 8
  D3D11_BLEND_DEST_COLOR       = 9
  D3D11_BLEND_INV_DEST_COLOR   = 10
  D3D11_BLEND_SRC_ALPHA_SAT    = 11
  D3D11_BLEND_BLEND_FACTOR     = 14
  D3D11_BLEND_INV_BLEND_FACTOR = 15
  D3D11_BLEND_SRC1_COLOR       = 16
  D3D11_BLEND_INV_SRC1_COLOR   = 17
  D3D11_BLEND_SRC1_ALPHA       = 18
  D3D11_BLEND_INV_SRC1_ALPHA   = 19

type D3D11_BLEND_OP* {.size:sizeof(cint).} = enum
  D3D11_BLEND_OP_ADD          = 1
  D3D11_BLEND_OP_SUBTRACT     = 2
  D3D11_BLEND_OP_REV_SUBTRACT = 3
  D3D11_BLEND_OP_MIN          = 4
  D3D11_BLEND_OP_MAX          = 5

type D3D11_COLOR_WRITE_ENABLE* {.size:sizeof(cint).} = enum
  D3D11_COLOR_WRITE_ENABLE_RED   = 1
  D3D11_COLOR_WRITE_ENABLE_GREEN = 2
  D3D11_COLOR_WRITE_ENABLE_BLUE  = 4
  D3D11_COLOR_WRITE_ENABLE_ALPHA = 8
  D3D11_COLOR_WRITE_ENABLE_ALL   = 15

type D3D11_TEXTURECUBE_FACE* {.size:sizeof(cint).} = enum
  D3D11_TEXTURECUBE_FACE_POSITIVE_X = 0
  D3D11_TEXTURECUBE_FACE_NEGATIVE_X = 1
  D3D11_TEXTURECUBE_FACE_POSITIVE_Y = 2
  D3D11_TEXTURECUBE_FACE_NEGATIVE_Y = 3
  D3D11_TEXTURECUBE_FACE_POSITIVE_Z = 4
  D3D11_TEXTURECUBE_FACE_NEGATIVE_Z = 5

type D3D11_BUFFEREX_SRV_FLAG* {.size:sizeof(cint).} = enum
  D3D11_BUFFEREX_SRV_FLAG_RAW = 0x00000001

type D3D11_FILTER* {.size:sizeof(cint).} = enum
  D3D11_FILTER_MIN_MAG_MIP_POINT                          = 0
  D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR                   = 0x001
  D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT             = 0x004
  D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR                   = 0x005
  D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT                   = 0x010
  D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR            = 0x011
  D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT                   = 0x014
  D3D11_FILTER_MIN_MAG_MIP_LINEAR                         = 0x015
  D3D11_FILTER_ANISOTROPIC                                = 0x055
  D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT               = 0x080
  D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR        = 0x081
  D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT  = 0x084
  D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR        = 0x085
  D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT        = 0x090
  D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 0x091
  D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT        = 0x094
  D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR              = 0x095
  D3D11_FILTER_COMPARISON_ANISOTROPIC                     = 0x0D5
  D3D11_FILTER_MINIMUM_MIN_MAG_MIP_POINT                  = 0x100
  D3D11_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR           = 0x101
  D3D11_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT     = 0x104
  D3D11_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR           = 0x105
  D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT           = 0x110
  D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR    = 0x111
  D3D11_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT           = 0x114
  D3D11_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR                 = 0x115
  D3D11_FILTER_MINIMUM_ANISOTROPIC                        = 0x155
  D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_POINT                  = 0x180
  D3D11_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR           = 0x181
  D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT     = 0x184
  D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR           = 0x185
  D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT           = 0x190
  D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR    = 0x191
  D3D11_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT           = 0x194
  D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR                 = 0x195
  D3D11_FILTER_MAXIMUM_ANISOTROPIC                        = 0x1D5

type D3D11_FILTER_TYPE* {.size:sizeof(cint).} = enum
  D3D11_FILTER_TYPE_POINT  = 0
  D3D11_FILTER_TYPE_LINEAR = 1

type D3D11_FILTER_REDUCTION_TYPE* {.size:sizeof(cint).} = enum
  D3D11_FILTER_REDUCTION_TYPE_STANDARD   = 0
  D3D11_FILTER_REDUCTION_TYPE_COMPARISON = 1
  D3D11_FILTER_REDUCTION_TYPE_MINIMUM    = 2
  D3D11_FILTER_REDUCTION_TYPE_MAXIMUM    = 3

type D3D11_TEXTURE_ADDRESS_MODE* {.size:sizeof(cint).} = enum
  D3D11_TEXTURE_ADDRESS_WRAP        = 1
  D3D11_TEXTURE_ADDRESS_MIRROR      = 2
  D3D11_TEXTURE_ADDRESS_CLAMP       = 3
  D3D11_TEXTURE_ADDRESS_BORDER      = 4
  D3D11_TEXTURE_ADDRESS_MIRROR_ONCE = 5

type D3D11_FORMAT_SUPPORT* {.size:sizeof(cint).} = enum
  D3D11_FORMAT_SUPPORT_BUFFER                      = 0x00000001
  D3D11_FORMAT_SUPPORT_IA_VERTEX_BUFFER            = 0x00000002
  D3D11_FORMAT_SUPPORT_IA_INDEX_BUFFER             = 0x00000004
  D3D11_FORMAT_SUPPORT_SO_BUFFER                   = 0x00000008
  D3D11_FORMAT_SUPPORT_TEXTURE1D                   = 0x00000010
  D3D11_FORMAT_SUPPORT_TEXTURE2D                   = 0x00000020
  D3D11_FORMAT_SUPPORT_TEXTURE3D                   = 0x00000040
  D3D11_FORMAT_SUPPORT_TEXTURECUBE                 = 0x00000080
  D3D11_FORMAT_SUPPORT_SHADER_LOAD                 = 0x00000100
  D3D11_FORMAT_SUPPORT_SHADER_SAMPLE               = 0x00000200
  D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON    = 0x00000400
  D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT     = 0x00000800
  D3D11_FORMAT_SUPPORT_MIP                         = 0x00001000
  D3D11_FORMAT_SUPPORT_MIP_AUTOGEN                 = 0x00002000
  D3D11_FORMAT_SUPPORT_RENDER_TARGET               = 0x00004000
  D3D11_FORMAT_SUPPORT_BLENDABLE                   = 0x00008000
  D3D11_FORMAT_SUPPORT_DEPTH_STENCIL               = 0x00010000
  D3D11_FORMAT_SUPPORT_CPU_LOCKABLE                = 0x00020000
  D3D11_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE         = 0x00040000
  D3D11_FORMAT_SUPPORT_DISPLAY                     = 0x00080000
  D3D11_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT      = 0x00100000
  D3D11_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET    = 0x00200000
  D3D11_FORMAT_SUPPORT_MULTISAMPLE_LOAD            = 0x00400000
  D3D11_FORMAT_SUPPORT_SHADER_GATHER               = 0x00800000
  D3D11_FORMAT_SUPPORT_BACK_BUFFER_CAST            = 0x01000000
  D3D11_FORMAT_SUPPORT_TYPED_UNORDERED_ACCESS_VIEW = 0x02000000
  D3D11_FORMAT_SUPPORT_SHADER_GATHER_COMPARISON    = 0x04000000
  D3D11_FORMAT_SUPPORT_DECODER_OUTPUT              = 0x08000000
  D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_OUTPUT      = 0x10000000
  D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_INPUT       = 0x20000000
  D3D11_FORMAT_SUPPORT_VIDEO_ENCODER               = 0x40000000

type D3D11_FORMAT_SUPPORT2* {.size:sizeof(cint).} = enum
  D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_ADD                               = 0x00000001
  D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS                       = 0x00000002
  D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE = 0x00000004
  D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE                          = 0x00000008
  D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX                 = 0x00000010
  D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX               = 0x00000020
  D3D11_FORMAT_SUPPORT2_UAV_TYPED_LOAD                               = 0x00000040
  D3D11_FORMAT_SUPPORT2_UAV_TYPED_STORE                              = 0x00000080
  D3D11_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP                       = 0x00000100
  D3D11_FORMAT_SUPPORT2_TILED                                        = 0x00000200
  D3D11_FORMAT_SUPPORT2_SHAREABLE                                    = 0x00000400
  D3D11_FORMAT_SUPPORT2_MULTIPLANE_OVERLAY                           = 0x00004000

type D3D11_ASYNC_GETDATA_FLAG* {.size:sizeof(cint).} = enum
  D3D11_ASYNC_GETDATA_DONOTFLUSH = 0x00000001

type D3D11_QUERY* {.size:sizeof(cint).} = enum
  D3D11_QUERY_EVENT                         = 0
  D3D11_QUERY_OCCLUSION                     = 1
  D3D11_QUERY_TIMESTAMP                     = 2
  D3D11_QUERY_TIMESTAMP_DISJOINT            = 3
  D3D11_QUERY_PIPELINE_STATISTICS           = 4
  D3D11_QUERY_OCCLUSION_PREDICATE           = 5
  D3D11_QUERY_SO_STATISTICS                 = 6
  D3D11_QUERY_SO_OVERFLOW_PREDICATE         = 7
  D3D11_QUERY_SO_STATISTICS_STREAM0         = 8
  D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM0 = 9
  D3D11_QUERY_SO_STATISTICS_STREAM1         = 10
  D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM1 = 11
  D3D11_QUERY_SO_STATISTICS_STREAM2         = 12
  D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM2 = 13
  D3D11_QUERY_SO_STATISTICS_STREAM3         = 14
  D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM3 = 15

type D3D11_QUERY_MISC_FLAG* {.size:sizeof(cint).} = enum
  D3D11_QUERY_MISC_PREDICATEHINT = 0x00000001

type D3D11_COUNTER* {.size:sizeof(cint).} = enum
  D3D11_COUNTER_DEVICE_DEPENDENT_0 = 0x40000000

type D3D11_COUNTER_TYPE* {.size:sizeof(cint).} = enum
  D3D11_COUNTER_TYPE_FLOAT32 = 0
  D3D11_COUNTER_TYPE_UINT16  = 1
  D3D11_COUNTER_TYPE_UINT32  = 2
  D3D11_COUNTER_TYPE_UINT64  = 3

type D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS* {.size:sizeof(cint).} = enum
  D3D11_CENTER_MULTISAMPLE_PATTERN   = 0xFFFFFFFE
  D3D11_STANDARD_MULTISAMPLE_PATTERN = 0xFFFFFFFF

type D3D11_DEVICE_CONTEXT_TYPE* {.size:sizeof(cint).} = enum
  D3D11_DEVICE_CONTEXT_IMMEDIATE = 0
  D3D11_DEVICE_CONTEXT_DEFERRED  = 1

type D3D11_FEATURE* {.size:sizeof(cint).} = enum
  D3D11_FEATURE_THREADING                      = 0
  D3D11_FEATURE_DOUBLES                        = 1
  D3D11_FEATURE_FORMAT_SUPPORT                 = 2
  D3D11_FEATURE_FORMAT_SUPPORT2                = 3
  D3D11_FEATURE_D3D10_X_HARDWARE_OPTIONS       = 4
  D3D11_FEATURE_D3D11_OPTIONS                  = 5
  D3D11_FEATURE_ARCHITECTURE_INFO              = 6
  D3D11_FEATURE_D3D9_OPTIONS                   = 7
  D3D11_FEATURE_SHADER_MIN_PRECISION_SUPPORT   = 8
  D3D11_FEATURE_D3D9_SHADOW_SUPPORT            = 9
  D3D11_FEATURE_D3D11_OPTIONS1                 = 10
  D3D11_FEATURE_D3D9_SIMPLE_INSTANCING_SUPPORT = 11
  D3D11_FEATURE_MARKER_SUPPORT                 = 12
  D3D11_FEATURE_D3D9_OPTIONS1                  = 13
  D3D11_FEATURE_D3D11_OPTIONS2                 = 14
  D3D11_FEATURE_D3D11_OPTIONS3                 = 15
  D3D11_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT    = 16

type D3D11_SHADER_MIN_PRECISION_SUPPORT* {.size:sizeof(cint).} = enum
  D3D11_SHADER_MIN_PRECISION_10_BIT = 0x00000001
  D3D11_SHADER_MIN_PRECISION_16_BIT = 0x00000002

type D3D11_TILED_RESOURCES_TIER* {.size:sizeof(cint).} = enum
  D3D11_TILED_RESOURCES_NOT_SUPPORTED = 0
  D3D11_TILED_RESOURCES_TIER_1        = 1
  D3D11_TILED_RESOURCES_TIER_2        = 2
  D3D11_TILED_RESOURCES_TIER_3        = 3

type D3D11_VIDEO_DECODER_BUFFER_TYPE* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_DECODER_BUFFER_PICTURE_PARAMETERS          = 0
  D3D11_VIDEO_DECODER_BUFFER_MACROBLOCK_CONTROL          = 1
  D3D11_VIDEO_DECODER_BUFFER_RESIDUAL_DIFFERENCE         = 2
  D3D11_VIDEO_DECODER_BUFFER_DEBLOCKING_CONTROL          = 3
  D3D11_VIDEO_DECODER_BUFFER_INVERSE_QUANTIZATION_MATRIX = 4
  D3D11_VIDEO_DECODER_BUFFER_SLICE_CONTROL               = 5
  D3D11_VIDEO_DECODER_BUFFER_BITSTREAM                   = 6
  D3D11_VIDEO_DECODER_BUFFER_MOTION_VECTOR               = 7
  D3D11_VIDEO_DECODER_BUFFER_FILM_GRAIN                  = 8

type D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_INPUT  = 0x00000001
  D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_OUTPUT = 0x00000002

type D3D11_VIDEO_PROCESSOR_DEVICE_CAPS* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_LINEAR_SPACE            = 0x00000001
  D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_xvYCC                   = 0x00000002
  D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_RGB_RANGE_CONVERSION    = 0x00000004
  D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_YCbCr_MATRIX_CONVERSION = 0x00000008
  D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_NOMINAL_RANGE           = 0x00000010

type D3D11_VIDEO_PROCESSOR_FEATURE_CAPS* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_FILL         = 0x001
  D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_CONSTRICTION       = 0x002
  D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LUMA_KEY           = 0x004
  D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_PALETTE      = 0x008
  D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LEGACY             = 0x010
  D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_STEREO             = 0x020
  D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ROTATION           = 0x040
  D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_STREAM       = 0x080
  D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_PIXEL_ASPECT_RATIO = 0x100
  D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_MIRROR             = 0x200
  D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_SHADER_USAGE       = 0x400

type D3D11_VIDEO_PROCESSOR_FILTER_CAPS* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_FILTER_CAPS_BRIGHTNESS         = 0x01
  D3D11_VIDEO_PROCESSOR_FILTER_CAPS_CONTRAST           = 0x02
  D3D11_VIDEO_PROCESSOR_FILTER_CAPS_HUE                = 0x04
  D3D11_VIDEO_PROCESSOR_FILTER_CAPS_SATURATION         = 0x08
  D3D11_VIDEO_PROCESSOR_FILTER_CAPS_NOISE_REDUCTION    = 0x10
  D3D11_VIDEO_PROCESSOR_FILTER_CAPS_EDGE_ENHANCEMENT   = 0x20
  D3D11_VIDEO_PROCESSOR_FILTER_CAPS_ANAMORPHIC_SCALING = 0x40
  D3D11_VIDEO_PROCESSOR_FILTER_CAPS_STEREO_ADJUSTMENT  = 0x80

type D3D11_VIDEO_PROCESSOR_FORMAT_CAPS* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_INTERLACED     = 0x1
  D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_PROCAMP        = 0x2
  D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_LUMA_KEY       = 0x4
  D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_PALETTE_INTERLACED = 0x8

type D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DENOISE             = 0x01
  D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DERINGING           = 0x02
  D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_EDGE_ENHANCEMENT    = 0x04
  D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_COLOR_CORRECTION    = 0x08
  D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_FLESH_TONE_MAPPING  = 0x10
  D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_IMAGE_STABILIZATION = 0x20
  D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_SUPER_RESOLUTION    = 0x40
  D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_ANAMORPHIC_SCALING  = 0x80

type D3D11_VIDEO_PROCESSOR_STEREO_CAPS* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_STEREO_CAPS_MONO_OFFSET        = 0x01
  D3D11_VIDEO_PROCESSOR_STEREO_CAPS_ROW_INTERLEAVED    = 0x02
  D3D11_VIDEO_PROCESSOR_STEREO_CAPS_COLUMN_INTERLEAVED = 0x04
  D3D11_VIDEO_PROCESSOR_STEREO_CAPS_CHECKERBOARD       = 0x08
  D3D11_VIDEO_PROCESSOR_STEREO_CAPS_FLIP_MODE          = 0x10

type D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BLEND               = 0x01
  D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BOB                 = 0x02
  D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_ADAPTIVE            = 0x04
  D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_MOTION_COMPENSATION = 0x08
  D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_INVERSE_TELECINE                = 0x10
  D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_FRAME_RATE_CONVERSION           = 0x20

type D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32           = 0x00000001
  D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_22           = 0x00000002
  D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2224         = 0x00000004
  D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2332         = 0x00000008
  D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32322        = 0x00000010
  D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_55           = 0x00000020
  D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_64           = 0x00000040
  D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_87           = 0x00000080
  D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_222222222223 = 0x00000100
  D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_OTHER        = 0x80000000

type D3D11_CONTENT_PROTECTION_CAPS* {.size:sizeof(cint).} = enum
  D3D11_CONTENT_PROTECTION_CAPS_SOFTWARE                           = 0x0001
  D3D11_CONTENT_PROTECTION_CAPS_HARDWARE                           = 0x0002
  D3D11_CONTENT_PROTECTION_CAPS_PROTECTION_ALWAYS_ON               = 0x0004
  D3D11_CONTENT_PROTECTION_CAPS_PARTIAL_DECRYPTION                 = 0x0008
  D3D11_CONTENT_PROTECTION_CAPS_CONTENT_KEY                        = 0x0010
  D3D11_CONTENT_PROTECTION_CAPS_FRESHEN_SESSION_KEY                = 0x0020
  D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK                = 0x0040
  D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK_KEY            = 0x0080
  D3D11_CONTENT_PROTECTION_CAPS_SEQUENTIAL_CTR_IV                  = 0x0100
  D3D11_CONTENT_PROTECTION_CAPS_ENCRYPT_SLICEDATA_ONLY             = 0x0200
  D3D11_CONTENT_PROTECTION_CAPS_DECRYPTION_BLT                     = 0x0400
  D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_PROTECT_UNCOMPRESSED      = 0x0800
  D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_PROTECTED_MEMORY_PAGEABLE = 0x1000
  D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_TEARDOWN                  = 0x2000
  D3D11_CONTENT_PROTECTION_CAPS_HARDWARE_DRM_COMMUNICATION         = 0x4000

type D3D11_VIDEO_PROCESSOR_FILTER* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_FILTER_BRIGHTNESS         = 0
  D3D11_VIDEO_PROCESSOR_FILTER_CONTRAST           = 1
  D3D11_VIDEO_PROCESSOR_FILTER_HUE                = 2
  D3D11_VIDEO_PROCESSOR_FILTER_SATURATION         = 3
  D3D11_VIDEO_PROCESSOR_FILTER_NOISE_REDUCTION    = 4
  D3D11_VIDEO_PROCESSOR_FILTER_EDGE_ENHANCEMENT   = 5
  D3D11_VIDEO_PROCESSOR_FILTER_ANAMORPHIC_SCALING = 6
  D3D11_VIDEO_PROCESSOR_FILTER_STEREO_ADJUSTMENT  = 7

type D3D11_VIDEO_FRAME_FORMAT* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_FRAME_FORMAT_PROGRESSIVE                   = 0
  D3D11_VIDEO_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST    = 1
  D3D11_VIDEO_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST = 2

type D3D11_VIDEO_USAGE* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_USAGE_PLAYBACK_NORMAL = 0
  D3D11_VIDEO_USAGE_OPTIMAL_SPEED   = 1
  D3D11_VIDEO_USAGE_OPTIMAL_QUALITY = 2

type D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_UNDEFINED = 0
  D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_16_235    = 1
  D3D11_VIDEO_PROCESSOR_NOMINAL_RANGE_0_255     = 2

type D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_OPAQUE        = 0
  D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_BACKGROUND    = 1
  D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_DESTINATION   = 2
  D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_SOURCE_STREAM = 3

type D3D11_VIDEO_PROCESSOR_OUTPUT_RATE* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_NORMAL = 0
  D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_HALF   = 1
  D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_CUSTOM = 2

type D3D11_VIDEO_PROCESSOR_STEREO_FORMAT* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO               = 0
  D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_HORIZONTAL         = 1
  D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_VERTICAL           = 2
  D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE           = 3
  D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET        = 4
  D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_ROW_INTERLEAVED    = 5
  D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_COLUMN_INTERLEAVED = 6
  D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_CHECKERBOARD       = 7

type D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_STEREO_FLIP_NONE   = 0
  D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME0 = 1
  D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME1 = 2

type D3D11_VIDEO_PROCESSOR_ROTATION* {.size:sizeof(cint).} = enum
  D3D11_VIDEO_PROCESSOR_ROTATION_IDENTITY = 0
  D3D11_VIDEO_PROCESSOR_ROTATION_90       = 1
  D3D11_VIDEO_PROCESSOR_ROTATION_180      = 2
  D3D11_VIDEO_PROCESSOR_ROTATION_270      = 3

type D3D11_AUTHENTICATED_CHANNEL_TYPE* {.size:sizeof(cint).} = enum
  D3D11_AUTHENTICATED_CHANNEL_D3D11           = 1
  D3D11_AUTHENTICATED_CHANNEL_DRIVER_SOFTWARE = 2
  D3D11_AUTHENTICATED_CHANNEL_DRIVER_HARDWARE = 3

type D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE* {.size:sizeof(cint).} = enum
  D3D11_PROCESSIDTYPE_UNKNOWN = 0
  D3D11_PROCESSIDTYPE_DWM     = 1
  D3D11_PROCESSIDTYPE_HANDLE  = 2

type D3D11_BUS_TYPE* {.size:sizeof(cint).} = enum
  D3D11_BUS_TYPE_OTHER                                            = 0
  D3D11_BUS_TYPE_PCI                                              = 0x00000001
  D3D11_BUS_TYPE_PCIX                                             = 0x00000002
  D3D11_BUS_TYPE_PCIEXPRESS                                       = 0x00000003
  D3D11_BUS_TYPE_AGP                                              = 0x00000004
  D3D11_BUS_IMPL_MODIFIER_INSIDE_OF_CHIPSET                       = 0x00010000
  D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP          = 0x00020000
  D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET        = 0x00030000
  D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR                = 0x00040000
  D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE = 0x00050000
  D3D11_BUS_IMPL_MODIFIER_NON_STANDARD                            = 0x80000000

type D3D11_VDOV_DIMENSION* {.size:sizeof(cint).} = enum
  D3D11_VDOV_DIMENSION_UNKNOWN   = 0
  D3D11_VDOV_DIMENSION_TEXTURE2D = 1

type D3D11_VPIV_DIMENSION* {.size:sizeof(cint).} = enum
  D3D11_VPIV_DIMENSION_UNKNOWN   = 0
  D3D11_VPIV_DIMENSION_TEXTURE2D = 1

type D3D11_INPUT_ELEMENT_DESC* = object
  SemanticName*         : cstring
  SemanticIndex*        : uint32
  Format*               : DXGI_FORMAT
  InputSlot*            : uint32
  AlignedByteOffset*    : uint32
  InputSlotClass*       : D3D11_INPUT_CLASSIFICATION
  InstanceDataStepRate* : uint32

type D3D11_SO_DECLARATION_ENTRY* = object
  Stream*          : uint32
  SemanticName*    : cstring
  SemanticIndex*   : uint32
  StartComponent*  : uint8
  ComponentCount*  : uint8
  OutputSlot*      : uint8

type D3D11_VIEWPORT* = object
  TopLeftX* : cfloat
  TopLeftY* : cfloat
  Width*    : cfloat
  Height*   : cfloat
  MinDepth* : cfloat
  MaxDepth* : cfloat

type D3D11_DRAW_INSTANCED_INDIRECT_ARGS* = object
  VertexCountPerInstance* : uint32
  InstanceCount*          : uint32
  StartVertexLocation*    : uint32
  StartInstanceLocation*  : uint32

type D3D11_DRAW_INDEXED_INSTANCED_INDIRECT_ARGS* = object
  IndexCountPerInstance* : uint32
  InstanceCount*         : uint32
  StartIndexLocation*    : uint32
  BaseVertexLocation*    : int32
  StartInstanceLocation* : uint32

type D3D11_RECT* = RECT

type D3D11_BOX* = object
  left*   : uint32
  top*    : uint32
  front*  : uint32
  right*  : uint32
  bottom* : uint32
  back*   : uint32

comapi ID3D11DeviceChild of IUnknown:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT

type D3D11_DEPTH_STENCILOP_DESC* = object
  StencilFailOp*      : D3D11_STENCIL_OP
  StencilDepthFailOp* : D3D11_STENCIL_OP
  StencilPassOp*      : D3D11_STENCIL_OP
  StencilFunc*        : D3D11_COMPARISON_FUNC

type D3D11_DEPTH_STENCIL_DESC* = object
  DepthEnable*      : BOOL
  DepthWriteMask*   : D3D11_DEPTH_WRITE_MASK
  DepthFunc*        : D3D11_COMPARISON_FUNC
  StencilEnable*    : BOOL
  StencilReadMask*  : uint8
  StencilWriteMask* : uint8
  FrontFace*        : D3D11_DEPTH_STENCILOP_DESC
  BackFace*         : D3D11_DEPTH_STENCILOP_DESC

comapi ID3D11DepthStencilState of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetDesc(pDesc: ptr D3D11_DEPTH_STENCIL_DESC)

type D3D11_RENDER_TARGET_BLEND_DESC* = object
  BlendEnable*           : BOOL
  SrcBlend*              : D3D11_BLEND
  DestBlend*             : D3D11_BLEND
  BlendOp*               : D3D11_BLEND_OP
  SrcBlendAlpha*         : D3D11_BLEND
  DestBlendAlpha*        : D3D11_BLEND
  BlendOpAlpha*          : D3D11_BLEND_OP
  RenderTargetWriteMask* : uint8

type D3D11_BLEND_DESC* = object
  AlphaToCoverageEnable*  : BOOL
  IndependentBlendEnable* : BOOL
  RenderTarget*           : array[8, D3D11_RENDER_TARGET_BLEND_DESC]

comapi ID3D11BlendState of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetDesc(pDesc: ptr D3D11_BLEND_DESC)

type D3D11_RASTERIZER_DESC* = object
  FillMode*              : D3D11_FILL_MODE
  CullMode*              : D3D11_CULL_MODE
  FrontCounterClockwise* : BOOL
  DepthBias*             : int32
  DepthBiasClamp*        : cfloat
  SlopeScaledDepthBias*  : cfloat
  DepthClipEnable*       : BOOL
  ScissorEnable*         : BOOL
  MultisampleEnable*     : BOOL
  AntialiasedLineEnable* : BOOL

comapi ID3D11RasterizerState of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetDesc(pDesc: ptr D3D11_RASTERIZER_DESC)

type D3D11_SUBRESOURCE_DATA* = object
  pSysMem*          : pointer
  SysMemPitch*      : uint32
  SysMemSlicePitch* : uint32

type D3D11_MAPPED_SUBRESOURCE* = object
  pData*      : pointer
  RowPitch*   : uint32
  DepthPitch* : uint32

comapi ID3D11Resource of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetType(pResourceDimension: ptr D3D11_RESOURCE_DIMENSION)
  proc SetEvictionPriority(EvictionPriority: uint32)
  proc GetEvictionPriority(): uint32

type D3D11_BUFFER_DESC* = object
  ByteWidth*           : uint32
  Usage*               : D3D11_USAGE
  BindFlags*           : D3D11_BIND_FLAG
  CPUAccessFlags*      : D3D11_CPU_ACCESS_FLAG
  MiscFlags*           : D3D11_RESOURCE_MISC_FLAG
  StructureByteStride* : uint32

comapi ID3D11Buffer of ID3D11Resource:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetType(pResourceDimension: ptr D3D11_RESOURCE_DIMENSION)
  proc SetEvictionPriority(EvictionPriority: uint32)
  proc GetEvictionPriority(): uint32
  proc GetDesc(pDesc: ptr D3D11_BUFFER_DESC)

type D3D11_TEXTURE1D_DESC* = object
  Width*          : uint32
  MipLevels*      : uint32
  ArraySize*      : uint32
  Format*         : DXGI_FORMAT
  Usage*          : D3D11_USAGE
  BindFlags*      : D3D11_BIND_FLAG
  CPUAccessFlags* : uint32
  MiscFlags*      : uint32

comapi ID3D11Texture1D of ID3D11Resource:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetType(pResourceDimension: ptr D3D11_RESOURCE_DIMENSION)
  proc SetEvictionPriority(EvictionPriority: uint32)
  proc GetEvictionPriority(): uint32
  proc GetDesc(pDesc: ptr D3D11_TEXTURE1D_DESC)

type D3D11_TEXTURE2D_DESC* = object
  Width*          : uint32
  Height*         : uint32
  MipLevels*      : uint32
  ArraySize*      : uint32
  Format*         : DXGI_FORMAT
  SampleDesc*     : DXGI_SAMPLE_DESC
  Usage*          : D3D11_USAGE
  BindFlags*      : D3D11_BIND_FLAG
  CPUAccessFlags* : uint32
  MiscFlags*      : uint32

comapi ID3D11Texture2D of ID3D11Resource:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetType(pResourceDimension: ptr D3D11_RESOURCE_DIMENSION)
  proc SetEvictionPriority(EvictionPriority: uint32)
  proc GetEvictionPriority(): uint32
  proc GetDesc(pDesc: ptr D3D11_TEXTURE2D_DESC)

type D3D11_TEXTURE3D_DESC* = object
  Width*          : uint32
  Height*         : uint32
  Depth*          : uint32
  MipLevels*      : uint32
  Format*         : DXGI_FORMAT
  Usage*          : D3D11_USAGE
  BindFlags*      : D3D11_BIND_FLAG
  CPUAccessFlags* : uint32
  MiscFlags*      : uint32

comapi ID3D11Texture3D of ID3D11Resource:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetType(pResourceDimension: ptr D3D11_RESOURCE_DIMENSION)
  proc SetEvictionPriority(EvictionPriority: uint32)
  proc GetEvictionPriority(): uint32
  proc GetDesc(pDesc: ptr D3D11_TEXTURE3D_DESC)

comapi ID3D11View of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetResource(ppResource: ptr ptr ID3D11Resource)

type D3D11_BUFFER_SRV_FIRST* {.union.} = object
  FirstElement*  : uint32
  ElementOffset* : uint32

type D3D11_BUFFER_SRV_NUM* {.union.} = object
  NumElements*  : uint32
  ElementWidth* : uint32

type D3D11_BUFFER_SRV* = object
  First* : D3D11_BUFFER_SRV_FIRST
  Num*   : D3D11_BUFFER_SRV_NUM

type D3D11_BUFFEREX_SRV* = object
  FirstElement* : uint32
  NumElements*  : uint32
  Flags*        : uint32

type D3D11_TEX1D_SRV* = object
  MostDetailedMip* : uint32
  MipLevels*       : uint32

type D3D11_TEX1D_ARRAY_SRV* = object
  MostDetailedMip* : uint32
  MipLevels*       : uint32
  FirstArraySlice* : uint32
  ArraySize*       : uint32

type D3D11_TEX2D_SRV* = object
  MostDetailedMip* : uint32
  MipLevels*       : uint32

type D3D11_TEX2D_ARRAY_SRV* = object
  MostDetailedMip* : uint32
  MipLevels*       : uint32
  FirstArraySlice* : uint32
  ArraySize*       : uint32

type D3D11_TEX3D_SRV* = object
  MostDetailedMip* : uint32
  MipLevels*       : uint32

type D3D11_TEXCUBE_SRV* = object
  MostDetailedMip* : uint32
  MipLevels*       : uint32

type D3D11_TEXCUBE_ARRAY_SRV* = object
  MostDetailedMip*  : uint32
  MipLevels*        : uint32
  First2DArrayFace* : uint32
  NumCubes*         : uint32

type D3D11_TEX2DMS_SRV* = object
  UnusedField_NothingToDefine*: uint32

type D3D11_TEX2DMS_ARRAY_SRV* = object
  FirstArraySlice* : uint32
  ArraySize*       : uint32

type D3D11_SHADER_RESOURCE_VIEW* {.union.} = object
  Buffer*           : D3D11_BUFFER_SRV
  Texture1D*        : D3D11_TEX1D_SRV
  Texture1DArray*   : D3D11_TEX1D_ARRAY_SRV
  Texture2D*        : D3D11_TEX2D_SRV
  Texture2DArray*   : D3D11_TEX2D_ARRAY_SRV
  Texture2DMS*      : D3D11_TEX2DMS_SRV
  Texture2DMSArray* : D3D11_TEX2DMS_ARRAY_SRV
  Texture3D*        : D3D11_TEX3D_SRV
  TextureCube*      : D3D11_TEXCUBE_SRV
  TextureCubeArray* : D3D11_TEXCUBE_ARRAY_SRV
  BufferEx*         : D3D11_BUFFEREX_SRV

type D3D11_SHADER_RESOURCE_VIEW_DESC* = object
  Format*        : DXGI_FORMAT
  ViewDimension* : D3D11_SRV_DIMENSION
  View*          : D3D11_SHADER_RESOURCE_VIEW

comapi ID3D11ShaderResourceView of ID3D11View:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetResource(ppResource: ptr ptr ID3D11Resource)
  proc GetDesc(pDesc: ptr D3D11_SHADER_RESOURCE_VIEW_DESC)

type D3D11_BUFFER_RTV_FIRST* {.union.} = object
  FirstElement*  : uint32
  ElementOffset* : uint32

type D3D11_BUFFER_RTV_NUM* {.union.} = object
  NumElements*  : uint32
  ElementWidth* : uint32

type D3D11_BUFFER_RTV* = object
  First* : D3D11_BUFFER_RTV_FIRST
  Num*   : D3D11_BUFFER_RTV_NUM

type D3D11_TEX1D_RTV* = object
  MipSlice*: uint32

type D3D11_TEX1D_ARRAY_RTV* = object
  MipSlice*        : uint32
  FirstArraySlice* : uint32
  ArraySize*       : uint32

type D3D11_TEX2D_RTV* = object
  MipSlice*: uint32

type D3D11_TEX2DMS_RTV* = object
  UnusedField_NothingToDefine*: uint32

type D3D11_TEX2D_ARRAY_RTV* = object
  MipSlice*        : uint32
  FirstArraySlice* : uint32
  ArraySize*       : uint32

type D3D11_TEX2DMS_ARRAY_RTV* = object
  FirstArraySlice* : uint32
  ArraySize*       : uint32

type D3D11_TEX3D_RTV* = object
  MipSlice*    : uint32
  FirstWSlice* : uint32
  WSize*       : uint32

type D3D11_RTV_DIMENSION* {.size:sizeof(cint).} = enum
  D3D11_RTV_DIMENSION_UNKNOWN          = 0
  D3D11_RTV_DIMENSION_BUFFER           = 1
  D3D11_RTV_DIMENSION_TEXTURE1D        = 2
  D3D11_RTV_DIMENSION_TEXTURE1DARRAY   = 3
  D3D11_RTV_DIMENSION_TEXTURE2D        = 4
  D3D11_RTV_DIMENSION_TEXTURE2DARRAY   = 5
  D3D11_RTV_DIMENSION_TEXTURE2DMS      = 6
  D3D11_RTV_DIMENSION_TEXTURE2DMSARRAY = 7
  D3D11_RTV_DIMENSION_TEXTURE3D        = 8

type D3D11_RTV_TARGET* {.union.} = object
  Buffer*           : D3D11_BUFFER_RTV
  Texture1D*        : D3D11_TEX1D_RTV
  Texture1DArray*   : D3D11_TEX1D_ARRAY_RTV
  Texture2D*        : D3D11_TEX2D_RTV
  Texture2DArray*   : D3D11_TEX2D_ARRAY_RTV
  Texture2DMS*      : D3D11_TEX2DMS_RTV
  Texture2DMSArray* : D3D11_TEX2DMS_ARRAY_RTV
  Texture3D*        : D3D11_TEX3D_RTV

type D3D11_RENDER_TARGET_VIEW_DESC* = object
  Format*        : DXGI_FORMAT
  ViewDimension* : D3D11_RTV_DIMENSION
  Target*        : D3D11_RTV_TARGET

comapi ID3D11RenderTargetView of ID3D11View:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetResource(ppResource: ptr ptr ID3D11Resource)
  proc GetDesc(pDesc: ptr D3D11_RENDER_TARGET_VIEW_DESC)

type D3D11_TEX1D_DSV* = object
  MipSlice*: uint32

type D3D11_TEX1D_ARRAY_DSV* = object
  MipSlice*        : uint32
  FirstArraySlice* : uint32
  ArraySize*       : uint32

type D3D11_TEX2D_DSV* = object
  MipSlice*: uint32

type D3D11_TEX2D_ARRAY_DSV* = object
  MipSlice*        : uint32
  FirstArraySlice* : uint32
  ArraySize*       : uint32

type D3D11_TEX2DMS_DSV* = object
  UnusedField_NothingToDefine*: uint32

type D3D11_TEX2DMS_ARRAY_DSV* = object
  FirstArraySlice* : uint32
  ArraySize*       : uint32

type D3D11_DSV_FLAG* {.size:sizeof(cint).} = enum
  D3D11_DSV_READ_ONLY_DEPTH   = 1
  D3D11_DSV_READ_ONLY_STENCIL = 2

type D3D11_DEPTH_STENCIL_VIEW* {.union.} = object
  Texture1D*        : D3D11_TEX1D_DSV
  Texture1DArray*   : D3D11_TEX1D_ARRAY_DSV
  Texture2D*        : D3D11_TEX2D_DSV
  Texture2DArray*   : D3D11_TEX2D_ARRAY_DSV
  Texture2DMS*      : D3D11_TEX2DMS_DSV
  Texture2DMSArray* : D3D11_TEX2DMS_ARRAY_DSV

type D3D11_DEPTH_STENCIL_VIEW_DESC* = object
  Format*        : DXGI_FORMAT
  ViewDimension* : D3D11_DSV_DIMENSION
  View*          : D3D11_DEPTH_STENCIL_VIEW

comapi ID3D11DepthStencilView of ID3D11View:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetResource(ppResource: ptr ptr ID3D11Resource)
  proc GetDesc(pDesc: ptr D3D11_DEPTH_STENCIL_VIEW_DESC)

type D3D11_BUFFER_UAV_FLAG* {.size:sizeof(cint).} = enum
  D3D11_BUFFER_UAV_FLAG_RAW     = 1
  D3D11_BUFFER_UAV_FLAG_APPEND  = 2
  D3D11_BUFFER_UAV_FLAG_COUNTER = 4

type D3D11_BUFFER_UAV* = object
  FirstElement* : uint32
  NumElements*  : uint32
  Flags*        : uint32

type D3D11_TEX1D_UAV* = object
  MipSlice*: uint32

type D3D11_TEX1D_ARRAY_UAV* = object
  MipSlice*        : uint32
  FirstArraySlice* : uint32
  ArraySize*       : uint32

type D3D11_TEX2D_UAV* = object
  MipSlice*: uint32

type D3D11_TEX2D_ARRAY_UAV* = object
  MipSlice*        : uint32
  FirstArraySlice* : uint32
  ArraySize*       : uint32

type D3D11_TEX3D_UAV* = object
  MipSlice*    : uint32
  FirstWSlice* : uint32
  WSize*       : uint32

type D3D11_UNORDERED_ACCESS_VIEW* {.union.} = object
  Buffer*         : D3D11_BUFFER_UAV
  Texture1D*      : D3D11_TEX1D_UAV
  Texture1DArray* : D3D11_TEX1D_ARRAY_UAV
  Texture2D*      : D3D11_TEX2D_UAV
  Texture2DArray* : D3D11_TEX2D_ARRAY_UAV
  Texture3D*      : D3D11_TEX3D_UAV

type D3D11_UNORDERED_ACCESS_VIEW_DESC* = object
  Format*: DXGI_FORMAT
  ViewDimension*: D3D11_UAV_DIMENSION
  View*: D3D11_UNORDERED_ACCESS_VIEW

comapi ID3D11UnorderedAccessView of ID3D11View:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetResource(ppResource: ptr ptr ID3D11Resource)
  proc GetDesc(pDesc: ptr D3D11_UNORDERED_ACCESS_VIEW_DESC)

comapi ID3D11VertexShader of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT

comapi ID3D11HullShader of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT

comapi ID3D11DomainShader of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT

comapi ID3D11GeometryShader of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT

comapi ID3D11PixelShader of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT

comapi ID3D11ComputeShader of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT

comapi ID3D11InputLayout of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT

type D3D11_SAMPLER_DESC* = object
  Filter*         : D3D11_FILTER
  AddressU*       : D3D11_TEXTURE_ADDRESS_MODE
  AddressV*       : D3D11_TEXTURE_ADDRESS_MODE
  AddressW*       : D3D11_TEXTURE_ADDRESS_MODE
  MipLODBias*     : cfloat
  MaxAnisotropy*  : uint32
  ComparisonFunc* : D3D11_COMPARISON_FUNC
  BorderColor*    : array[4, cfloat]
  MinLOD*         : cfloat
  MaxLOD*         : cfloat

comapi ID3D11SamplerState of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetDesc(pDesc: ptr D3D11_SAMPLER_DESC)

comapi ID3D11Asynchronous of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetDataSize(): uint32

type D3D11_QUERY_DESC* = object
  Query*     : D3D11_QUERY
  MiscFlags* : uint32

comapi ID3D11Query of ID3D11Asynchronous:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetDataSize(): uint32
  proc GetDesc(pDesc: ptr D3D11_QUERY_DESC)

comapi ID3D11Predicate of ID3D11Query:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetDataSize(): uint32
  proc GetDesc(pDesc: ptr D3D11_QUERY_DESC)

type D3D11_QUERY_DATA_TIMESTAMP_DISJOINT* = object
  Frequency* : uint64
  Disjoint*  : BOOL

type D3D11_QUERY_DATA_PIPELINE_STATISTICS* = object
  IAVertices*    : uint64
  IAPrimitives*  : uint64
  VSInvocations* : uint64
  GSInvocations* : uint64
  GSPrimitives*  : uint64
  CInvocations*  : uint64
  CPrimitives*   : uint64
  PSInvocations* : uint64
  HSInvocations* : uint64
  DSInvocations* : uint64
  CSInvocations* : uint64

type D3D11_QUERY_DATA_SO_STATISTICS* = object
  NumPrimitivesWritten*    : uint64
  PrimitivesStorageNeeded* : uint64

type D3D11_COUNTER_DESC* = object
  Counter*   : D3D11_COUNTER
  MiscFlags* : uint32

type D3D11_COUNTER_INFO* = object
  LastDeviceDependentCounter* : D3D11_COUNTER
  NumSimultaneousCounters*    : uint32
  NumDetectableParallelUnits* : uint8

comapi ID3D11Counter of ID3D11Asynchronous:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetDataSize(): uint32
  proc GetDesc(pDesc: ptr D3D11_COUNTER_DESC)

type D3D11_CLASS_INSTANCE_DESC* = object
  InstanceId*               : uint32
  InstanceIndex*            : uint32
  TypeId*                   : uint32
  ConstantBuffer*           : uint32
  BaseConstantBufferOffset* : uint32
  BaseTexture*              : uint32
  BaseSampler*              : uint32
  Created*                  : BOOL

comapi ID3D11ClassInstance of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetClassLinkage(ppLinkage: ptr pointer)
  proc GetDesc(pDesc: ptr D3D11_CLASS_INSTANCE_DESC)
  proc GetInstanceName(pInstanceName: cstring; pBufferLength: ptr uint)
  proc GetTypeName(pTypeName: cstring; pBufferLength: ptr uint)

comapi ID3D11ClassLinkage of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetClassInstance(pClassInstanceName: cstring; InstanceIndex: uint32; ppInstance: ptr ptr ID3D11ClassInstance): HRESULT
  proc CreateClassInstance(pClassTypeName: cstring; ConstantBufferOffset: uint32; ConstantVectorOffset: uint32; TextureOffset: uint32; SamplerOffset: uint32; ppInstance: ptr ptr ID3D11ClassInstance): HRESULT

comapi ID3D11CommandList of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetContextFlags(): uint32

type D3D11_FEATURE_DATA_THREADING* = object
  DriverConcurrentCreates* : BOOL
  DriverCommandLists*      : BOOL

type D3D11_FEATURE_DATA_DOUBLES* = object
  DoublePrecisionFloatShaderOps*: BOOL

type D3D11_FEATURE_DATA_FORMAT_SUPPORT* = object
  InFormat*         : DXGI_FORMAT
  OutFormatSupport* : uint32

type D3D11_FEATURE_DATA_FORMAT_SUPPORT2* = object
  InFormat*          : DXGI_FORMAT
  OutFormatSupport2* : uint32

type D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS* = object
  ComputeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x*: BOOL

type D3D11_FEATURE_DATA_D3D11_OPTIONS* = object
  OutputMergerLogicOp*                    : BOOL
  UAVOnlyRenderingForcedSampleCount*      : BOOL
  DiscardAPIsSeenByDriver*                : BOOL
  FlagsForUpdateAndCopySeenByDriver*      : BOOL
  ClearView*                              : BOOL
  CopyWithOverlap*                        : BOOL
  ConstantBufferPartialUpdate*            : BOOL
  ConstantBufferOffsetting*               : BOOL
  MapNoOverwriteOnDynamicConstantBuffer*  : BOOL
  MapNoOverwriteOnDynamicBufferSRV*       : BOOL
  MultisampleRTVWithForcedSampleCountOne* : BOOL
  SAD4ShaderInstructions*                 : BOOL
  ExtendedDoublesShaderInstructions*      : BOOL
  ExtendedResourceSharing*                : BOOL

type D3D11_FEATURE_DATA_ARCHITECTURE_INFO* = object
  TileBasedDeferredRenderer*: BOOL

type D3D11_FEATURE_DATA_D3D9_OPTIONS* = object
  FullNonPow2TextureSupport*: BOOL

type D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT* = object
  SupportsDepthAsTextureWithLessEqualComparisonFilter*: BOOL

type D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT* = object
  PixelShaderMinPrecision*          : uint32
  AllOtherShaderStagesMinPrecision* : uint32

type D3D11_FEATURE_DATA_D3D11_OPTIONS1* = object
  TiledResourcesTier*                    : D3D11_TILED_RESOURCES_TIER
  MinMaxFiltering*                       : BOOL
  ClearViewAlsoSupportsDepthOnlyFormats* : BOOL
  MapOnDefaultBuffers*                   : BOOL

type D3D11_FEATURE_DATA_D3D9_SIMPLE_INSTANCING_SUPPORT* = object
  SimpleInstancingSupported*: BOOL

type D3D11_FEATURE_DATA_MARKER_SUPPORT* = object
  Profile*: BOOL

type D3D11_FEATURE_DATA_D3D9_OPTIONS1* = object
  FullNonPow2TextureSupported*                                 : BOOL
  DepthAsTextureWithLessEqualComparisonFilterSupported*        : BOOL
  SimpleInstancingSupported*                                   : BOOL
  TextureCubeFaceRenderTargetWithNonCubeDepthStencilSupported* : BOOL

type D3D11_CONSERVATIVE_RASTERIZATION_TIER* = enum
  D3D11_CONSERVATIVE_RASTERIZATION_NOT_SUPPORTED = 0
  D3D11_CONSERVATIVE_RASTERIZATION_TIER_1        = 1
  D3D11_CONSERVATIVE_RASTERIZATION_TIER_2        = 2
  D3D11_CONSERVATIVE_RASTERIZATION_TIER_3        = 3

type D3D11_FEATURE_DATA_D3D11_OPTIONS2* = object
  PSSpecifiedStencilRefSupported* : BOOL
  TypedUAVLoadAdditionalFormats*  : BOOL
  ROVsSupported*                  : BOOL
  ConservativeRasterizationTier*  : D3D11_CONSERVATIVE_RASTERIZATION_TIER
  TiledResourcesTier*             : D3D11_TILED_RESOURCES_TIER
  MapOnDefaultTextures*           : BOOL
  StandardSwizzle*                : BOOL
  UnifiedMemoryArchitecture*      : BOOL

type D3D11_FEATURE_DATA_D3D11_OPTIONS3* = object
  VPAndRTArrayIndexFromAnyShaderFeedingRasterizer*: BOOL

type D3D11_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT* = object
  MaxGPUVirtualAddressBitsPerResource* : uint32
  MaxGPUVirtualAddressBitsPerProcess*  : uint32

comapi ID3D11DeviceContext of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc VSSetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc PSSetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc PSSetShader(pPixelShader: ptr ID3D11PixelShader; ppClassInstances: ptr ptr ID3D11ClassInstance; NumClassInstances: uint32)
  proc PSSetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc VSSetShader(pVertexShader: ptr ID3D11VertexShader; ppClassInstances: ptr ptr ID3D11ClassInstance; NumClassInstances: uint32)
  proc DrawIndexed(IndexCount: uint32; StartIndexLocation: uint32; BaseVertexLocation: int32)
  proc Draw(VertexCount: uint32; StartVertexLocation: uint32)
  proc Map(pResource: ptr ID3D11Resource; Subresource: uint32; MapType: D3D11_MAP; MapFlags: uint32; pMappedResource: ptr D3D11_MAPPED_SUBRESOURCE): HRESULT
  proc Unmap(pResource: ptr ID3D11Resource; Subresource: uint32)
  proc PSSetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc IASetInputLayout(pInputLayout: ptr ID3D11InputLayout)
  proc IASetVertexBuffers(StartSlot: uint32; NumBuffers: uint32; ppVertexBuffers: ptr ptr ID3D11Buffer; pStrides: ptr uint32; pOffsets: ptr uint32)
  proc IASetIndexBuffer(pIndexBuffer: ptr ID3D11Buffer; Format: DXGI_FORMAT; Offset: uint32)
  proc DrawIndexedInstanced(IndexCountPerInstance: uint32; InstanceCount: uint32; StartIndexLocation: uint32; BaseVertexLocation: int32; StartInstanceLocation: uint32)
  proc DrawInstanced(VertexCountPerInstance: uint32; InstanceCount: uint32; StartVertexLocation: uint32; StartInstanceLocation: uint32)
  proc GSSetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc GSSetShader(pShader: ptr ID3D11GeometryShader; ppClassInstances: ptr ptr ID3D11ClassInstance; NumClassInstances: uint32)
  proc IASetPrimitiveTopology(Topology: D3D11_PRIMITIVE_TOPOLOGY)
  proc VSSetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc VSSetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc Begin(pAsync: ptr ID3D11Asynchronous)
  proc End(pAsync: ptr ID3D11Asynchronous)
  proc GetData(pAsync: ptr ID3D11Asynchronous; pData: pointer; DataSize: uint32; GetDataFlags: uint32): HRESULT
  proc SetPredication(pPredicate: ptr ID3D11Predicate; PredicateValue: BOOL)
  proc GSSetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc GSSetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc OMSetRenderTargets(NumViews: uint32; ppRenderTargetViews: ptr ptr ID3D11RenderTargetView; pDepthStencilView: ptr ID3D11DepthStencilView)
  proc OMSetRenderTargetsAndUnorderedAccessViews(NumRTVs: uint32; ppRenderTargetViews: ptr ptr ID3D11RenderTargetView; pDepthStencilView: ptr ID3D11DepthStencilView; UAVStartSlot: uint32; NumUAVs: uint32; ppUnorderedAccessViews: ptr ptr ID3D11UnorderedAccessView; pUAVInitialCounts: ptr uint32)
  proc OMSetBlendState(pBlendState: ptr ID3D11BlendState; BlendFactor: array[4, cfloat]; SampleMask: uint32)
  proc OMSetDepthStencilState(pDepthStencilState: ptr ID3D11DepthStencilState; StencilRef: uint32)
  proc SOSetTargets(NumBuffers: uint32; ppSOTargets: ptr ptr ID3D11Buffer; pOffsets: ptr uint32)
  proc DrawAuto()
  proc DrawIndexedInstancedIndirect(pBufferForArgs: ptr ID3D11Buffer; AlignedByteOffsetForArgs: uint32)
  proc DrawInstancedIndirect(pBufferForArgs: ptr ID3D11Buffer; AlignedByteOffsetForArgs: uint32)
  proc Dispatch(ThreadGroupCountX: uint32; ThreadGroupCountY: uint32; ThreadGroupCountZ: uint32)
  proc DispatchIndirect(pBufferForArgs: ptr ID3D11Buffer; AlignedByteOffsetForArgs: uint32)
  proc RSSetState(pRasterizerState: ptr ID3D11RasterizerState)
  proc RSSetViewports(NumViewports: uint32; pViewports: ptr D3D11_VIEWPORT)
  proc RSSetScissorRects(NumRects: uint32; pRects: ptr D3D11_RECT)
  proc CopySubresourceRegion(pDstResource: ptr ID3D11Resource; DstSubresource: uint32; DstX: uint32; DstY: uint32; DstZ: uint32; pSrcResource: ptr ID3D11Resource; SrcSubresource: uint32; pSrcBox: ptr D3D11_BOX)
  proc CopyResource(pDstResource: ptr ID3D11Resource; pSrcResource: ptr ID3D11Resource)
  proc UpdateSubresource(pDstResource: ptr ID3D11Resource; DstSubresource: uint32; pDstBox: ptr D3D11_BOX; pSrcData: pointer; SrcRowPitch: uint32; SrcDepthPitch: uint32)
  proc CopyStructureCount(pDstBuffer: ptr ID3D11Buffer; DstAlignedByteOffset: uint32; pSrcView: ptr ID3D11UnorderedAccessView)
  proc ClearRenderTargetView(pRenderTargetView: ptr ID3D11RenderTargetView; ColorRGBA: array[4, cfloat])
  proc ClearUnorderedAccessViewUint(pUnorderedAccessView: ptr ID3D11UnorderedAccessView; Values: array[4, uint32])
  proc ClearUnorderedAccessViewFloat(pUnorderedAccessView: ptr ID3D11UnorderedAccessView; Values: array[4, cfloat])
  proc ClearDepthStencilView(pDepthStencilView: ptr ID3D11DepthStencilView; ClearFlags: D3D11_CLEAR_FLAG; Depth: cfloat; Stencil: uint8)
  proc GenerateMips(pShaderResourceView: ptr ID3D11ShaderResourceView)
  proc SetResourceMinLOD(pResource: ptr ID3D11Resource; MinLOD: cfloat)
  proc GetResourceMinLOD(pResource: ptr ID3D11Resource): cfloat
  proc ResolveSubresource(pDstResource: ptr ID3D11Resource; DstSubresource: uint32; pSrcResource: ptr ID3D11Resource; SrcSubresource: uint32; Format: DXGI_FORMAT)
  proc ExecuteCommandList(pCommandList: ptr ID3D11CommandList; RestoreContextState: BOOL)
  proc HSSetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc HSSetShader(pHullShader: ptr ID3D11HullShader; ppClassInstances: ptr ptr ID3D11ClassInstance; NumClassInstances: uint32)
  proc HSSetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc HSSetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc DSSetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc DSSetShader(pDomainShader: ptr ID3D11DomainShader; ppClassInstances: ptr ptr ID3D11ClassInstance; NumClassInstances: uint32)
  proc DSSetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc DSSetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc CSSetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc CSSetUnorderedAccessViews(StartSlot: uint32; NumUAVs: uint32; ppUnorderedAccessViews: ptr ptr ID3D11UnorderedAccessView; pUAVInitialCounts: ptr uint32)
  proc CSSetShader(pComputeShader: ptr ID3D11ComputeShader; ppClassInstances: ptr ptr ID3D11ClassInstance; NumClassInstances: uint32)
  proc CSSetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc CSSetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc VSGetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc PSGetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc PSGetShader(ppPixelShader: ptr ptr ID3D11PixelShader; ppClassInstances: ptr ptr ID3D11ClassInstance; pNumClassInstances: ptr uint32)
  proc PSGetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc VSGetShader(ppVertexShader: ptr ptr ID3D11VertexShader; ppClassInstances: ptr ptr ID3D11ClassInstance; pNumClassInstances: ptr uint32)
  proc PSGetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc IAGetInputLayout(ppInputLayout: ptr ptr ID3D11InputLayout)
  proc IAGetVertexBuffers(StartSlot: uint32; NumBuffers: uint32; ppVertexBuffers: ptr ptr ID3D11Buffer; pStrides: ptr uint32; pOffsets: ptr uint32)
  proc IAGetIndexBuffer(pIndexBuffer: ptr ptr ID3D11Buffer; Format: ptr DXGI_FORMAT; Offset: ptr uint32)
  proc GSGetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc GSGetShader(ppGeometryShader: ptr ptr ID3D11GeometryShader; ppClassInstances: ptr ptr ID3D11ClassInstance; pNumClassInstances: ptr uint32)
  proc IAGetPrimitiveTopology(pTopology: ptr D3D11_PRIMITIVE_TOPOLOGY)
  proc VSGetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc VSGetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc GetPredication(ppPredicate: ptr ptr ID3D11Predicate; pPredicateValue: ptr BOOL)
  proc GSGetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc GSGetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc OMGetRenderTargets(NumViews: uint32; ppRenderTargetViews: ptr ptr ID3D11RenderTargetView; ppDepthStencilView: ptr ptr ID3D11DepthStencilView)
  proc OMGetRenderTargetsAndUnorderedAccessViews(NumRTVs: uint32; ppRenderTargetViews: ptr ptr ID3D11RenderTargetView; ppDepthStencilView: ptr ptr ID3D11DepthStencilView; UAVStartSlot: uint32; NumUAVs: uint32; ppUnorderedAccessViews: ptr ptr ID3D11UnorderedAccessView)
  proc OMGetBlendState(ppBlendState: ptr ptr ID3D11BlendState; BlendFactor: array[4, cfloat]; pSampleMask: ptr uint32)
  proc OMGetDepthStencilState(ppDepthStencilState: ptr ptr ID3D11DepthStencilState; pStencilRef: ptr uint32)
  proc SOGetTargets(NumBuffers: uint32; ppSOTargets: ptr ptr ID3D11Buffer)
  proc RSGetState(ppRasterizerState: ptr ptr ID3D11RasterizerState)
  proc RSGetViewports(pNumViewports: ptr uint32; pViewports: ptr D3D11_VIEWPORT)
  proc RSGetScissorRects(pNumRects: ptr uint32; pRects: ptr D3D11_RECT)
  proc HSGetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc HSGetShader(ppHullShader: ptr ptr ID3D11HullShader; ppClassInstances: ptr ptr ID3D11ClassInstance; pNumClassInstances: ptr uint32)
  proc HSGetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc HSGetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc DSGetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc DSGetShader(ppDomainShader: ptr ptr ID3D11DomainShader; ppClassInstances: ptr ptr ID3D11ClassInstance; pNumClassInstances: ptr uint32)
  proc DSGetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc DSGetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc CSGetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc CSGetUnorderedAccessViews(StartSlot: uint32; NumUAVs: uint32; ppUnorderedAccessViews: ptr ptr ID3D11UnorderedAccessView)
  proc CSGetShader(ppComputeShader: ptr ptr ID3D11ComputeShader; ppClassInstances: ptr ptr ID3D11ClassInstance; pNumClassInstances: ptr uint32)
  proc CSGetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc CSGetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc ClearState()
  proc Flush()
  proc GetType(): D3D11_DEVICE_CONTEXT_TYPE
  proc GetContextFlags(): uint32
  proc FinishCommandList(RestoreDeferredContextState: BOOL; ppCommandList: ptr ptr ID3D11CommandList): HRESULT

type DEPRECATED_HRESULT* = HRESULT

type D3D11_VIDEO_DECODER_DESC* = object
  Guid*         : GUID
  SampleWidth*  : uint32
  SampleHeight* : uint32
  OutputFormat* : DXGI_FORMAT

type D3D11_VIDEO_DECODER_CONFIG* = object
  guidConfigBitstreamEncryption*  : GUID
  guidConfigMBcontrolEncryption*  : GUID
  guidConfigResidDiffEncryption*  : GUID
  ConfigBitstreamRaw*             : uint32
  ConfigMBcontrolRasterOrder*     : uint32
  ConfigResidDiffHost*            : uint32
  ConfigSpatialResid8*            : uint32
  ConfigResid8Subtraction*        : uint32
  ConfigSpatialHost8or9Clipping*  : uint32
  ConfigSpatialResidInterleaved*  : uint32
  ConfigIntraResidUnsigned*       : uint32
  ConfigResidDiffAccelerator*     : uint32
  ConfigHostInverseScan*          : uint32
  ConfigSpecificIDCT*             : uint32
  Config4GroupedCoefs*            : uint32
  ConfigMinRenderTargetBuffCount* : uint16
  ConfigDecoderSpecific*          : uint16

type D3D11_AES_CTR_IV* = object
  IV*    : uint64
  Count* : uint64

type D3D11_ENCRYPTED_BLOCK_INFO* = object
  NumEncryptedBytesAtBeginning* : uint32
  NumBytesInSkipPattern*        : uint32
  NumBytesInEncryptPattern*     : uint32

type D3D11_VIDEO_DECODER_BUFFER_DESC* = object
  BufferType*         : D3D11_VIDEO_DECODER_BUFFER_TYPE
  BufferIndex*        : uint32
  DataOffset*         : uint32
  DataSize*           : uint32
  FirstMBaddress*     : uint32
  NumMBsInBuffer*     : uint32
  Width*              : uint32
  Height*             : uint32
  Stride*             : uint32
  ReservedBits*       : uint32
  pIV*                : pointer
  IVSize*             : uint32
  PartialEncryption*  : BOOL
  EncryptedBlockInfo* : D3D11_ENCRYPTED_BLOCK_INFO

type D3D11_VIDEO_DECODER_EXTENSION* = object
  Function*              : uint32
  pPrivateInputData*     : pointer
  PrivateInputDataSize*  : uint32
  pPrivateOutputData*    : pointer
  PrivateOutputDataSize* : uint32
  ResourceCount*         : uint32
  ppResourceList*        : ptr ptr ID3D11Resource

comapi ID3D11VideoDecoder of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetCreationParameters(pVideoDesc: ptr D3D11_VIDEO_DECODER_DESC; pConfig: ptr D3D11_VIDEO_DECODER_CONFIG): HRESULT
  proc GetDriverHandle(pDriverHandle: ptr HANDLE): HRESULT

type D3D11_VIDEO_PROCESSOR_CAPS* = object
  DeviceCaps*              : uint32
  FeatureCaps*             : uint32
  FilterCaps*              : uint32
  InputFormatCaps*         : uint32
  AutoStreamCaps*          : uint32
  StereoCaps*              : uint32
  RateConversionCapsCount* : uint32
  MaxInputStreams*         : uint32
  MaxStreamStates*         : uint32

type D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS* = object
  PastFrames*      : uint32
  FutureFrames*    : uint32
  ProcessorCaps*   : uint32
  ITelecineCaps*   : uint32
  CustomRateCount* : uint32

type D3D11_VIDEO_CONTENT_PROTECTION_CAPS* = object
  Caps*                 : uint32
  KeyExchangeTypeCount* : uint32
  BlockAlignmentSize*   : uint32
  ProtectedMemorySize*  : uint64

type D3D11_VIDEO_PROCESSOR_CUSTOM_RATE* = object
  CustomRate*          : DXGI_RATIONAL
  OutputFrames*        : uint32
  InputInterlaced*     : BOOL
  InputFramesOrFields* : uint32

type D3D11_VIDEO_PROCESSOR_FILTER_RANGE* = object
  Minimum*    : cint
  Maximum*    : cint
  Default*    : cint
  Multiplier* : cfloat

type D3D11_VIDEO_PROCESSOR_CONTENT_DESC* = object
  InputFrameFormat* : D3D11_VIDEO_FRAME_FORMAT
  InputFrameRate*   : DXGI_RATIONAL
  InputWidth*       : uint32
  InputHeight*      : uint32
  OutputFrameRate*  : DXGI_RATIONAL
  OutputWidth*      : uint32
  OutputHeight*     : uint32
  Usage*            : D3D11_VIDEO_USAGE

comapi ID3D11VideoProcessorEnumerator of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetVideoProcessorContentDesc(pContentDesc: ptr D3D11_VIDEO_PROCESSOR_CONTENT_DESC): HRESULT
  proc CheckVideoProcessorFormat(Format: DXGI_FORMAT; pFlags: ptr uint32): HRESULT
  proc GetVideoProcessorCaps(pCaps: ptr D3D11_VIDEO_PROCESSOR_CAPS): HRESULT
  proc GetVideoProcessorRateConversionCaps(TypeIndex: uint32; pCaps: ptr D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS): HRESULT
  proc GetVideoProcessorCustomRate(TypeIndex: uint32; CustomRateIndex: uint32; pRate: ptr D3D11_VIDEO_PROCESSOR_CUSTOM_RATE): HRESULT
  proc GetVideoProcessorFilterRange(Filter: D3D11_VIDEO_PROCESSOR_FILTER; pRange: ptr D3D11_VIDEO_PROCESSOR_FILTER_RANGE): HRESULT

type D3D11_VIDEO_COLOR_RGBA* = object
  R* : cfloat
  G* : cfloat
  B* : cfloat
  A* : cfloat

type D3D11_VIDEO_COLOR_YCbCrA* = object
  Y*  : cfloat
  Cb* : cfloat
  Cr* : cfloat
  A*  : cfloat

type D3D11_VIDEO_COLOR* {.union.} = object
  YCbCrA* : D3D11_VIDEO_COLOR_YCbCrA
  RGBA*   : D3D11_VIDEO_COLOR_RGBA

type D3D11_VIDEO_PROCESSOR_COLOR_SPACE* = object
  Value*: uint32

comapi ID3D11VideoProcessor of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetContentDesc(pDesc: ptr D3D11_VIDEO_PROCESSOR_CONTENT_DESC)
  proc GetRateConversionCaps(pCaps: ptr D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS)

type D3D11_OMAC* = object
  Omac* : array[16, uint8]

comapi ID3D11AuthenticatedChannel of IUnknown:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetCertificateSize(pCertificateSize: ptr uint32): HRESULT
  proc GetCertificate(CertificateSize: uint32; pCertificate: ptr uint8): HRESULT
  proc GetChannelHandle(pChannelHandle: ptr HANDLE)

type D3D11_AUTHENTICATED_QUERY_INPUT* = object
  QueryType*      : GUID
  hChannel*       : HANDLE
  SequenceNumber* : uint32

type D3D11_AUTHENTICATED_QUERY_OUTPUT* = object
  omac*           : D3D11_OMAC
  QueryType*      : GUID
  hChannel*       : HANDLE
  SequenceNumber* : uint32
  ReturnCode*     : HRESULT

type D3D11_AUTHENTICATED_PROTECTION_FLAGS* = object
  Value* : uint32

type D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT* = object
  Output*          : D3D11_AUTHENTICATED_QUERY_OUTPUT
  ProtectionFlags* : D3D11_AUTHENTICATED_PROTECTION_FLAGS

type D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT* = object
  Output*      : D3D11_AUTHENTICATED_QUERY_OUTPUT
  ChannelType* : D3D11_AUTHENTICATED_CHANNEL_TYPE

type D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT* = object
  Output*       : D3D11_AUTHENTICATED_QUERY_OUTPUT
  DeviceHandle* : HANDLE

type D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT* = object
  Input*         : D3D11_AUTHENTICATED_QUERY_INPUT
  DecoderHandle* : HANDLE

type D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT* = object
  Output*              : D3D11_AUTHENTICATED_QUERY_OUTPUT
  DecoderHandle*       : HANDLE
  CryptoSessionHandle* : HANDLE
  DeviceHandle*        : HANDLE

type D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT* = object
  Output*                               : D3D11_AUTHENTICATED_QUERY_OUTPUT
  RestrictedSharedResourceProcessCount* : uint32

type D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT* = object
  Input*        : D3D11_AUTHENTICATED_QUERY_INPUT
  ProcessIndex* : uint32

type D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT* = object
  Output*            : D3D11_AUTHENTICATED_QUERY_OUTPUT
  ProcessIndex*      : uint32
  ProcessIdentifier* : D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE
  ProcessHandle*     : HANDLE

type D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT* = object
  Output*                                   : D3D11_AUTHENTICATED_QUERY_OUTPUT
  UnrestrictedProtectedSharedResourceCount* : uint32

type D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT* = object
  Input*               : D3D11_AUTHENTICATED_QUERY_INPUT
  DeviceHandle*        : HANDLE
  CryptoSessionHandle* : HANDLE

type D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT* = object
  Output*              : D3D11_AUTHENTICATED_QUERY_OUTPUT
  DeviceHandle*        : HANDLE
  CryptoSessionHandle* : HANDLE
  OutputIDCount*       : uint32

type D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT* = object
  Input*               : D3D11_AUTHENTICATED_QUERY_INPUT
  DeviceHandle*        : HANDLE
  CryptoSessionHandle* : HANDLE
  OutputIDIndex*       : uint32

type D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT* = object
  Output*              : D3D11_AUTHENTICATED_QUERY_OUTPUT
  DeviceHandle*        : HANDLE
  CryptoSessionHandle* : HANDLE
  OutputIDIndex*       : uint32
  OutputID*            : uint64

type D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_OUTPUT* = object
  Output*                          : D3D11_AUTHENTICATED_QUERY_OUTPUT
  BusType*                         : D3D11_BUS_TYPE
  AccessibleInContiguousBlocks*    : BOOL
  AccessibleInNonContiguousBlocks* : BOOL

type D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT* = object
  Output*               : D3D11_AUTHENTICATED_QUERY_OUTPUT
  EncryptionGuidCount*  : uint32

type D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT* = object
  Input*               : D3D11_AUTHENTICATED_QUERY_INPUT
  EncryptionGuidIndex* : uint32

type D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT* = object
  Output*              : D3D11_AUTHENTICATED_QUERY_OUTPUT
  EncryptionGuidIndex* : uint32
  EncryptionGuid*      : GUID

type D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT* = object
  Output*         : D3D11_AUTHENTICATED_QUERY_OUTPUT
  EncryptionGuid* : GUID

type D3D11_AUTHENTICATED_CONFIGURE_INPUT* = object
  omac*           : D3D11_OMAC
  ConfigureType*  : GUID
  hChannel*       : HANDLE
  SequenceNumber* : uint32

type D3D11_AUTHENTICATED_CONFIGURE_OUTPUT* = object
  omac*           : D3D11_OMAC
  ConfigureType*  : GUID
  hChannel*       : HANDLE
  SequenceNumber* : uint32
  ReturnCode*     : HRESULT

type D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT* = object
  Parameters*             : D3D11_AUTHENTICATED_CONFIGURE_INPUT
  StartSequenceQuery*     : uint32
  StartSequenceConfigure* : uint32

type D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT* = object
  Parameters*  : D3D11_AUTHENTICATED_CONFIGURE_INPUT
  Protections* : D3D11_AUTHENTICATED_PROTECTION_FLAGS

type D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT* = object
  Parameters*          : D3D11_AUTHENTICATED_CONFIGURE_INPUT
  DecoderHandle*       : HANDLE
  CryptoSessionHandle* : HANDLE
  DeviceHandle*        : HANDLE

type D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT* = object
  Parameters*    : D3D11_AUTHENTICATED_CONFIGURE_INPUT
  ProcessType*   : D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE
  ProcessHandle* : HANDLE
  AllowAccess*   : BOOL

type D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT* = object
  Parameters*     : D3D11_AUTHENTICATED_CONFIGURE_INPUT
  EncryptionGuid* : GUID

comapi ID3D11CryptoSession of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetCryptoType(pCryptoType: ptr GUID)
  proc GetDecoderProfile(pDecoderProfile: ptr GUID)
  proc GetCertificateSize(pCertificateSize: ptr uint32): HRESULT
  proc GetCertificate(CertificateSize: uint32; pCertificate: ptr uint8): HRESULT
  proc GetCryptoSessionHandle(pCryptoSessionHandle: ptr HANDLE)

type D3D11_TEX2D_VDOV* = object
  ArraySlice* : uint32

type D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC_UNION* {.union.} = object
  Texture2D* : D3D11_TEX2D_VDOV

type D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC* = object
  DecodeProfile  : GUID
  ViewDimension* : D3D11_VDOV_DIMENSION
  Union*         : D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC_UNION

comapi ID3D11VideoDecoderOutputView of ID3D11View:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetResource(ppResource: ptr ptr ID3D11Resource)
  proc GetDesc(pDesc: ptr D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC)

type D3D11_TEX2D_VPIV* = object
  MipSlice*   : uint32
  ArraySlice* : uint32

type D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC_UNION* {.union.} = object
  Texture2D* : D3D11_TEX2D_VPIV

type D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC* = object
  FourCC*        : uint32
  ViewDimension* : D3D11_VPIV_DIMENSION
  Union*         : D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC_UNION

comapi ID3D11VideoProcessorInputView of ID3D11View:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetResource(ppResource: ptr ptr ID3D11Resource)
  proc GetDesc(pDesc: ptr D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC)

type D3D11_VPOV_DIMENSION* {.size:sizeof(cint).} = enum
  D3D11_VPOV_DIMENSION_UNKNOWN        = 0
  D3D11_VPOV_DIMENSION_TEXTURE2D      = 1
  D3D11_VPOV_DIMENSION_TEXTURE2DARRAY = 2

type D3D11_TEX2D_VPOV* = object
  MipSlice* : uint32

type D3D11_TEX2D_ARRAY_VPOV* = object
  MipSlice*        : uint32
  FirstArraySlice* : uint32
  ArraySize*       : uint32

type D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC_UNION* {.union.} = object
  Texture2D*      : D3D11_TEX2D_VPOV
  Texture2DArray* : D3D11_TEX2D_ARRAY_VPOV

type D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC* = object
  ViewDimension* : D3D11_VPOV_DIMENSION
  Union*         : D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC_UNION

comapi ID3D11VideoProcessorOutputView of ID3D11View:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetResource(ppResource: ptr ptr ID3D11Resource)
  proc GetDesc(pDesc: ptr D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC)

type D3D11_VIDEO_PROCESSOR_STREAM* = object
  Enable*                : BOOL
  OutputIndex*           : uint32
  InputFrameOrField*     : uint32
  PastFrames*            : uint32
  FutureFrames*          : uint32
  ppPastSurfaces*        : ptr ptr ID3D11VideoProcessorInputView
  pInputSurface*         : ptr ID3D11VideoProcessorInputView
  ppFutureSurfaces*      : ptr ptr ID3D11VideoProcessorInputView
  ppPastSurfacesRight*   : ptr ptr ID3D11VideoProcessorInputView
  pInputSurfaceRight*    : ptr ID3D11VideoProcessorInputView
  ppFutureSurfacesRight* : ptr ptr ID3D11VideoProcessorInputView

comapi ID3D11VideoContext of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr pointer)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetDecoderBuffer(pDecoder: ptr ID3D11VideoDecoder; `Type`: D3D11_VIDEO_DECODER_BUFFER_TYPE; pBufferSize: ptr uint32; ppBuffer: ptr pointer): HRESULT
  proc ReleaseDecoderBuffer(pDecoder: ptr ID3D11VideoDecoder; `Type`: D3D11_VIDEO_DECODER_BUFFER_TYPE): HRESULT
  proc DecoderBeginFrame(pDecoder: ptr ID3D11VideoDecoder; pView: ptr ID3D11VideoDecoderOutputView; ContentKeySize: uint32; pContentKey: pointer): HRESULT
  proc DecoderEndFrame(pDecoder: ptr ID3D11VideoDecoder): HRESULT
  proc SubmitDecoderBuffers(pDecoder: ptr ID3D11VideoDecoder; NumBuffers: uint32; pBufferDesc: ptr D3D11_VIDEO_DECODER_BUFFER_DESC): HRESULT
  proc DecoderExtension(pDecoder: ptr ID3D11VideoDecoder; pExtensionData: ptr D3D11_VIDEO_DECODER_EXTENSION): DEPRECATED_HRESULT
  proc VideoProcessorSetOutputTargetRect(pVideoProcessor: ptr ID3D11VideoProcessor; Enable: BOOL; pRect: ptr RECT)
  proc VideoProcessorSetOutputBackgroundColor(pVideoProcessor: ptr ID3D11VideoProcessor; YCbCr: BOOL; pColor: ptr D3D11_VIDEO_COLOR)
  proc VideoProcessorSetOutputColorSpace(pVideoProcessor: ptr ID3D11VideoProcessor; pColorSpace: ptr D3D11_VIDEO_PROCESSOR_COLOR_SPACE)
  proc VideoProcessorSetOutputAlphaFillMode(pVideoProcessor: ptr ID3D11VideoProcessor; AlphaFillMode: D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE; StreamIndex: uint32)
  proc VideoProcessorSetOutputConstriction(pVideoProcessor: ptr ID3D11VideoProcessor; Enable: BOOL; Size: SIZE)
  proc VideoProcessorSetOutputStereoMode(pVideoProcessor: ptr ID3D11VideoProcessor; Enable: BOOL)
  proc VideoProcessorSetOutputExtension(pVideoProcessor: ptr ID3D11VideoProcessor; pExtensionGuid: ptr GUID; DataSize: uint32; pData: pointer): DEPRECATED_HRESULT
  proc VideoProcessorGetOutputTargetRect(pVideoProcessor: ptr ID3D11VideoProcessor; Enabled: ptr BOOL; pRect: ptr RECT)
  proc VideoProcessorGetOutputBackgroundColor(pVideoProcessor: ptr ID3D11VideoProcessor; pYCbCr: ptr BOOL; pColor: ptr D3D11_VIDEO_COLOR)
  proc VideoProcessorGetOutputColorSpace(pVideoProcessor: ptr ID3D11VideoProcessor; pColorSpace: ptr D3D11_VIDEO_PROCESSOR_COLOR_SPACE)
  proc VideoProcessorGetOutputAlphaFillMode(pVideoProcessor: ptr ID3D11VideoProcessor; pAlphaFillMode: ptr D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE; pStreamIndex: ptr uint32)
  proc VideoProcessorGetOutputConstriction(pVideoProcessor: ptr ID3D11VideoProcessor; pEnabled: ptr BOOL; pSize: ptr SIZE)
  proc VideoProcessorGetOutputStereoMode(pVideoProcessor: ptr ID3D11VideoProcessor; pEnabled: ptr BOOL)
  proc VideoProcessorGetOutputExtension(pVideoProcessor: ptr ID3D11VideoProcessor; pExtensionGuid: ptr GUID; DataSize: uint32; pData: pointer): DEPRECATED_HRESULT
  proc VideoProcessorSetStreamFrameFormat(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; FrameFormat: D3D11_VIDEO_FRAME_FORMAT)
  proc VideoProcessorSetStreamColorSpace(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pColorSpace: ptr D3D11_VIDEO_PROCESSOR_COLOR_SPACE)
  proc VideoProcessorSetStreamOutputRate(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; OutputRate: D3D11_VIDEO_PROCESSOR_OUTPUT_RATE; RepeatFrame: BOOL; pCustomRate: ptr DXGI_RATIONAL)
  proc VideoProcessorSetStreamSourceRect(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL; pRect: ptr RECT)
  proc VideoProcessorSetStreamDestRect(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL; pRect: ptr RECT)
  proc VideoProcessorSetStreamAlpha(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL; Alpha: cfloat)
  proc VideoProcessorSetStreamPalette(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Count: uint32; pEntries: ptr uint32)
  proc VideoProcessorSetStreamPixelAspectRatio(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL; pSourceAspectRatio: ptr DXGI_RATIONAL; pDestinationAspectRatio: ptr DXGI_RATIONAL)
  proc VideoProcessorSetStreamLumaKey(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL; Lower: cfloat; Upper: cfloat)
  proc VideoProcessorSetStreamStereoFormat(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL; Format: D3D11_VIDEO_PROCESSOR_STEREO_FORMAT; LeftViewFrame0: BOOL; BaseViewFrame0: BOOL; FlipMode: D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE; MonoOffset: cint)
  proc VideoProcessorSetStreamAutoProcessingMode(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL)
  proc VideoProcessorSetStreamFilter(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Filter: D3D11_VIDEO_PROCESSOR_FILTER; Enable: BOOL; Level: cint)
  proc VideoProcessorSetStreamExtension(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pExtensionGuid: ptr GUID; DataSize: uint32; pData: pointer): DEPRECATED_HRESULT
  proc VideoProcessorGetStreamFrameFormat(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pFrameFormat: ptr D3D11_VIDEO_FRAME_FORMAT)
  proc VideoProcessorGetStreamColorSpace(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pColorSpace: ptr D3D11_VIDEO_PROCESSOR_COLOR_SPACE)
  proc VideoProcessorGetStreamOutputRate(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pOutputRate: ptr D3D11_VIDEO_PROCESSOR_OUTPUT_RATE; pRepeatFrame: ptr BOOL; pCustomRate: ptr DXGI_RATIONAL)
  proc VideoProcessorGetStreamSourceRect(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnabled: ptr BOOL; pRect: ptr RECT)
  proc VideoProcessorGetStreamDestRect(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnabled: ptr BOOL; pRect: ptr RECT)
  proc VideoProcessorGetStreamAlpha(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnabled: ptr BOOL; pAlpha: ptr cfloat)
  proc VideoProcessorGetStreamPalette(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Count: uint32; pEntries: ptr uint32)
  proc VideoProcessorGetStreamPixelAspectRatio(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnabled: ptr BOOL; pSourceAspectRatio: ptr DXGI_RATIONAL; pDestinationAspectRatio: ptr DXGI_RATIONAL)
  proc VideoProcessorGetStreamLumaKey(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnabled: ptr BOOL; pLower: ptr cfloat; pUpper: ptr cfloat)
  proc VideoProcessorGetStreamStereoFormat(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnable: ptr BOOL; pFormat: ptr D3D11_VIDEO_PROCESSOR_STEREO_FORMAT; pLeftViewFrame0: ptr BOOL; pBaseViewFrame0: ptr BOOL; pFlipMode: ptr D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE; MonoOffset: ptr cint)
  proc VideoProcessorGetStreamAutoProcessingMode(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnabled: ptr BOOL)
  proc VideoProcessorGetStreamFilter(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Filter: D3D11_VIDEO_PROCESSOR_FILTER; pEnabled: ptr BOOL; pLevel: ptr cint)
  proc VideoProcessorGetStreamExtension(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pExtensionGuid: ptr GUID; DataSize: uint32; pData: pointer): DEPRECATED_HRESULT
  proc VideoProcessorBlt(pVideoProcessor: ptr ID3D11VideoProcessor; pView: ptr ID3D11VideoProcessorOutputView; OutputFrame: uint32; StreamCount: uint32; pStreams: ptr D3D11_VIDEO_PROCESSOR_STREAM): HRESULT
  proc NegotiateCryptoSessionKeyExchange(pCryptoSession: ptr ID3D11CryptoSession; DataSize: uint32; pData: pointer): HRESULT
  proc EncryptionBlt(pCryptoSession: ptr ID3D11CryptoSession; pSrcSurface: ptr ID3D11Texture2D; pDstSurface: ptr ID3D11Texture2D; IVSize: uint32; pIV: pointer)
  proc DecryptionBlt(pCryptoSession: ptr ID3D11CryptoSession; pSrcSurface: ptr ID3D11Texture2D; pDstSurface: ptr ID3D11Texture2D; pEncryptedBlockInfo: ptr D3D11_ENCRYPTED_BLOCK_INFO; ContentKeySize: uint32; pContentKey: pointer; IVSize: uint32; pIV: pointer)
  proc StartSessionKeyRefresh(pCryptoSession: ptr ID3D11CryptoSession; RandomNumberSize: uint32; pRandomNumber: pointer)
  proc FinishSessionKeyRefresh(pCryptoSession: ptr ID3D11CryptoSession)
  proc GetEncryptionBltKey(pCryptoSession: ptr ID3D11CryptoSession; KeySize: uint32; pReadbackKey: pointer): HRESULT
  proc NegotiateAuthenticatedChannelKeyExchange(pChannel: ptr ID3D11AuthenticatedChannel; DataSize: uint32; pData: pointer): HRESULT
  proc QueryAuthenticatedChannel(pChannel: ptr ID3D11AuthenticatedChannel; InputSize: uint32; pInput: pointer; OutputSize: uint32; pOutput: pointer): HRESULT
  proc ConfigureAuthenticatedChannel(pChannel: ptr ID3D11AuthenticatedChannel; InputSize: uint32; pInput: pointer; pOutput: ptr D3D11_AUTHENTICATED_CONFIGURE_OUTPUT): HRESULT
  proc VideoProcessorSetStreamRotation(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL; Rotation: D3D11_VIDEO_PROCESSOR_ROTATION)
  proc VideoProcessorGetStreamRotation(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnable: ptr BOOL; pRotation: ptr D3D11_VIDEO_PROCESSOR_ROTATION)

comapi ID3D11VideoDevice of IUnknown:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc CreateVideoDecoder(pVideoDesc: ptr D3D11_VIDEO_DECODER_DESC; pConfig: ptr D3D11_VIDEO_DECODER_CONFIG; ppDecoder: ptr ptr ID3D11VideoDecoder): HRESULT
  proc CreateVideoProcessor(pEnum: ptr ID3D11VideoProcessorEnumerator; RateConversionIndex: uint32; ppVideoProcessor: ptr ptr ID3D11VideoProcessor): HRESULT
  proc CreateAuthenticatedChannel(ChannelType: D3D11_AUTHENTICATED_CHANNEL_TYPE; ppAuthenticatedChannel: ptr ptr ID3D11AuthenticatedChannel): HRESULT
  proc CreateCryptoSession(pCryptoType: ptr GUID; pDecoderProfile: ptr GUID; pKeyExchangeType: ptr GUID; ppCryptoSession: ptr ptr ID3D11CryptoSession): HRESULT
  proc CreateVideoDecoderOutputView(pResource: ptr ID3D11Resource; pDesc: ptr D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC; ppVDOVView: ptr ptr ID3D11VideoDecoderOutputView): HRESULT
  proc CreateVideoProcessorInputView(pResource: ptr ID3D11Resource; pEnum: ptr ID3D11VideoProcessorEnumerator; pDesc: ptr D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC; ppVPIView: ptr ptr ID3D11VideoProcessorInputView): HRESULT
  proc CreateVideoProcessorOutputView(pResource: ptr ID3D11Resource; pEnum: ptr ID3D11VideoProcessorEnumerator; pDesc: ptr D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC; ppVPOView: ptr ptr ID3D11VideoProcessorOutputView): HRESULT
  proc CreateVideoProcessorEnumerator(pDesc: ptr D3D11_VIDEO_PROCESSOR_CONTENT_DESC; ppEnum: ptr ptr ID3D11VideoProcessorEnumerator): HRESULT
  proc GetVideoDecoderProfileCount(): uint32
  proc GetVideoDecoderProfile(Index: uint32; pDecoderProfile: ptr GUID): HRESULT
  proc CheckVideoDecoderFormat(pDecoderProfile: ptr GUID; Format: DXGI_FORMAT; pSupported: ptr BOOL): HRESULT
  proc GetVideoDecoderConfigCount(pDesc: ptr D3D11_VIDEO_DECODER_DESC; pCount: ptr uint32): HRESULT
  proc GetVideoDecoderConfig(pDesc: ptr D3D11_VIDEO_DECODER_DESC; Index: uint32; pConfig: ptr D3D11_VIDEO_DECODER_CONFIG): HRESULT
  proc GetContentProtectionCaps(pCryptoType: ptr GUID; pDecoderProfile: ptr GUID; pCaps: ptr D3D11_VIDEO_CONTENT_PROTECTION_CAPS): HRESULT
  proc CheckCryptoKeyExchange(pCryptoType: ptr GUID; pDecoderProfile: ptr GUID; Index: uint32; pKeyExchangeType: ptr GUID): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT

comapi ID3D11Device of IUnknown:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc CreateBuffer(pDesc: ptr D3D11_BUFFER_DESC; pInitialData: ptr D3D11_SUBRESOURCE_DATA; ppBuffer: ptr ptr ID3D11Buffer): HRESULT
  proc CreateTexture1D(pDesc: ptr D3D11_TEXTURE1D_DESC; pInitialData: ptr D3D11_SUBRESOURCE_DATA; ppTexture1D: ptr ptr ID3D11Texture1D): HRESULT
  proc CreateTexture2D(pDesc: ptr D3D11_TEXTURE2D_DESC; pInitialData: ptr D3D11_SUBRESOURCE_DATA; ppTexture2D: ptr ptr ID3D11Texture2D): HRESULT
  proc CreateTexture3D(pDesc: ptr D3D11_TEXTURE3D_DESC; pInitialData: ptr D3D11_SUBRESOURCE_DATA; ppTexture3D: ptr ptr ID3D11Texture3D): HRESULT
  proc CreateShaderResourceView(pResource: ptr ID3D11Resource; pDesc: ptr D3D11_SHADER_RESOURCE_VIEW_DESC; ppSRView: ptr ptr ID3D11ShaderResourceView): HRESULT
  proc CreateUnorderedAccessView(pResource: ptr ID3D11Resource; pDesc: ptr D3D11_UNORDERED_ACCESS_VIEW_DESC; ppUAView: ptr ptr ID3D11UnorderedAccessView): HRESULT
  proc CreateRenderTargetView(pResource: ptr ID3D11Resource; pDesc: ptr D3D11_RENDER_TARGET_VIEW_DESC; ppRTView: ptr ptr ID3D11RenderTargetView): HRESULT
  proc CreateDepthStencilView(pResource: ptr ID3D11Resource; pDesc: ptr D3D11_DEPTH_STENCIL_VIEW_DESC; ppDepthStencilView: ptr ptr ID3D11DepthStencilView): HRESULT
  proc CreateInputLayout(pInputElementDescs: ptr D3D11_INPUT_ELEMENT_DESC; NumElements: uint32; pShaderBytecodeWithInputSignature: pointer; BytecodeLength: uint; ppInputLayout: ptr ptr ID3D11InputLayout): HRESULT
  proc CreateVertexShader(pShaderBytecode: pointer; BytecodeLength: uint; pClassLinkage: ptr ID3D11ClassLinkage; ppVertexShader: ptr ptr ID3D11VertexShader): HRESULT
  proc CreateGeometryShader(pShaderBytecode: pointer; BytecodeLength: uint; pClassLinkage: ptr ID3D11ClassLinkage; ppGeometryShader: ptr ptr ID3D11GeometryShader): HRESULT
  proc CreateGeometryShaderWithStreamOutput(pShaderBytecode: pointer; BytecodeLength: uint; pSODeclaration: ptr D3D11_SO_DECLARATION_ENTRY; NumEntries: uint32; pBufferStrides: ptr uint32; NumStrides: uint32; RasterizedStream: uint32; pClassLinkage: ptr ID3D11ClassLinkage; ppGeometryShader: ptr ptr ID3D11GeometryShader): HRESULT
  proc CreatePixelShader(pShaderBytecode: pointer; BytecodeLength: uint; pClassLinkage: ptr ID3D11ClassLinkage; ppPixelShader: ptr ptr ID3D11PixelShader): HRESULT
  proc CreateHullShader(pShaderBytecode: pointer; BytecodeLength: uint; pClassLinkage: ptr ID3D11ClassLinkage; ppHullShader: ptr ptr ID3D11HullShader): HRESULT
  proc CreateDomainShader(pShaderBytecode: pointer; BytecodeLength: uint; pClassLinkage: ptr ID3D11ClassLinkage; ppDomainShader: ptr ptr ID3D11DomainShader): HRESULT
  proc CreateComputeShader(pShaderBytecode: pointer; BytecodeLength: uint; pClassLinkage: ptr ID3D11ClassLinkage; ppComputeShader: ptr ptr ID3D11ComputeShader): HRESULT
  proc CreateClassLinkage(ppLinkage: ptr ptr ID3D11ClassLinkage): HRESULT
  proc CreateBlendState(pBlendStateDesc: ptr D3D11_BLEND_DESC; ppBlendState: ptr ptr ID3D11BlendState): HRESULT
  proc CreateDepthStencilState(pDepthStencilDesc: ptr D3D11_DEPTH_STENCIL_DESC; ppDepthStencilState: ptr ptr ID3D11DepthStencilState): HRESULT
  proc CreateRasterizerState(pRasterizerDesc: ptr D3D11_RASTERIZER_DESC; ppRasterizerState: ptr ptr ID3D11RasterizerState): HRESULT
  proc CreateSamplerState(pSamplerDesc: ptr D3D11_SAMPLER_DESC; ppSamplerState: ptr ptr ID3D11SamplerState): HRESULT
  proc CreateQuery(pQueryDesc: ptr D3D11_QUERY_DESC; ppQuery: ptr ptr ID3D11Query): HRESULT
  proc CreatePredicate(pPredicateDesc: ptr D3D11_QUERY_DESC; ppPredicate: ptr ptr ID3D11Predicate): HRESULT
  proc CreateCounter(pCounterDesc: ptr D3D11_COUNTER_DESC; ppCounter: ptr ptr ID3D11Counter): HRESULT
  proc CreateDeferredContext(ContextFlags: uint32; ppDeferredContext: ptr ptr ID3D11DeviceContext): HRESULT
  proc OpenSharedResource(hResource: HANDLE; ReturnedInterface: ptr IID; ppResource: ptr pointer): HRESULT
  proc CheckFormatSupport(Format: DXGI_FORMAT; pFormatSupport: ptr uint32): HRESULT
  proc CheckMultisampleQualityLevels(Format: DXGI_FORMAT; SampleCount: uint32; pNumQualityLevels: ptr uint32): HRESULT
  proc CheckCounterInfo(pCounterInfo: ptr D3D11_COUNTER_INFO)
  proc CheckCounter(pDesc: ptr D3D11_COUNTER_DESC; pType: ptr D3D11_COUNTER_TYPE; pActiveCounters: ptr uint32; szName: cstring; pNameLength: ptr uint32; szUnits: cstring; pUnitsLength: ptr uint32; szDescription: cstring; pDescriptionLength: ptr uint32): HRESULT
  proc CheckFeatureSupport(Feature: D3D11_FEATURE; pFeatureSupportData: pointer; FeatureSupportDataSize: uint32): HRESULT
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetFeatureLevel(): D3D_FEATURE_LEVEL
  proc GetCreationFlags(): uint32
  proc GetDeviceRemovedReason(): HRESULT
  proc GetImmediateContext(ppImmediateContext: ptr ptr ID3D11DeviceContext)
  proc SetExceptionMode(RaiseFlags: uint32): HRESULT
  proc GetExceptionMode(): uint32

type D3D11_CREATE_DEVICE_FLAG* {.size:sizeof(cint).} = enum
  D3D11_CREATE_DEVICE_SINGLETHREADED                                = 0x001
  D3D11_CREATE_DEVICE_DEBUG                                         = 0x002
  D3D11_CREATE_DEVICE_SWITCH_TO_REF                                 = 0x004
  D3D11_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS      = 0x008
  D3D11_CREATE_DEVICE_BGRA_SUPPORT                                  = 0x020
  D3D11_CREATE_DEVICE_DEBUGGABLE                                    = 0x040
  D3D11_CREATE_DEVICE_PREVENT_ALTERING_LAYER_SETTINGS_FROM_REGISTRY = 0x080
  D3D11_CREATE_DEVICE_DISABLE_GPU_TIMEOUT                           = 0x100
  D3D11_CREATE_DEVICE_VIDEO_SUPPORT                                 = 0x800

const D3D11_SDK_VERSION* = 7

type PFN_D3D11_CREATE_DEVICE* = proc(
  pAdapter           : ptr IDXGIAdapter;
  DriverType         : D3D_DRIVER_TYPE;
  Software           : HMODULE;
  Flags              : uint32;
  pFeatureLevels     : ptr D3D_FEATURE_LEVEL;
  FeatureLevels      : uint32;
  SDKVersion         : uint32;
  ppDevice           : ptr ptr ID3D11Device;
  pFeatureLevel      : ptr D3D_FEATURE_LEVEL;
  ppImmediateContext : ptr ptr ID3D11DeviceContext;
): HRESULT {.stdcall.}

proc D3D11CreateDevice*(
  pAdapter           : ptr IDXGIAdapter;
  DriverType         : D3D_DRIVER_TYPE;
  Software           : HMODULE;
  Flags              : uint32;
  pFeatureLevels     : ptr D3D_FEATURE_LEVEL;
  FeatureLevels      : uint32;
  SDKVersion         : uint32;
  ppDevice           : ptr ptr ID3D11Device;
  pFeatureLevel      : ptr D3D_FEATURE_LEVEL;
  ppImmediateContext : ptr ptr ID3D11DeviceContext;
): HRESULT {.stdcall, importc}

type PFN_D3D11_CREATE_DEVICE_AND_SWAP_CHAIN* = proc(
  pAdapter           : ptr IDXGIAdapter;
  DriverType         : D3D_DRIVER_TYPE;
  Software           : HMODULE;
  Flags              : uint32;
  pFeatureLevels     : ptr D3D_FEATURE_LEVEL;
  FeatureLevels      : uint32;
  SDKVersion         : uint32;
  pSwapChainDesc     : ptr DXGI_SWAP_CHAIN_DESC;
  ppSwapChain        : ptr ptr IDXGISwapChain;
  ppDevice           : ptr ptr ID3D11Device;
  pFeatureLevel      : ptr D3D_FEATURE_LEVEL;
  ppImmediateContext : ptr ptr ID3D11DeviceContext;
): HRESULT {.stdcall.}

proc D3D11CreateDeviceAndSwapChain*(
  pAdapter           : ptr IDXGIAdapter;
  DriverType         : D3D_DRIVER_TYPE;
  Software           : HMODULE;
  Flags              : uint32;
  pFeatureLevels     : ptr D3D_FEATURE_LEVEL;
  FeatureLevels      : uint32;
  SDKVersion         : uint32;
  pSwapChainDesc     : ptr DXGI_SWAP_CHAIN_DESC;
  ppSwapChain        : ptr ptr IDXGISwapChain;
  ppDevice           : ptr ptr ID3D11Device;
  pFeatureLevel      : ptr D3D_FEATURE_LEVEL;
  ppImmediateContext : ptr ptr ID3D11DeviceContext;
): HRESULT {.stdcall, importc.}

var
  IID_ID3D11Asynchronous*             {.importc.}: IID
  IID_ID3D11AuthenticatedChannel*     {.importc.}: IID
  IID_ID3D11BlendState*               {.importc.}: IID
  IID_ID3D11Buffer*                   {.importc.}: IID
  IID_ID3D11ClassInstance*            {.importc.}: IID
  IID_ID3D11ClassLinkage*             {.importc.}: IID
  IID_ID3D11CommandList*              {.importc.}: IID
  IID_ID3D11ComputeShader*            {.importc.}: IID
  IID_ID3D11Counter*                  {.importc.}: IID
  IID_ID3D11CryptoSession*            {.importc.}: IID
  IID_ID3D11DepthStencilState*        {.importc.}: IID
  IID_ID3D11DepthStencilView*         {.importc.}: IID
  IID_ID3D11Device*                   {.importc.}: IID
  IID_ID3D11DeviceChild*              {.importc.}: IID
  IID_ID3D11DeviceContext*            {.importc.}: IID
  IID_ID3D11DomainShader*             {.importc.}: IID
  IID_ID3D11GeometryShader*           {.importc.}: IID
  IID_ID3D11HullShader*               {.importc.}: IID
  IID_ID3D11InputLayout*              {.importc.}: IID
  IID_ID3D11PixelShader*              {.importc.}: IID
  IID_ID3D11Predicate*                {.importc.}: IID
  IID_ID3D11Query*                    {.importc.}: IID
  IID_ID3D11RasterizerState*          {.importc.}: IID
  IID_ID3D11RenderTargetView*         {.importc.}: IID
  IID_ID3D11Resource*                 {.importc.}: IID
  IID_ID3D11SamplerState*             {.importc.}: IID
  IID_ID3D11ShaderResourceView*       {.importc.}: IID
  IID_ID3D11Texture1D*                {.importc.}: IID
  IID_ID3D11Texture2D*                {.importc.}: IID
  IID_ID3D11Texture3D*                {.importc.}: IID
  IID_ID3D11UnorderedAccessView*      {.importc.}: IID
  IID_ID3D11VertexShader*             {.importc.}: IID
  IID_ID3D11VideoContext*             {.importc.}: IID
  IID_ID3D11VideoDecoder*             {.importc.}: IID
  IID_ID3D11VideoDecoderOutputView*   {.importc.}: IID
  IID_ID3D11VideoDevice*              {.importc.}: IID
  IID_ID3D11VideoProcessor*           {.importc.}: IID
  IID_ID3D11VideoProcessorEnumerator* {.importc.}: IID
  IID_ID3D11VideoProcessorInputView*  {.importc.}: IID
  IID_ID3D11VideoProcessorOutputView* {.importc.}: IID
  IID_ID3D11View*                     {.importc.}: IID

var
  D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION*                           {.importc.}: GUID
  D3D11_AUTHENTICATED_CONFIGURE_ENCRYPTION_WHEN_ACCESSIBLE*               {.importc.}: GUID
  D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE*                               {.importc.}: GUID
  D3D11_AUTHENTICATED_CONFIGURE_PROTECTION*                               {.importc.}: GUID
  D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE*                          {.importc.}: GUID
  D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ATTRIBUTES*                     {.importc.}: GUID
  D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE*                                 {.importc.}: GUID
  D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION*                               {.importc.}: GUID
  D3D11_AUTHENTICATED_QUERY_CURRENT_ENCRYPTION_WHEN_ACCESSIBLE*           {.importc.}: GUID
  D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE*                                {.importc.}: GUID
  D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID_COUNT*        {.importc.}: GUID
  D3D11_AUTHENTICATED_QUERY_ENCRYPTION_WHEN_ACCESSIBLE_GUID*              {.importc.}: GUID
  D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT*                              {.importc.}: GUID
  D3D11_AUTHENTICATED_QUERY_OUTPUT_ID*                                    {.importc.}: GUID
  D3D11_AUTHENTICATED_QUERY_PROTECTION*                                   {.importc.}: GUID
  D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT*     {.importc.}: GUID
  D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS*           {.importc.}: GUID
  D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT* {.importc.}: GUID
  D3D11_CRYPTO_TYPE_AES128_CTR*                                           {.importc.}: GUID
  D3D11_DECODER_ENCRYPTION_HW_CENC*                                       {.importc.}: GUID
  D3D11_DECODER_PROFILE_H264_IDCT_FGT*                                    {.importc.}: GUID
  D3D11_DECODER_PROFILE_H264_IDCT_NOFGT*                                  {.importc.}: GUID
  D3D11_DECODER_PROFILE_H264_MOCOMP_FGT*                                  {.importc.}: GUID
  D3D11_DECODER_PROFILE_H264_MOCOMP_NOFGT*                                {.importc.}: GUID
  D3D11_DECODER_PROFILE_H264_VLD_FGT*                                     {.importc.}: GUID
  D3D11_DECODER_PROFILE_H264_VLD_MULTIVIEW_NOFGT*                         {.importc.}: GUID
  D3D11_DECODER_PROFILE_H264_VLD_NOFGT*                                   {.importc.}: GUID
  D3D11_DECODER_PROFILE_H264_VLD_STEREO_NOFGT*                            {.importc.}: GUID
  D3D11_DECODER_PROFILE_H264_VLD_STEREO_PROGRESSIVE_NOFGT*                {.importc.}: GUID
  D3D11_DECODER_PROFILE_H264_VLD_WITHFMOASO_NOFGT*                        {.importc.}: GUID
  D3D11_DECODER_PROFILE_HEVC_VLD_MAIN*                                    {.importc.}: GUID
  D3D11_DECODER_PROFILE_HEVC_VLD_MAIN10*                                  {.importc.}: GUID
  D3D11_DECODER_PROFILE_MPEG1_VLD*                                        {.importc.}: GUID
  D3D11_DECODER_PROFILE_MPEG2_IDCT*                                       {.importc.}: GUID
  D3D11_DECODER_PROFILE_MPEG2_MOCOMP*                                     {.importc.}: GUID
  D3D11_DECODER_PROFILE_MPEG2_VLD*                                        {.importc.}: GUID
  D3D11_DECODER_PROFILE_MPEG2and1_VLD*                                    {.importc.}: GUID
  D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_GMC*                       {.importc.}: GUID
  D3D11_DECODER_PROFILE_MPEG4PT2_VLD_ADVSIMPLE_NOGMC*                     {.importc.}: GUID
  D3D11_DECODER_PROFILE_MPEG4PT2_VLD_SIMPLE*                              {.importc.}: GUID
  D3D11_DECODER_PROFILE_VC1_D2010*                                        {.importc.}: GUID
  D3D11_DECODER_PROFILE_VC1_IDCT*                                         {.importc.}: GUID
  D3D11_DECODER_PROFILE_VC1_MOCOMP*                                       {.importc.}: GUID
  D3D11_DECODER_PROFILE_VC1_POSTPROC*                                     {.importc.}: GUID
  D3D11_DECODER_PROFILE_VC1_VLD*                                          {.importc.}: GUID
  D3D11_DECODER_PROFILE_WMV8_MOCOMP*                                      {.importc.}: GUID
  D3D11_DECODER_PROFILE_WMV8_POSTPROC*                                    {.importc.}: GUID
  D3D11_DECODER_PROFILE_WMV9_IDCT*                                        {.importc.}: GUID
  D3D11_DECODER_PROFILE_WMV9_MOCOMP*                                      {.importc.}: GUID
  D3D11_DECODER_PROFILE_WMV9_POSTPROC*                                    {.importc.}: GUID
  D3D11_KEY_EXCHANGE_HW_PROTECTION*                                       {.importc.}: GUID
  D3D11_KEY_EXCHANGE_RSAES_OAEP*                                          {.importc.}: GUID

# Direct3D 11.1 ================================================================

type D3D11_COPY_FLAGS* = enum
  D3D11_COPY_NO_OVERWRITE = 0x00000001
  D3D11_COPY_DISCARD      = 0x00000002

type D3D11_LOGIC_OP* = enum
  D3D11_LOGIC_OP_CLEAR         = 0
  D3D11_LOGIC_OP_SET           = 1
  D3D11_LOGIC_OP_COPY          = 2
  D3D11_LOGIC_OP_COPY_INVERTED = 3
  D3D11_LOGIC_OP_NOOP          = 4
  D3D11_LOGIC_OP_INVERT        = 5
  D3D11_LOGIC_OP_AND           = 6
  D3D11_LOGIC_OP_NAND          = 7
  D3D11_LOGIC_OP_OR            = 8
  D3D11_LOGIC_OP_NOR           = 9
  D3D11_LOGIC_OP_XOR           = 10
  D3D11_LOGIC_OP_EQUIV         = 11
  D3D11_LOGIC_OP_AND_REVERSE   = 12
  D3D11_LOGIC_OP_AND_INVERTED  = 13
  D3D11_LOGIC_OP_OR_REVERSE    = 14
  D3D11_LOGIC_OP_OR_INVERTED   = 15

type D3D11_RENDER_TARGET_BLEND_DESC1* = object
  BlendEnable*           : BOOL
  LogicOpEnable*         : BOOL
  SrcBlend*              : D3D11_BLEND
  DestBlend*             : D3D11_BLEND
  BlendOp*               : D3D11_BLEND_OP
  SrcBlendAlpha*         : D3D11_BLEND
  DestBlendAlpha*        : D3D11_BLEND
  BlendOpAlpha*          : D3D11_BLEND_OP
  LogicOp*               : D3D11_LOGIC_OP
  RenderTargetWriteMask* : uint8

type D3D11_BLEND_DESC1* = object
  AlphaToCoverageEnable*:  BOOL
  IndependentBlendEnable*: BOOL
  RenderTarget*:           array[8, D3D11_RENDER_TARGET_BLEND_DESC1]

comapi ID3D11BlendState1 of ID3D11BlendState:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr ptr ID3D11Device)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetDesc(pDesc: ptr D3D11_BLEND_DESC)
  proc GetDesc1(pDesc: ptr D3D11_BLEND_DESC1)

type D3D11_RASTERIZER_DESC1* = object
  FillMode*              : D3D11_FILL_MODE
  CullMode*              : D3D11_CULL_MODE
  FrontCounterClockwise* : BOOL
  DepthBias*             : int32
  DepthBiasClamp*        : cfloat
  SlopeScaledDepthBias*  : cfloat
  DepthClipEnable*       : BOOL
  ScissorEnable*         : BOOL
  MultisampleEnable*     : BOOL
  AntialiasedLineEnable* : BOOL
  ForcedSampleCount*     : uint32

comapi ID3D11RasterizerState1 of ID3D11RasterizerState:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr ptr ID3D11Device)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetDesc(pDesc: ptr D3D11_RASTERIZER_DESC)
  proc GetDesc1(pDesc: ptr D3D11_RASTERIZER_DESC1)

type D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG* = enum
  D3D11_1_CREATE_DEVICE_CONTEXT_STATE_SINGLETHREADED = 0x00000001

comapi ID3DDeviceContextState of ID3D11DeviceChild:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr ptr ID3D11Device)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT

comapi ID3D11DeviceContext1 of ID3D11DeviceContext:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr ptr ID3D11Device)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc VSSetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc PSSetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc PSSetShader(pPixelShader: ptr ID3D11PixelShader; ppClassInstances: ptr ptr ID3D11ClassInstance; NumClassInstances: uint32)
  proc PSSetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc VSSetShader(pVertexShader: ptr ID3D11VertexShader; ppClassInstances: ptr ptr ID3D11ClassInstance; NumClassInstances: uint32)
  proc DrawIndexed(IndexCount: uint32; StartIndexLocation: uint32; BaseVertexLocation: int32)
  proc Draw(VertexCount: uint32; StartVertexLocation: uint32)
  proc Map(pResource: ptr ID3D11Resource; Subresource: uint32; MapType: D3D11_MAP; MapFlags: uint32; pMappedResource: ptr D3D11_MAPPED_SUBRESOURCE): HRESULT
  proc Unmap(pResource: ptr ID3D11Resource; Subresource: uint32)
  proc PSSetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc IASetInputLayout(pInputLayout: ptr ID3D11InputLayout)
  proc IASetVertexBuffers(StartSlot: uint32; NumBuffers: uint32; ppVertexBuffers: ptr ptr ID3D11Buffer; pStrides: ptr uint32; pOffsets: ptr uint32)
  proc IASetIndexBuffer(pIndexBuffer: ptr ID3D11Buffer; Format: DXGI_FORMAT; Offset: uint32)
  proc DrawIndexedInstanced(IndexCountPerInstance: uint32; InstanceCount: uint32; StartIndexLocation: uint32; BaseVertexLocation: int32; StartInstanceLocation: uint32)
  proc DrawInstanced(VertexCountPerInstance: uint32; InstanceCount: uint32; StartVertexLocation: uint32; StartInstanceLocation: uint32)
  proc GSSetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc GSSetShader(pShader: ptr ID3D11GeometryShader; ppClassInstances: ptr ptr ID3D11ClassInstance; NumClassInstances: uint32)
  proc IASetPrimitiveTopology(Topology: D3D11_PRIMITIVE_TOPOLOGY)
  proc VSSetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc VSSetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc Begin(pAsync: ptr ID3D11Asynchronous)
  proc End(pAsync: ptr ID3D11Asynchronous)
  proc GetData(pAsync: ptr ID3D11Asynchronous; pData: pointer; DataSize: uint32; GetDataFlags: uint32): HRESULT
  proc SetPredication(pPredicate: ptr ID3D11Predicate; PredicateValue: BOOL)
  proc GSSetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc GSSetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc OMSetRenderTargets(NumViews: uint32; ppRenderTargetViews: ptr ptr ID3D11RenderTargetView; pDepthStencilView: ptr ID3D11DepthStencilView)
  proc OMSetRenderTargetsAndUnorderedAccessViews(NumRTVs: uint32; ppRenderTargetViews: ptr ptr ID3D11RenderTargetView; pDepthStencilView: ptr ID3D11DepthStencilView; UAVStartSlot: uint32; NumUAVs: uint32; ppUnorderedAccessViews: ptr ptr ID3D11UnorderedAccessView; pUAVInitialCounts: ptr uint32)
  proc OMSetBlendState(pBlendState: ptr ID3D11BlendState; BlendFactor: array[4, cfloat]; SampleMask: uint32)
  proc OMSetDepthStencilState(pDepthStencilState: ptr ID3D11DepthStencilState; StencilRef: uint32)
  proc SOSetTargets(NumBuffers: uint32; ppSOTargets: ptr ptr ID3D11Buffer; pOffsets: ptr uint32)
  proc DrawAuto()
  proc DrawIndexedInstancedIndirect(pBufferForArgs: ptr ID3D11Buffer; AlignedByteOffsetForArgs: uint32)
  proc DrawInstancedIndirect(pBufferForArgs: ptr ID3D11Buffer; AlignedByteOffsetForArgs: uint32)
  proc Dispatch(ThreadGroupCountX: uint32; ThreadGroupCountY: uint32; ThreadGroupCountZ: uint32)
  proc DispatchIndirect(pBufferForArgs: ptr ID3D11Buffer; AlignedByteOffsetForArgs: uint32)
  proc RSSetState(pRasterizerState: ptr ID3D11RasterizerState)
  proc RSSetViewports(NumViewports: uint32; pViewports: ptr D3D11_VIEWPORT)
  proc RSSetScissorRects(NumRects: uint32; pRects: ptr D3D11_RECT)
  proc CopySubresourceRegion(pDstResource: ptr ID3D11Resource; DstSubresource: uint32; DstX: uint32; DstY: uint32; DstZ: uint32; pSrcResource: ptr ID3D11Resource; SrcSubresource: uint32; pSrcBox: ptr D3D11_BOX)
  proc CopyResource(pDstResource: ptr ID3D11Resource; pSrcResource: ptr ID3D11Resource)
  proc UpdateSubresource(pDstResource: ptr ID3D11Resource; DstSubresource: uint32; pDstBox: ptr D3D11_BOX; pSrcData: pointer; SrcRowPitch: uint32; SrcDepthPitch: uint32)
  proc CopyStructureCount(pDstBuffer: ptr ID3D11Buffer; DstAlignedByteOffset: uint32; pSrcView: ptr ID3D11UnorderedAccessView)
  proc ClearRenderTargetView(pRenderTargetView: ptr ID3D11RenderTargetView; ColorRGBA: array[4, cfloat])
  proc ClearUnorderedAccessViewUint(pUnorderedAccessView: ptr ID3D11UnorderedAccessView; Values: array[4, uint32])
  proc ClearUnorderedAccessViewFloat(pUnorderedAccessView: ptr ID3D11UnorderedAccessView; Values: array[4, cfloat])
  proc ClearDepthStencilView(pDepthStencilView: ptr ID3D11DepthStencilView; ClearFlags: D3D11_CLEAR_FLAG; Depth: cfloat; Stencil: uint8)
  proc GenerateMips(pShaderResourceView: ptr ID3D11ShaderResourceView)
  proc SetResourceMinLOD(pResource: ptr ID3D11Resource; MinLOD: cfloat)
  proc GetResourceMinLOD(pResource: ptr ID3D11Resource): cfloat
  proc ResolveSubresource(pDstResource: ptr ID3D11Resource; DstSubresource: uint32; pSrcResource: ptr ID3D11Resource; SrcSubresource: uint32; Format: DXGI_FORMAT)
  proc ExecuteCommandList(pCommandList: ptr ID3D11CommandList; RestoreContextState: BOOL)
  proc HSSetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc HSSetShader(pHullShader: ptr ID3D11HullShader; ppClassInstances: ptr ptr ID3D11ClassInstance; NumClassInstances: uint32)
  proc HSSetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc HSSetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc DSSetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc DSSetShader(pDomainShader: ptr ID3D11DomainShader; ppClassInstances: ptr ptr ID3D11ClassInstance; NumClassInstances: uint32)
  proc DSSetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc DSSetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc CSSetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc CSSetUnorderedAccessViews(StartSlot: uint32; NumUAVs: uint32; ppUnorderedAccessViews: ptr ptr ID3D11UnorderedAccessView; pUAVInitialCounts: ptr uint32)
  proc CSSetShader(pComputeShader: ptr ID3D11ComputeShader; ppClassInstances: ptr ptr ID3D11ClassInstance; NumClassInstances: uint32)
  proc CSSetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc CSSetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc VSGetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc PSGetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc PSGetShader(ppPixelShader: ptr ptr ID3D11PixelShader; ppClassInstances: ptr ptr ID3D11ClassInstance; pNumClassInstances: ptr uint32)
  proc PSGetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc VSGetShader(ppVertexShader: ptr ptr ID3D11VertexShader; ppClassInstances: ptr ptr ID3D11ClassInstance; pNumClassInstances: ptr uint32)
  proc PSGetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc IAGetInputLayout(ppInputLayout: ptr ptr ID3D11InputLayout)
  proc IAGetVertexBuffers(StartSlot: uint32; NumBuffers: uint32; ppVertexBuffers: ptr ptr ID3D11Buffer; pStrides: ptr uint32; pOffsets: ptr uint32)
  proc IAGetIndexBuffer(pIndexBuffer: ptr ptr ID3D11Buffer; Format: ptr DXGI_FORMAT; Offset: ptr uint32)
  proc GSGetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc GSGetShader(ppGeometryShader: ptr ptr ID3D11GeometryShader; ppClassInstances: ptr ptr ID3D11ClassInstance; pNumClassInstances: ptr uint32)
  proc IAGetPrimitiveTopology(pTopology: ptr D3D11_PRIMITIVE_TOPOLOGY)
  proc VSGetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc VSGetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc GetPredication(ppPredicate: ptr ptr ID3D11Predicate; pPredicateValue: ptr BOOL)
  proc GSGetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc GSGetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc OMGetRenderTargets(NumViews: uint32; ppRenderTargetViews: ptr ptr ID3D11RenderTargetView; ppDepthStencilView: ptr ptr ID3D11DepthStencilView)
  proc OMGetRenderTargetsAndUnorderedAccessViews(NumRTVs: uint32; ppRenderTargetViews: ptr ptr ID3D11RenderTargetView; ppDepthStencilView: ptr ptr ID3D11DepthStencilView; UAVStartSlot: uint32; NumUAVs: uint32; ppUnorderedAccessViews: ptr ptr ID3D11UnorderedAccessView)
  proc OMGetBlendState(ppBlendState: ptr ptr ID3D11BlendState; BlendFactor: array[4, cfloat]; pSampleMask: ptr uint32)
  proc OMGetDepthStencilState(ppDepthStencilState: ptr ptr ID3D11DepthStencilState; pStencilRef: ptr uint32)
  proc SOGetTargets(NumBuffers: uint32; ppSOTargets: ptr ptr ID3D11Buffer)
  proc RSGetState(ppRasterizerState: ptr ptr ID3D11RasterizerState)
  proc RSGetViewports(pNumViewports: ptr uint32; pViewports: ptr D3D11_VIEWPORT)
  proc RSGetScissorRects(pNumRects: ptr uint32; pRects: ptr D3D11_RECT)
  proc HSGetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc HSGetShader(ppHullShader: ptr ptr ID3D11HullShader; ppClassInstances: ptr ptr ID3D11ClassInstance; pNumClassInstances: ptr uint32)
  proc HSGetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc HSGetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc DSGetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc DSGetShader(ppDomainShader: ptr ptr ID3D11DomainShader; ppClassInstances: ptr ptr ID3D11ClassInstance; pNumClassInstances: ptr uint32)
  proc DSGetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc DSGetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc CSGetShaderResources(StartSlot: uint32; NumViews: uint32; ppShaderResourceViews: ptr ptr ID3D11ShaderResourceView)
  proc CSGetUnorderedAccessViews(StartSlot: uint32; NumUAVs: uint32; ppUnorderedAccessViews: ptr ptr ID3D11UnorderedAccessView)
  proc CSGetShader(ppComputeShader: ptr ptr ID3D11ComputeShader; ppClassInstances: ptr ptr ID3D11ClassInstance; pNumClassInstances: ptr uint32)
  proc CSGetSamplers(StartSlot: uint32; NumSamplers: uint32; ppSamplers: ptr ptr ID3D11SamplerState)
  proc CSGetConstantBuffers(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer)
  proc ClearState()
  proc Flush()
  proc GetType(): D3D11_DEVICE_CONTEXT_TYPE
  proc GetContextFlags(): uint32
  proc FinishCommandList(RestoreDeferredContextState: BOOL; ppCommandList: ptr ptr ID3D11CommandList): HRESULT
  proc CopySubresourceRegion1(pDstResource: ptr ID3D11Resource; DstSubresource: uint32; DstX: uint32; DstY: uint32; DstZ: uint32; pSrcResource: ptr ID3D11Resource; SrcSubresource: uint32; pSrcBox: ptr D3D11_BOX; CopyFlags: uint32)
  proc UpdateSubresource1(pDstResource: ptr ID3D11Resource; DstSubresource: uint32; pDstBox: ptr D3D11_BOX; pSrcData: pointer; SrcRowPitch: uint32; SrcDepthPitch: uint32; CopyFlags: uint32)
  proc DiscardResource(pResource: ptr ID3D11Resource)
  proc DiscardView(pResourceView: ptr ID3D11View)
  proc VSSetConstantBuffers1(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer; pFirstConstant: ptr uint32; pNumConstants: ptr uint32)
  proc HSSetConstantBuffers1(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer; pFirstConstant: ptr uint32; pNumConstants: ptr uint32)
  proc DSSetConstantBuffers1(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer; pFirstConstant: ptr uint32; pNumConstants: ptr uint32)
  proc GSSetConstantBuffers1(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer; pFirstConstant: ptr uint32; pNumConstants: ptr uint32)
  proc PSSetConstantBuffers1(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer; pFirstConstant: ptr uint32; pNumConstants: ptr uint32)
  proc CSSetConstantBuffers1(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer; pFirstConstant: ptr uint32; pNumConstants: ptr uint32)
  proc VSGetConstantBuffers1(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer; pFirstConstant: ptr uint32; pNumConstants: ptr uint32)
  proc HSGetConstantBuffers1(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer; pFirstConstant: ptr uint32; pNumConstants: ptr uint32)
  proc DSGetConstantBuffers1(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer; pFirstConstant: ptr uint32; pNumConstants: ptr uint32)
  proc GSGetConstantBuffers1(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer; pFirstConstant: ptr uint32; pNumConstants: ptr uint32)
  proc PSGetConstantBuffers1(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer; pFirstConstant: ptr uint32; pNumConstants: ptr uint32)
  proc CSGetConstantBuffers1(StartSlot: uint32; NumBuffers: uint32; ppConstantBuffers: ptr ptr ID3D11Buffer; pFirstConstant: ptr uint32; pNumConstants: ptr uint32)
  proc SwapDeviceContextState(pState: ptr ID3DDeviceContextState; ppPreviousState: ptr ptr ID3DDeviceContextState)
  proc ClearView(pView: ptr ID3D11View; Color: array[4, cfloat]; pRect: ptr D3D11_RECT; NumRects: uint32)
  proc DiscardView1(pResourceView: ptr ID3D11View; pRects: ptr D3D11_RECT; NumRects: uint32)

type D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK* = object
  ClearSize*     : uint32
  EncryptedSize* : uint32

type D3D11_VIDEO_DECODER_BUFFER_DESC1* = object
  BufferType*             : D3D11_VIDEO_DECODER_BUFFER_TYPE
  DataOffset*             : uint32
  DataSize*               : uint32
  pIV*                    : pointer
  IVSize*                 : uint32
  pSubSampleMappingBlock* : ptr D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK
  SubSampleMappingCount*  : uint32

type D3D11_VIDEO_DECODER_BEGIN_FRAME_CRYPTO_SESSION* = object
  pCryptoSession*  : ptr ID3D11CryptoSession
  BlobSize*        : uint32
  pBlob*           : pointer
  pKeyInfoId*      : ptr GUID
  PrivateDataSize* : uint32
  pPrivateData*    : pointer

type D3D11_VIDEO_DECODER_CAPS* = enum
  D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE          = 0x01
  D3D11_VIDEO_DECODER_CAPS_NON_REAL_TIME       = 0x02
  D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE_DYNAMIC  = 0x04
  D3D11_VIDEO_DECODER_CAPS_DOWNSAMPLE_REQUIRED = 0x08
  D3D11_VIDEO_DECODER_CAPS_UNSUPPORTED         = 0x10

type D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINTS* = enum
  D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_ROTATION               = 0x1
  D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_RESIZE                 = 0x2
  D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_MULTIPLANE_OVERLAY_COLOR_SPACE_CONVERSION = 0x4
  D3D11_VIDEO_PROCESSOR_BEHAVIOR_HINT_TRIPLE_BUFFER_OUTPUT                      = 0x8

type D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT* = object
  Enable* : BOOL
  Width*  : uint32
  Height* : uint32
  Format* : DXGI_FORMAT

type D3D11_CRYPTO_SESSION_STATUS* = enum
  D3D11_CRYPTO_SESSION_STATUS_OK                   = 0
  D3D11_CRYPTO_SESSION_STATUS_KEY_LOST             = 1
  D3D11_CRYPTO_SESSION_STATUS_KEY_AND_CONTENT_LOST = 2

type D3D11_KEY_EXCHANGE_HW_PROTECTION_INPUT_DATA* = object
  PrivateDataSize*      : uint32
  HWProtectionDataSize* : uint32
  pbInput*              : array[4, uint8]

type D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA* = object
  PrivateDataSize*         : uint32
  MaxHWProtectionDataSize* : uint32
  HWProtectionDataSize*    : uint32
  TransportTime*           : uint64
  ExecutionTime*           : uint64
  pbOutput*                : array[4, uint8]

type D3D11_KEY_EXCHANGE_HW_PROTECTION_DATA* = object
  HWProtectionFunctionID* : uint32
  pInputData*             : ptr D3D11_KEY_EXCHANGE_HW_PROTECTION_INPUT_DATA
  pOutputData*            : ptr D3D11_KEY_EXCHANGE_HW_PROTECTION_OUTPUT_DATA
  Status*                 : HRESULT

type D3D11_VIDEO_SAMPLE_DESC* = object
  Width*      : uint32
  Height*     : uint32
  Format*     : DXGI_FORMAT
  ColorSpace* : DXGI_COLOR_SPACE_TYPE

comapi ID3D11VideoContext1 of ID3D11VideoContext:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr ptr ID3D11Device)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetDecoderBuffer(pDecoder: ptr ID3D11VideoDecoder; Type: D3D11_VIDEO_DECODER_BUFFER_TYPE; pBufferSize: ptr uint32; ppBuffer: ptr pointer): HRESULT
  proc ReleaseDecoderBuffer(pDecoder: ptr ID3D11VideoDecoder; Type: D3D11_VIDEO_DECODER_BUFFER_TYPE): HRESULT
  proc DecoderBeginFrame(pDecoder: ptr ID3D11VideoDecoder; pView: ptr ID3D11VideoDecoderOutputView; ContentKeySize: uint32; pContentKey: pointer): HRESULT
  proc DecoderEndFrame(pDecoder: ptr ID3D11VideoDecoder): HRESULT
  proc SubmitDecoderBuffers(pDecoder: ptr ID3D11VideoDecoder; NumBuffers: uint32; pBufferDesc: ptr D3D11_VIDEO_DECODER_BUFFER_DESC): HRESULT
  proc DecoderExtension(pDecoder: ptr ID3D11VideoDecoder; pExtensionData: ptr D3D11_VIDEO_DECODER_EXTENSION): HRESULT
  proc VideoProcessorSetOutputTargetRect(pVideoProcessor: ptr ID3D11VideoProcessor; Enable: BOOL; pRect: ptr RECT)
  proc VideoProcessorSetOutputBackgroundColor(pVideoProcessor: ptr ID3D11VideoProcessor; YCbCr: BOOL; pColor: ptr D3D11_VIDEO_COLOR)
  proc VideoProcessorSetOutputColorSpace(pVideoProcessor: ptr ID3D11VideoProcessor; pColorSpace: ptr D3D11_VIDEO_PROCESSOR_COLOR_SPACE)
  proc VideoProcessorSetOutputAlphaFillMode(pVideoProcessor: ptr ID3D11VideoProcessor; AlphaFillMode: D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE; StreamIndex: uint32)
  proc VideoProcessorSetOutputConstriction(pVideoProcessor: ptr ID3D11VideoProcessor; Enable: BOOL; Size: SIZE)
  proc VideoProcessorSetOutputStereoMode(pVideoProcessor: ptr ID3D11VideoProcessor; Enable: BOOL)
  proc VideoProcessorSetOutputExtension(pVideoProcessor: ptr ID3D11VideoProcessor; pExtensionGuid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc VideoProcessorGetOutputTargetRect(pVideoProcessor: ptr ID3D11VideoProcessor; Enabled: ptr BOOL; pRect: ptr RECT)
  proc VideoProcessorGetOutputBackgroundColor(pVideoProcessor: ptr ID3D11VideoProcessor; pYCbCr: ptr BOOL; pColor: ptr D3D11_VIDEO_COLOR)
  proc VideoProcessorGetOutputColorSpace(pVideoProcessor: ptr ID3D11VideoProcessor; pColorSpace: ptr D3D11_VIDEO_PROCESSOR_COLOR_SPACE)
  proc VideoProcessorGetOutputAlphaFillMode(pVideoProcessor: ptr ID3D11VideoProcessor; pAlphaFillMode: ptr D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE; pStreamIndex: ptr uint32)
  proc VideoProcessorGetOutputConstriction(pVideoProcessor: ptr ID3D11VideoProcessor; pEnabled: ptr BOOL; pSize: ptr SIZE)
  proc VideoProcessorGetOutputStereoMode(pVideoProcessor: ptr ID3D11VideoProcessor; pEnabled: ptr BOOL)
  proc VideoProcessorGetOutputExtension(pVideoProcessor: ptr ID3D11VideoProcessor; pExtensionGuid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc VideoProcessorSetStreamFrameFormat(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; FrameFormat: D3D11_VIDEO_FRAME_FORMAT)
  proc VideoProcessorSetStreamColorSpace(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pColorSpace: ptr D3D11_VIDEO_PROCESSOR_COLOR_SPACE)
  proc VideoProcessorSetStreamOutputRate(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; OutputRate: D3D11_VIDEO_PROCESSOR_OUTPUT_RATE; RepeatFrame: BOOL; pCustomRate: ptr DXGI_RATIONAL)
  proc VideoProcessorSetStreamSourceRect(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL; pRect: ptr RECT)
  proc VideoProcessorSetStreamDestRect(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL; pRect: ptr RECT)
  proc VideoProcessorSetStreamAlpha(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL; Alpha: cfloat)
  proc VideoProcessorSetStreamPalette(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Count: uint32; pEntries: ptr uint32)
  proc VideoProcessorSetStreamPixelAspectRatio(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL; pSourceAspectRatio: ptr DXGI_RATIONAL; pDestinationAspectRatio: ptr DXGI_RATIONAL)
  proc VideoProcessorSetStreamLumaKey(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL; Lower: cfloat; Upper: cfloat)
  proc VideoProcessorSetStreamStereoFormat(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL; Format: D3D11_VIDEO_PROCESSOR_STEREO_FORMAT; LeftViewFrame0: BOOL; BaseViewFrame0: BOOL; FlipMode: D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE; MonoOffset: cint)
  proc VideoProcessorSetStreamAutoProcessingMode(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL)
  proc VideoProcessorSetStreamFilter(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Filter: D3D11_VIDEO_PROCESSOR_FILTER; Enable: BOOL; Level: cint)
  proc VideoProcessorSetStreamExtension(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pExtensionGuid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc VideoProcessorGetStreamFrameFormat(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pFrameFormat: ptr D3D11_VIDEO_FRAME_FORMAT)
  proc VideoProcessorGetStreamColorSpace(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pColorSpace: ptr D3D11_VIDEO_PROCESSOR_COLOR_SPACE)
  proc VideoProcessorGetStreamOutputRate(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pOutputRate: ptr D3D11_VIDEO_PROCESSOR_OUTPUT_RATE; pRepeatFrame: ptr BOOL; pCustomRate: ptr DXGI_RATIONAL)
  proc VideoProcessorGetStreamSourceRect(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnabled: ptr BOOL; pRect: ptr RECT)
  proc VideoProcessorGetStreamDestRect(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnabled: ptr BOOL; pRect: ptr RECT)
  proc VideoProcessorGetStreamAlpha(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnabled: ptr BOOL; pAlpha: ptr cfloat)
  proc VideoProcessorGetStreamPalette(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Count: uint32; pEntries: ptr uint32)
  proc VideoProcessorGetStreamPixelAspectRatio(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnabled: ptr BOOL; pSourceAspectRatio: ptr DXGI_RATIONAL; pDestinationAspectRatio: ptr DXGI_RATIONAL)
  proc VideoProcessorGetStreamLumaKey(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnabled: ptr BOOL; pLower: ptr cfloat; pUpper: ptr cfloat)
  proc VideoProcessorGetStreamStereoFormat(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnable: ptr BOOL; pFormat: ptr D3D11_VIDEO_PROCESSOR_STEREO_FORMAT; pLeftViewFrame0: ptr BOOL; pBaseViewFrame0: ptr BOOL; pFlipMode: ptr D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE; MonoOffset: ptr cint)
  proc VideoProcessorGetStreamAutoProcessingMode(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnabled: ptr BOOL)
  proc VideoProcessorGetStreamFilter(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Filter: D3D11_VIDEO_PROCESSOR_FILTER; pEnabled: ptr BOOL; pLevel: ptr cint)
  proc VideoProcessorGetStreamExtension(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pExtensionGuid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc VideoProcessorBlt(pVideoProcessor: ptr ID3D11VideoProcessor; pView: ptr ID3D11VideoProcessorOutputView; OutputFrame: uint32; StreamCount: uint32; pStreams: ptr D3D11_VIDEO_PROCESSOR_STREAM): HRESULT
  proc NegotiateCryptoSessionKeyExchange(pCryptoSession: ptr ID3D11CryptoSession; DataSize: uint32; pData: pointer): HRESULT
  proc EncryptionBlt(pCryptoSession: ptr ID3D11CryptoSession; pSrcSurface: ptr ID3D11Texture2D; pDstSurface: ptr ID3D11Texture2D; IVSize: uint32; pIV: pointer)
  proc DecryptionBlt(pCryptoSession: ptr ID3D11CryptoSession; pSrcSurface: ptr ID3D11Texture2D; pDstSurface: ptr ID3D11Texture2D; pEncryptedBlockInfo: ptr D3D11_ENCRYPTED_BLOCK_INFO; ContentKeySize: uint32; pContentKey: pointer; IVSize: uint32; pIV: pointer)
  proc StartSessionKeyRefresh(pCryptoSession: ptr ID3D11CryptoSession; RandomNumberSize: uint32; pRandomNumber: pointer)
  proc FinishSessionKeyRefresh(pCryptoSession: ptr ID3D11CryptoSession)
  proc GetEncryptionBltKey(pCryptoSession: ptr ID3D11CryptoSession; KeySize: uint32; pReadbackKey: pointer): HRESULT
  proc NegotiateAuthenticatedChannelKeyExchange(pChannel: ptr ID3D11AuthenticatedChannel; DataSize: uint32; pData: pointer): HRESULT
  proc QueryAuthenticatedChannel(pChannel: ptr ID3D11AuthenticatedChannel; InputSize: uint32; pInput: pointer; OutputSize: uint32; pOutput: pointer): HRESULT
  proc ConfigureAuthenticatedChannel(pChannel: ptr ID3D11AuthenticatedChannel; InputSize: uint32; pInput: pointer; pOutput: ptr D3D11_AUTHENTICATED_CONFIGURE_OUTPUT): HRESULT
  proc VideoProcessorSetStreamRotation(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL; Rotation: D3D11_VIDEO_PROCESSOR_ROTATION)
  proc VideoProcessorGetStreamRotation(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnable: ptr BOOL; pRotation: ptr D3D11_VIDEO_PROCESSOR_ROTATION)
  proc SubmitDecoderBuffers1(pDecoder: ptr ID3D11VideoDecoder; NumBuffers: uint32; pBufferDesc: ptr D3D11_VIDEO_DECODER_BUFFER_DESC1): HRESULT
  proc GetDataForNewHardwareKey(pCryptoSession: ptr ID3D11CryptoSession; PrivateInputSize: uint32; pPrivatInputData: pointer; pPrivateOutputData: ptr uint64): HRESULT
  proc CheckCryptoSessionStatus(pCryptoSession: ptr ID3D11CryptoSession; pStatus: ptr D3D11_CRYPTO_SESSION_STATUS): HRESULT
  proc DecoderEnableDownsampling(pDecoder: ptr ID3D11VideoDecoder; InputColorSpace: DXGI_COLOR_SPACE_TYPE; pOutputDesc: ptr D3D11_VIDEO_SAMPLE_DESC; ReferenceFrameCount: uint32): HRESULT
  proc DecoderUpdateDownsampling(pDecoder: ptr ID3D11VideoDecoder; pOutputDesc: ptr D3D11_VIDEO_SAMPLE_DESC): HRESULT
  proc VideoProcessorSetOutputColorSpace1(pVideoProcessor: ptr ID3D11VideoProcessor; ColorSpace: DXGI_COLOR_SPACE_TYPE)
  proc VideoProcessorSetOutputShaderUsage(pVideoProcessor: ptr ID3D11VideoProcessor; ShaderUsage: BOOL)
  proc VideoProcessorGetOutputColorSpace1(pVideoProcessor: ptr ID3D11VideoProcessor; pColorSpace: ptr DXGI_COLOR_SPACE_TYPE)
  proc VideoProcessorGetOutputShaderUsage(pVideoProcessor: ptr ID3D11VideoProcessor; pShaderUsage: ptr BOOL)
  proc VideoProcessorSetStreamColorSpace1(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; ColorSpace: DXGI_COLOR_SPACE_TYPE)
  proc VideoProcessorSetStreamMirror(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; Enable: BOOL; FlipHorizontal: BOOL; FlipVertical: BOOL)
  proc VideoProcessorGetStreamColorSpace1(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pColorSpace: ptr DXGI_COLOR_SPACE_TYPE)
  proc VideoProcessorGetStreamMirror(pVideoProcessor: ptr ID3D11VideoProcessor; StreamIndex: uint32; pEnable: ptr BOOL; pFlipHorizontal: ptr BOOL; pFlipVertical: ptr BOOL)
  proc VideoProcessorGetBehaviorHints(pVideoProcessor: ptr ID3D11VideoProcessor; OutputWidth: uint32; OutputHeight: uint32; OutputFormat: DXGI_FORMAT; StreamCount: uint32; pStreams: ptr D3D11_VIDEO_PROCESSOR_STREAM_BEHAVIOR_HINT; pBehaviorHints: ptr uint32): HRESULT

comapi ID3D11VideoDevice1 of ID3D11VideoDevice:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc CreateVideoDecoder(pVideoDesc: ptr D3D11_VIDEO_DECODER_DESC; pConfig: ptr D3D11_VIDEO_DECODER_CONFIG; ppDecoder: ptr ptr ID3D11VideoDecoder): HRESULT
  proc CreateVideoProcessor(pEnum: ptr ID3D11VideoProcessorEnumerator; RateConversionIndex: uint32; ppVideoProcessor: ptr ptr ID3D11VideoProcessor): HRESULT
  proc CreateAuthenticatedChannel(ChannelType: D3D11_AUTHENTICATED_CHANNEL_TYPE; ppAuthenticatedChannel: ptr ptr ID3D11AuthenticatedChannel): HRESULT
  proc CreateCryptoSession(pCryptoType: ptr GUID; pDecoderProfile: ptr GUID; pKeyExchangeType: ptr GUID; ppCryptoSession: ptr ptr ID3D11CryptoSession): HRESULT
  proc CreateVideoDecoderOutputView(pResource: ptr ID3D11Resource; pDesc: ptr D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC; ppVDOVView: ptr ptr ID3D11VideoDecoderOutputView): HRESULT
  proc CreateVideoProcessorInputView(pResource: ptr ID3D11Resource; pEnum: ptr ID3D11VideoProcessorEnumerator; pDesc: ptr D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC; ppVPIView: ptr ptr ID3D11VideoProcessorInputView): HRESULT
  proc CreateVideoProcessorOutputView(pResource: ptr ID3D11Resource; pEnum: ptr ID3D11VideoProcessorEnumerator; pDesc: ptr D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC; ppVPOView: ptr ptr ID3D11VideoProcessorOutputView): HRESULT
  proc CreateVideoProcessorEnumerator(pDesc: ptr D3D11_VIDEO_PROCESSOR_CONTENT_DESC; ppEnum: ptr ptr ID3D11VideoProcessorEnumerator): HRESULT
  proc GetVideoDecoderProfileCount(): uint32
  proc GetVideoDecoderProfile(Index: uint32; pDecoderProfile: ptr GUID): HRESULT
  proc CheckVideoDecoderFormat(pDecoderProfile: ptr GUID; Format: DXGI_FORMAT; pSupported: ptr BOOL): HRESULT
  proc GetVideoDecoderConfigCount(pDesc: ptr D3D11_VIDEO_DECODER_DESC; pCount: ptr uint32): HRESULT
  proc GetVideoDecoderConfig(pDesc: ptr D3D11_VIDEO_DECODER_DESC; Index: uint32; pConfig: ptr D3D11_VIDEO_DECODER_CONFIG): HRESULT
  proc GetContentProtectionCaps(pCryptoType: ptr GUID; pDecoderProfile: ptr GUID; pCaps: ptr D3D11_VIDEO_CONTENT_PROTECTION_CAPS): HRESULT
  proc CheckCryptoKeyExchange(pCryptoType: ptr GUID; pDecoderProfile: ptr GUID; Index: uint32; pKeyExchangeType: ptr GUID): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetCryptoSessionPrivateDataSize(pCryptoType: ptr GUID; pDecoderProfile: ptr GUID; pKeyExchangeType: ptr GUID; pPrivateInputSize: ptr uint32; pPrivateOutputSize: ptr uint32): HRESULT
  proc GetVideoDecoderCaps(pDecoderProfile: ptr GUID; SampleWidth: uint32; SampleHeight: uint32; pFrameRate: ptr DXGI_RATIONAL; BitRate: uint32; pCryptoType: ptr GUID; pDecoderCaps: ptr uint32): HRESULT
  proc CheckVideoDecoderDownsampling(pInputDesc: ptr D3D11_VIDEO_DECODER_DESC; InputColorSpace: DXGI_COLOR_SPACE_TYPE; pInputConfig: ptr D3D11_VIDEO_DECODER_CONFIG; pFrameRate: ptr DXGI_RATIONAL; pOutputDesc: ptr D3D11_VIDEO_SAMPLE_DESC; pSupported: ptr BOOL; pRealTimeHint: ptr BOOL): HRESULT
  proc RecommendVideoDecoderDownsampleParameters(pInputDesc: ptr D3D11_VIDEO_DECODER_DESC; InputColorSpace: DXGI_COLOR_SPACE_TYPE; pInputConfig: ptr D3D11_VIDEO_DECODER_CONFIG; pFrameRate: ptr DXGI_RATIONAL; pRecommendedOutputDesc: ptr D3D11_VIDEO_SAMPLE_DESC): HRESULT

comapi ID3D11VideoProcessorEnumerator1 of ID3D11VideoProcessorEnumerator:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc GetDevice(ppDevice: ptr ptr ID3D11Device)
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetVideoProcessorContentDesc(pContentDesc: ptr D3D11_VIDEO_PROCESSOR_CONTENT_DESC): HRESULT
  proc CheckVideoProcessorFormat(Format: DXGI_FORMAT; pFlags: ptr uint32): HRESULT
  proc GetVideoProcessorCaps(pCaps: ptr D3D11_VIDEO_PROCESSOR_CAPS): HRESULT
  proc GetVideoProcessorRateConversionCaps(TypeIndex: uint32; pCaps: ptr D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS): HRESULT
  proc GetVideoProcessorCustomRate(TypeIndex: uint32; CustomRateIndex: uint32; pRate: ptr D3D11_VIDEO_PROCESSOR_CUSTOM_RATE): HRESULT
  proc GetVideoProcessorFilterRange(Filter: D3D11_VIDEO_PROCESSOR_FILTER; pRange: ptr D3D11_VIDEO_PROCESSOR_FILTER_RANGE): HRESULT
  proc CheckVideoProcessorFormatConversion(InputFormat: DXGI_FORMAT; InputColorSpace: DXGI_COLOR_SPACE_TYPE; OutputFormat: DXGI_FORMAT; OutputColorSpace: DXGI_COLOR_SPACE_TYPE; pSupported: ptr BOOL): HRESULT

comapi ID3D11Device1 of ID3D11Device:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc CreateBuffer(pDesc: ptr D3D11_BUFFER_DESC; pInitialData: ptr D3D11_SUBRESOURCE_DATA; ppBuffer: ptr ptr ID3D11Buffer): HRESULT
  proc CreateTexture1D(pDesc: ptr D3D11_TEXTURE1D_DESC; pInitialData: ptr D3D11_SUBRESOURCE_DATA; ppTexture1D: ptr ptr ID3D11Texture1D): HRESULT
  proc CreateTexture2D(pDesc: ptr D3D11_TEXTURE2D_DESC; pInitialData: ptr D3D11_SUBRESOURCE_DATA; ppTexture2D: ptr ptr ID3D11Texture2D): HRESULT
  proc CreateTexture3D(pDesc: ptr D3D11_TEXTURE3D_DESC; pInitialData: ptr D3D11_SUBRESOURCE_DATA; ppTexture3D: ptr ptr ID3D11Texture3D): HRESULT
  proc CreateShaderResourceView(pResource: ptr ID3D11Resource; pDesc: ptr D3D11_SHADER_RESOURCE_VIEW_DESC; ppSRView: ptr ptr ID3D11ShaderResourceView): HRESULT
  proc CreateUnorderedAccessView(pResource: ptr ID3D11Resource; pDesc: ptr D3D11_UNORDERED_ACCESS_VIEW_DESC; ppUAView: ptr ptr ID3D11UnorderedAccessView): HRESULT
  proc CreateRenderTargetView(pResource: ptr ID3D11Resource; pDesc: ptr D3D11_RENDER_TARGET_VIEW_DESC; ppRTView: ptr ptr ID3D11RenderTargetView): HRESULT
  proc CreateDepthStencilView(pResource: ptr ID3D11Resource; pDesc: ptr D3D11_DEPTH_STENCIL_VIEW_DESC; ppDepthStencilView: ptr ptr ID3D11DepthStencilView): HRESULT
  proc CreateInputLayout(pInputElementDescs: ptr D3D11_INPUT_ELEMENT_DESC; NumElements: uint32; pShaderBytecodeWithInputSignature: pointer; BytecodeLength: uint; ppInputLayout: ptr ptr ID3D11InputLayout): HRESULT
  proc CreateVertexShader(pShaderBytecode: pointer; BytecodeLength: uint; pClassLinkage: ptr ID3D11ClassLinkage; ppVertexShader: ptr ptr ID3D11VertexShader): HRESULT
  proc CreateGeometryShader(pShaderBytecode: pointer; BytecodeLength: uint; pClassLinkage: ptr ID3D11ClassLinkage; ppGeometryShader: ptr ptr ID3D11GeometryShader): HRESULT
  proc CreateGeometryShaderWithStreamOutput(pShaderBytecode: pointer; BytecodeLength: uint; pSODeclaration: ptr D3D11_SO_DECLARATION_ENTRY; NumEntries: uint32; pBufferStrides: ptr uint32; NumStrides: uint32; RasterizedStream: uint32; pClassLinkage: ptr ID3D11ClassLinkage; ppGeometryShader: ptr ptr ID3D11GeometryShader): HRESULT
  proc CreatePixelShader(pShaderBytecode: pointer; BytecodeLength: uint; pClassLinkage: ptr ID3D11ClassLinkage; ppPixelShader: ptr ptr ID3D11PixelShader): HRESULT
  proc CreateHullShader(pShaderBytecode: pointer; BytecodeLength: uint; pClassLinkage: ptr ID3D11ClassLinkage; ppHullShader: ptr ptr ID3D11HullShader): HRESULT
  proc CreateDomainShader(pShaderBytecode: pointer; BytecodeLength: uint; pClassLinkage: ptr ID3D11ClassLinkage; ppDomainShader: ptr ptr ID3D11DomainShader): HRESULT
  proc CreateComputeShader(pShaderBytecode: pointer; BytecodeLength: uint; pClassLinkage: ptr ID3D11ClassLinkage; ppComputeShader: ptr ptr ID3D11ComputeShader): HRESULT
  proc CreateClassLinkage(ppLinkage: ptr ptr ID3D11ClassLinkage): HRESULT
  proc CreateBlendState(pBlendStateDesc: ptr D3D11_BLEND_DESC; ppBlendState: ptr ptr ID3D11BlendState): HRESULT
  proc CreateDepthStencilState(pDepthStencilDesc: ptr D3D11_DEPTH_STENCIL_DESC; ppDepthStencilState: ptr ptr ID3D11DepthStencilState): HRESULT
  proc CreateRasterizerState(pRasterizerDesc: ptr D3D11_RASTERIZER_DESC; ppRasterizerState: ptr ptr ID3D11RasterizerState): HRESULT
  proc CreateSamplerState(pSamplerDesc: ptr D3D11_SAMPLER_DESC; ppSamplerState: ptr ptr ID3D11SamplerState): HRESULT
  proc CreateQuery(pQueryDesc: ptr D3D11_QUERY_DESC; ppQuery: ptr ptr ID3D11Query): HRESULT
  proc CreatePredicate(pPredicateDesc: ptr D3D11_QUERY_DESC; ppPredicate: ptr ptr ID3D11Predicate): HRESULT
  proc CreateCounter(pCounterDesc: ptr D3D11_COUNTER_DESC; ppCounter: ptr ptr ID3D11Counter): HRESULT
  proc CreateDeferredContext(ContextFlags: uint32; ppDeferredContext: ptr ptr ID3D11DeviceContext): HRESULT
  proc OpenSharedResource(hResource: HANDLE; ReturnedInterface: ptr IID; ppResource: ptr pointer): HRESULT
  proc CheckFormatSupport(Format: DXGI_FORMAT; pFormatSupport: ptr uint32): HRESULT
  proc CheckMultisampleQualityLevels(Format: DXGI_FORMAT; SampleCount: uint32; pNumQualityLevels: ptr uint32): HRESULT
  proc CheckCounterInfo(pCounterInfo: ptr D3D11_COUNTER_INFO)
  proc CheckCounter(pDesc: ptr D3D11_COUNTER_DESC; pType: ptr D3D11_COUNTER_TYPE; pActiveCounters: ptr uint32; szName: cstring; pNameLength: ptr uint32; szUnits: cstring; pUnitsLength: ptr uint32; szDescription: cstring; pDescriptionLength: ptr uint32): HRESULT
  proc CheckFeatureSupport(Feature: D3D11_FEATURE; pFeatureSupportData: pointer; FeatureSupportDataSize: uint32): HRESULT
  proc GetPrivateData(guid: ptr GUID; pDataSize: ptr uint32; pData: pointer): HRESULT
  proc SetPrivateData(guid: ptr GUID; DataSize: uint32; pData: pointer): HRESULT
  proc SetPrivateDataInterface(guid: ptr GUID; pData: ptr IUnknown): HRESULT
  proc GetFeatureLevel(): D3D_FEATURE_LEVEL
  proc GetCreationFlags(): uint32
  proc GetDeviceRemovedReason(): HRESULT
  proc GetImmediateContext(ppImmediateContext: ptr ptr ID3D11DeviceContext)
  proc SetExceptionMode(RaiseFlags: uint32): HRESULT
  proc GetExceptionMode(): uint32
  proc GetImmediateContext1(ppImmediateContext: ptr ptr ID3D11DeviceContext1)
  proc CreateDeferredContext1(ContextFlags: uint32; ppDeferredContext: ptr ptr ID3D11DeviceContext1): HRESULT
  proc CreateBlendState1(pBlendStateDesc: ptr D3D11_BLEND_DESC1; ppBlendState: ptr ptr ID3D11BlendState1): HRESULT
  proc CreateRasterizerState1(pRasterizerDesc: ptr D3D11_RASTERIZER_DESC1; ppRasterizerState: ptr ptr ID3D11RasterizerState1): HRESULT
  proc CreateDeviceContextState(Flags: uint32; pFeatureLevels: ptr D3D_FEATURE_LEVEL; FeatureLevels: uint32; SDKVersion: uint32; EmulatedInterface: ptr IID; pChosenFeatureLevel: ptr D3D_FEATURE_LEVEL; ppContextState: ptr ptr ID3DDeviceContextState): HRESULT
  proc OpenSharedResource1(hResource: HANDLE; returnedInterface: ptr IID; ppResource: ptr pointer): HRESULT
  proc OpenSharedResourceByName(lpName: LPCWSTR; dwDesiredAccess: int32; returnedInterface: ptr IID; ppResource: ptr pointer): HRESULT

comapi ID3DUserDefinedAnnotation of IUnknown:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc BeginEvent(Name: LPCWSTR): int32
  proc EndEvent(): int32
  proc SetMarker(Name: LPCWSTR)
  proc GetStatus(): BOOL

var
  IID_ID3D11BlendState1*               {.importc.}: IID
  IID_ID3D11Device1*                   {.importc.}: IID
  IID_ID3D11DeviceContext1*            {.importc.}: IID
  IID_ID3D11RasterizerState1*          {.importc.}: IID
  IID_ID3D11VideoContext1*             {.importc.}: IID
  IID_ID3D11VideoDevice1*              {.importc.}: IID
  IID_ID3D11VideoProcessorEnumerator1* {.importc.}: IID
  IID_ID3DDeviceContextState*          {.importc.}: IID
  IID_ID3DUserDefinedAnnotation*       {.importc.}: IID

# Direct3D 11 SDK Layers =======================================================

const
  D3D11_SDK_LAYERS_VERSION* = 1
  D3D11_DEBUG_FEATURE_FLUSH_PER_RENDER_OP* = 0x1
  D3D11_DEBUG_FEATURE_FINISH_PER_RENDER_OP* = 0x2
  D3D11_DEBUG_FEATURE_PRESENT_PER_RENDER_OP* = 0x4
  D3D11_DEBUG_FEATURE_ALWAYS_DISCARD_OFFERED_RESOURCE* = 0x8
  D3D11_DEBUG_FEATURE_NEVER_DISCARD_OFFERED_RESOURCE* = 0x10
  D3D11_DEBUG_FEATURE_AVOID_BEHAVIOR_CHANGING_DEBUG_AIDS* = 0x40
  D3D11_DEBUG_FEATURE_DISABLE_TILED_RESOURCE_MAPPING_TRACKING_AND_VALIDATION* = 0x80
  D3D11_INFO_QUEUE_DEFAULT_MESSAGE_COUNT_LIMIT* = 1024

type D3D11_RLDO_FLAGS* {.size:sizeof(cint).} = enum
  D3D11_RLDO_SUMMARY         = 0x1
  D3D11_RLDO_DETAIL          = 0x2
  D3D11_RLDO_IGNORE_INTERNAL = 0x4

var IID_ID3D11Debug* {.importc.}: IID

comapi ID3D11Debug of IUnknown:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc SetFeatureMask(Mask: uint32)
  proc GetFeatureMask(): uint32
  proc SetPresentPerRenderOpDelay(Milliseconds: uint32)
  proc GetPresentPerRenderOpDelay(): uint32
  proc SetSwapChain(pSwapChain: ptr IDXGISwapChain): HRESULT
  proc GetSwapChain(ppSwapChain: ptr ptr IDXGISwapChain): HRESULT
  proc ValidateContext(pContext: ptr ID3D11DeviceContext): HRESULT
  proc ReportLiveDeviceObjects(Flags: D3D11_RLDO_FLAGS): HRESULT
  proc ValidateContextForDispatch(pContext: ptr ID3D11DeviceContext): HRESULT

type D3D11_MESSAGE_CATEGORY* {.size:sizeof(cint).} = enum
  D3D11_MESSAGE_CATEGORY_APPLICATION_DEFINED
  D3D11_MESSAGE_CATEGORY_MISCELLANEOUS
  D3D11_MESSAGE_CATEGORY_INITIALIZATION
  D3D11_MESSAGE_CATEGORY_CLEANUP
  D3D11_MESSAGE_CATEGORY_COMPILATION
  D3D11_MESSAGE_CATEGORY_STATE_CREATION
  D3D11_MESSAGE_CATEGORY_STATE_SETTING
  D3D11_MESSAGE_CATEGORY_STATE_GETTING
  D3D11_MESSAGE_CATEGORY_RESOURCE_MANIPULATION
  D3D11_MESSAGE_CATEGORY_EXECUTION
  D3D11_MESSAGE_CATEGORY_SHADER

type D3D11_MESSAGE_SEVERITY* {.size:sizeof(cint).} = enum
  D3D11_MESSAGE_SEVERITY_CORRUPTION
  D3D11_MESSAGE_SEVERITY_ERROR
  D3D11_MESSAGE_SEVERITY_WARNING
  D3D11_MESSAGE_SEVERITY_INFO
  D3D11_MESSAGE_SEVERITY_MESSAGE

type D3D11_MESSAGE_ID* {.size:sizeof(cint).} = enum
  D3D11_MESSAGE_ID_UNKNOWN
  D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_HAZARD
  D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_HAZARD
  D3D11_MESSAGE_ID_DEVICE_VSSETSHADERRESOURCES_HAZARD
  D3D11_MESSAGE_ID_DEVICE_VSSETCONSTANTBUFFERS_HAZARD
  D3D11_MESSAGE_ID_DEVICE_GSSETSHADERRESOURCES_HAZARD
  D3D11_MESSAGE_ID_DEVICE_GSSETCONSTANTBUFFERS_HAZARD
  D3D11_MESSAGE_ID_DEVICE_PSSETSHADERRESOURCES_HAZARD
  D3D11_MESSAGE_ID_DEVICE_PSSETCONSTANTBUFFERS_HAZARD
  D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETS_HAZARD
  D3D11_MESSAGE_ID_DEVICE_SOSETTARGETS_HAZARD
  D3D11_MESSAGE_ID_STRING_FROM_APPLICATION
  D3D11_MESSAGE_ID_CORRUPTED_THIS
  D3D11_MESSAGE_ID_CORRUPTED_PARAMETER1
  D3D11_MESSAGE_ID_CORRUPTED_PARAMETER2
  D3D11_MESSAGE_ID_CORRUPTED_PARAMETER3
  D3D11_MESSAGE_ID_CORRUPTED_PARAMETER4
  D3D11_MESSAGE_ID_CORRUPTED_PARAMETER5
  D3D11_MESSAGE_ID_CORRUPTED_PARAMETER6
  D3D11_MESSAGE_ID_CORRUPTED_PARAMETER7
  D3D11_MESSAGE_ID_CORRUPTED_PARAMETER8
  D3D11_MESSAGE_ID_CORRUPTED_PARAMETER9
  D3D11_MESSAGE_ID_CORRUPTED_PARAMETER10
  D3D11_MESSAGE_ID_CORRUPTED_PARAMETER11
  D3D11_MESSAGE_ID_CORRUPTED_PARAMETER12
  D3D11_MESSAGE_ID_CORRUPTED_PARAMETER13
  D3D11_MESSAGE_ID_CORRUPTED_PARAMETER14
  D3D11_MESSAGE_ID_CORRUPTED_PARAMETER15
  D3D11_MESSAGE_ID_CORRUPTED_MULTITHREADING
  D3D11_MESSAGE_ID_MESSAGE_REPORTING_OUTOFMEMORY
  D3D11_MESSAGE_ID_IASETINPUTLAYOUT_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_IASETVERTEXBUFFERS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_IASETINDEXBUFFER_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_VSSETSHADER_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_VSSETSHADERRESOURCES_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_VSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_VSSETSAMPLERS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_GSSETSHADER_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_GSSETSHADERRESOURCES_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_GSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_GSSETSAMPLERS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_SOSETTARGETS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_PSSETSHADER_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_PSSETSHADERRESOURCES_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_PSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_PSSETSAMPLERS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_RSSETSTATE_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_OMSETBLENDSTATE_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_OMSETDEPTHSTENCILSTATE_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_OMSETRENDERTARGETS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_SETPREDICATION_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_GETPRIVATEDATA_MOREDATA
  D3D11_MESSAGE_ID_SETPRIVATEDATA_INVALIDFREEDATA
  D3D11_MESSAGE_ID_SETPRIVATEDATA_INVALIDIUNKNOWN
  D3D11_MESSAGE_ID_SETPRIVATEDATA_INVALIDFLAGS
  D3D11_MESSAGE_ID_SETPRIVATEDATA_CHANGINGPARAMS
  D3D11_MESSAGE_ID_SETPRIVATEDATA_OUTOFMEMORY
  D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDFORMAT
  D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDSAMPLES
  D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDUSAGE
  D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDBINDFLAGS
  D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDCPUACCESSFLAGS
  D3D11_MESSAGE_ID_CREATEBUFFER_UNRECOGNIZEDMISCFLAGS
  D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDCPUACCESSFLAGS
  D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDBINDFLAGS
  D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDINITIALDATA
  D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDDIMENSIONS
  D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDMIPLEVELS
  D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDMISCFLAGS
  D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDARG_RETURN
  D3D11_MESSAGE_ID_CREATEBUFFER_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATEBUFFER_NULLDESC
  D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDCONSTANTBUFFERBINDINGS
  D3D11_MESSAGE_ID_CREATEBUFFER_LARGEALLOCATION
  D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDFORMAT
  D3D11_MESSAGE_ID_CREATETEXTURE1D_UNSUPPORTEDFORMAT
  D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDSAMPLES
  D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDUSAGE
  D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDBINDFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDCPUACCESSFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE1D_UNRECOGNIZEDMISCFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDCPUACCESSFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDBINDFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDINITIALDATA
  D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDDIMENSIONS
  D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDMIPLEVELS
  D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDMISCFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDARG_RETURN
  D3D11_MESSAGE_ID_CREATETEXTURE1D_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATETEXTURE1D_NULLDESC
  D3D11_MESSAGE_ID_CREATETEXTURE1D_LARGEALLOCATION
  D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDFORMAT
  D3D11_MESSAGE_ID_CREATETEXTURE2D_UNSUPPORTEDFORMAT
  D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDSAMPLES
  D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDUSAGE
  D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDBINDFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDCPUACCESSFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE2D_UNRECOGNIZEDMISCFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDCPUACCESSFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDBINDFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDINITIALDATA
  D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDDIMENSIONS
  D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDMIPLEVELS
  D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDMISCFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDARG_RETURN
  D3D11_MESSAGE_ID_CREATETEXTURE2D_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATETEXTURE2D_NULLDESC
  D3D11_MESSAGE_ID_CREATETEXTURE2D_LARGEALLOCATION
  D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDFORMAT
  D3D11_MESSAGE_ID_CREATETEXTURE3D_UNSUPPORTEDFORMAT
  D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDSAMPLES
  D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDUSAGE
  D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDBINDFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDCPUACCESSFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE3D_UNRECOGNIZEDMISCFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDCPUACCESSFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDBINDFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDINITIALDATA
  D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDDIMENSIONS
  D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDMIPLEVELS
  D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDMISCFLAGS
  D3D11_MESSAGE_ID_CREATETEXTURE3D_INVALIDARG_RETURN
  D3D11_MESSAGE_ID_CREATETEXTURE3D_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATETEXTURE3D_NULLDESC
  D3D11_MESSAGE_ID_CREATETEXTURE3D_LARGEALLOCATION
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_UNRECOGNIZEDFORMAT
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDESC
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFORMAT
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDIMENSIONS
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDRESOURCE
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_TOOMANYOBJECTS
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDARG_RETURN
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_UNRECOGNIZEDFORMAT
  D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_UNSUPPORTEDFORMAT
  D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDESC
  D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDFORMAT
  D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDIMENSIONS
  D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDRESOURCE
  D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_TOOMANYOBJECTS
  D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDARG_RETURN
  D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_UNRECOGNIZEDFORMAT
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDESC
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFORMAT
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDDIMENSIONS
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDRESOURCE
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_TOOMANYOBJECTS
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDARG_RETURN
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_OUTOFMEMORY
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_TOOMANYELEMENTS
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDFORMAT
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INCOMPATIBLEFORMAT
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOT
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDINPUTSLOTCLASS
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_STEPRATESLOTCLASSMISMATCH
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSLOTCLASSCHANGE
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDSTEPRATECHANGE
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_INVALIDALIGNMENT
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_DUPLICATESEMANTIC
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_UNPARSEABLEINPUTSIGNATURE
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_NULLSEMANTIC
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_MISSINGELEMENT
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_NULLDESC
  D3D11_MESSAGE_ID_CREATEVERTEXSHADER_OUTOFMEMORY
  D3D11_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERBYTECODE
  D3D11_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDSHADERTYPE
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_OUTOFMEMORY
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERBYTECODE
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDSHADERTYPE
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTOFMEMORY
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERBYTECODE
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSHADERTYPE
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMENTRIES
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSTREAMSTRIDEUNUSED
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDDECL
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_EXPECTEDDECL
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_OUTPUTSLOT0EXPECTED
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSLOT
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_ONLYONEELEMENTPERSLOT
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCOMPONENTCOUNT
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTARTCOMPONENTANDCOMPONENTCOUNT
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDGAPDEFINITION
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_REPEATEDOUTPUT
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDOUTPUTSTREAMSTRIDE
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGSEMANTIC
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MASKMISMATCH
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_CANTHAVEONLYGAPS
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DECLTOOCOMPLEX
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_MISSINGOUTPUTSIGNATURE
  D3D11_MESSAGE_ID_CREATEPIXELSHADER_OUTOFMEMORY
  D3D11_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERBYTECODE
  D3D11_MESSAGE_ID_CREATEPIXELSHADER_INVALIDSHADERTYPE
  D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFILLMODE
  D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDCULLMODE
  D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDDEPTHBIASCLAMP
  D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDSLOPESCALEDDEPTHBIAS
  D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_TOOMANYOBJECTS
  D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_NULLDESC
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHWRITEMASK
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDDEPTHFUNC
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFAILOP
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILZFAILOP
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILPASSOP
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDFRONTFACESTENCILFUNC
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFAILOP
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILZFAILOP
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILPASSOP
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_INVALIDBACKFACESTENCILFUNC
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_TOOMANYOBJECTS
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_NULLDESC
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLEND
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLEND
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOP
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDSRCBLENDALPHA
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDDESTBLENDALPHA
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDBLENDOPALPHA
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDRENDERTARGETWRITEMASK
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_TOOMANYOBJECTS
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_NULLDESC
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDFILTER
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSU
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSV
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDADDRESSW
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMIPLODBIAS
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXANISOTROPY
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDCOMPARISONFUNC
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMINLOD
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_INVALIDMAXLOD
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_TOOMANYOBJECTS
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_NULLDESC
  D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDQUERY
  D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDMISCFLAGS
  D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_UNEXPECTEDMISCFLAG
  D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_NULLDESC
  D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNRECOGNIZED
  D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNDEFINED
  D3D11_MESSAGE_ID_IASETVERTEXBUFFERS_INVALIDBUFFER
  D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_OFFSET_TOO_LARGE
  D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_BUFFERS_EMPTY
  D3D11_MESSAGE_ID_IASETINDEXBUFFER_INVALIDBUFFER
  D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_FORMAT_INVALID
  D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_OFFSET_TOO_LARGE
  D3D11_MESSAGE_ID_DEVICE_IASETINDEXBUFFER_OFFSET_UNALIGNED
  D3D11_MESSAGE_ID_DEVICE_VSSETSHADERRESOURCES_VIEWS_EMPTY
  D3D11_MESSAGE_ID_VSSETCONSTANTBUFFERS_INVALIDBUFFER
  D3D11_MESSAGE_ID_DEVICE_VSSETCONSTANTBUFFERS_BUFFERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_VSSETSAMPLERS_SAMPLERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_GSSETSHADERRESOURCES_VIEWS_EMPTY
  D3D11_MESSAGE_ID_GSSETCONSTANTBUFFERS_INVALIDBUFFER
  D3D11_MESSAGE_ID_DEVICE_GSSETCONSTANTBUFFERS_BUFFERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_GSSETSAMPLERS_SAMPLERS_EMPTY
  D3D11_MESSAGE_ID_SOSETTARGETS_INVALIDBUFFER
  D3D11_MESSAGE_ID_DEVICE_SOSETTARGETS_OFFSET_UNALIGNED
  D3D11_MESSAGE_ID_DEVICE_PSSETSHADERRESOURCES_VIEWS_EMPTY
  D3D11_MESSAGE_ID_PSSETCONSTANTBUFFERS_INVALIDBUFFER
  D3D11_MESSAGE_ID_DEVICE_PSSETCONSTANTBUFFERS_BUFFERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_PSSETSAMPLERS_SAMPLERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_INVALIDVIEWPORT
  D3D11_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_INVALIDSCISSOR
  D3D11_MESSAGE_ID_CLEARRENDERTARGETVIEW_DENORMFLUSH
  D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DENORMFLUSH
  D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_INVALID
  D3D11_MESSAGE_ID_DEVICE_IAGETVERTEXBUFFERS_BUFFERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_VSGETSHADERRESOURCES_VIEWS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_VSGETCONSTANTBUFFERS_BUFFERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_VSGETSAMPLERS_SAMPLERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_GSGETSHADERRESOURCES_VIEWS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_GSGETCONSTANTBUFFERS_BUFFERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_GSGETSAMPLERS_SAMPLERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_SOGETTARGETS_BUFFERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_PSGETSHADERRESOURCES_VIEWS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_PSGETCONSTANTBUFFERS_BUFFERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_PSGETSAMPLERS_SAMPLERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_RSGETVIEWPORTS_VIEWPORTS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_RSGETSCISSORRECTS_RECTS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_GENERATEMIPS_RESOURCE_INVALID
  D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDDESTINATIONSUBRESOURCE
  D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCESUBRESOURCE
  D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCEBOX
  D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCE
  D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDDESTINATIONSTATE
  D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_INVALIDSOURCESTATE
  D3D11_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCE
  D3D11_MESSAGE_ID_COPYRESOURCE_INVALIDDESTINATIONSTATE
  D3D11_MESSAGE_ID_COPYRESOURCE_INVALIDSOURCESTATE
  D3D11_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSUBRESOURCE
  D3D11_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONBOX
  D3D11_MESSAGE_ID_UPDATESUBRESOURCE_INVALIDDESTINATIONSTATE
  D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_INVALID
  D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_DESTINATION_SUBRESOURCE_INVALID
  D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_INVALID
  D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_SOURCE_SUBRESOURCE_INVALID
  D3D11_MESSAGE_ID_DEVICE_RESOLVESUBRESOURCE_FORMAT_INVALID
  D3D11_MESSAGE_ID_BUFFER_MAP_INVALIDMAPTYPE
  D3D11_MESSAGE_ID_BUFFER_MAP_INVALIDFLAGS
  D3D11_MESSAGE_ID_BUFFER_MAP_ALREADYMAPPED
  D3D11_MESSAGE_ID_BUFFER_MAP_DEVICEREMOVED_RETURN
  D3D11_MESSAGE_ID_BUFFER_UNMAP_NOTMAPPED
  D3D11_MESSAGE_ID_TEXTURE1D_MAP_INVALIDMAPTYPE
  D3D11_MESSAGE_ID_TEXTURE1D_MAP_INVALIDSUBRESOURCE
  D3D11_MESSAGE_ID_TEXTURE1D_MAP_INVALIDFLAGS
  D3D11_MESSAGE_ID_TEXTURE1D_MAP_ALREADYMAPPED
  D3D11_MESSAGE_ID_TEXTURE1D_MAP_DEVICEREMOVED_RETURN
  D3D11_MESSAGE_ID_TEXTURE1D_UNMAP_INVALIDSUBRESOURCE
  D3D11_MESSAGE_ID_TEXTURE1D_UNMAP_NOTMAPPED
  D3D11_MESSAGE_ID_TEXTURE2D_MAP_INVALIDMAPTYPE
  D3D11_MESSAGE_ID_TEXTURE2D_MAP_INVALIDSUBRESOURCE
  D3D11_MESSAGE_ID_TEXTURE2D_MAP_INVALIDFLAGS
  D3D11_MESSAGE_ID_TEXTURE2D_MAP_ALREADYMAPPED
  D3D11_MESSAGE_ID_TEXTURE2D_MAP_DEVICEREMOVED_RETURN
  D3D11_MESSAGE_ID_TEXTURE2D_UNMAP_INVALIDSUBRESOURCE
  D3D11_MESSAGE_ID_TEXTURE2D_UNMAP_NOTMAPPED
  D3D11_MESSAGE_ID_TEXTURE3D_MAP_INVALIDMAPTYPE
  D3D11_MESSAGE_ID_TEXTURE3D_MAP_INVALIDSUBRESOURCE
  D3D11_MESSAGE_ID_TEXTURE3D_MAP_INVALIDFLAGS
  D3D11_MESSAGE_ID_TEXTURE3D_MAP_ALREADYMAPPED
  D3D11_MESSAGE_ID_TEXTURE3D_MAP_DEVICEREMOVED_RETURN
  D3D11_MESSAGE_ID_TEXTURE3D_UNMAP_INVALIDSUBRESOURCE
  D3D11_MESSAGE_ID_TEXTURE3D_UNMAP_NOTMAPPED
  D3D11_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_DEPRECATED
  D3D11_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_FORMAT_DEPRECATED
  D3D11_MESSAGE_ID_SETEXCEPTIONMODE_UNRECOGNIZEDFLAGS
  D3D11_MESSAGE_ID_SETEXCEPTIONMODE_INVALIDARG_RETURN
  D3D11_MESSAGE_ID_SETEXCEPTIONMODE_DEVICEREMOVED_RETURN
  D3D11_MESSAGE_ID_REF_SIMULATING_INFINITELY_FAST_HARDWARE
  D3D11_MESSAGE_ID_REF_THREADING_MODE
  D3D11_MESSAGE_ID_REF_UMDRIVER_EXCEPTION
  D3D11_MESSAGE_ID_REF_KMDRIVER_EXCEPTION
  D3D11_MESSAGE_ID_REF_HARDWARE_EXCEPTION
  D3D11_MESSAGE_ID_REF_ACCESSING_INDEXABLE_TEMP_OUT_OF_RANGE
  D3D11_MESSAGE_ID_REF_PROBLEM_PARSING_SHADER
  D3D11_MESSAGE_ID_REF_OUT_OF_MEMORY
  D3D11_MESSAGE_ID_REF_INFO
  D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEXPOS_OVERFLOW
  D3D11_MESSAGE_ID_DEVICE_DRAWINDEXED_INDEXPOS_OVERFLOW
  D3D11_MESSAGE_ID_DEVICE_DRAWINSTANCED_VERTEXPOS_OVERFLOW
  D3D11_MESSAGE_ID_DEVICE_DRAWINSTANCED_INSTANCEPOS_OVERFLOW
  D3D11_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INSTANCEPOS_OVERFLOW
  D3D11_MESSAGE_ID_DEVICE_DRAWINDEXEDINSTANCED_INDEXPOS_OVERFLOW
  D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_SHADER_NOT_SET
  D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SEMANTICNAME_NOT_FOUND
  D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERINDEX
  D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_COMPONENTTYPE
  D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_REGISTERMASK
  D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_SYSTEMVALUE
  D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_NEVERWRITTEN_ALWAYSREADS
  D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_BUFFER_NOT_SET
  D3D11_MESSAGE_ID_DEVICE_DRAW_INPUTLAYOUT_NOT_SET
  D3D11_MESSAGE_ID_DEVICE_DRAW_CONSTANT_BUFFER_NOT_SET
  D3D11_MESSAGE_ID_DEVICE_DRAW_CONSTANT_BUFFER_TOO_SMALL
  D3D11_MESSAGE_ID_DEVICE_DRAW_SAMPLER_NOT_SET
  D3D11_MESSAGE_ID_DEVICE_DRAW_SHADERRESOURCEVIEW_NOT_SET
  D3D11_MESSAGE_ID_DEVICE_DRAW_VIEW_DIMENSION_MISMATCH
  D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_BUFFER_STRIDE_TOO_SMALL
  D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_BUFFER_TOO_SMALL
  D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_BUFFER_NOT_SET
  D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_BUFFER_FORMAT_INVALID
  D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_BUFFER_TOO_SMALL
  D3D11_MESSAGE_ID_DEVICE_DRAW_GS_INPUT_PRIMITIVE_MISMATCH
  D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_RETURN_TYPE_MISMATCH
  D3D11_MESSAGE_ID_DEVICE_DRAW_POSITION_NOT_PRESENT
  D3D11_MESSAGE_ID_DEVICE_DRAW_OUTPUT_STREAM_NOT_SET
  D3D11_MESSAGE_ID_DEVICE_DRAW_BOUND_RESOURCE_MAPPED
  D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_PRIMITIVETOPOLOGY
  D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_OFFSET_UNALIGNED
  D3D11_MESSAGE_ID_DEVICE_DRAW_VERTEX_STRIDE_UNALIGNED
  D3D11_MESSAGE_ID_DEVICE_DRAW_INDEX_OFFSET_UNALIGNED
  D3D11_MESSAGE_ID_DEVICE_DRAW_OUTPUT_STREAM_OFFSET_UNALIGNED
  D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_LD_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_SAMPLE_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_SAMPLE_C_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_MULTISAMPLE_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_DRAW_SO_TARGETS_BOUND_WITHOUT_SOURCE
  D3D11_MESSAGE_ID_DEVICE_DRAW_SO_STRIDE_LARGER_THAN_BUFFER
  D3D11_MESSAGE_ID_DEVICE_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_BLENDING
  D3D11_MESSAGE_ID_DEVICE_DRAW_OM_DUAL_SOURCE_BLENDING_CAN_ONLY_HAVE_RENDER_TARGET_0
  D3D11_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_AT_FAULT
  D3D11_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_POSSIBLY_AT_FAULT
  D3D11_MESSAGE_ID_DEVICE_REMOVAL_PROCESS_NOT_AT_FAULT
  D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_INVALIDARG_RETURN
  D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BADINTERFACE_RETURN
  D3D11_MESSAGE_ID_DEVICE_DRAW_VIEWPORT_NOT_SET
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_TRAILING_DIGIT_IN_SEMANTIC
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_TRAILING_DIGIT_IN_SEMANTIC
  D3D11_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_DENORMFLUSH
  D3D11_MESSAGE_ID_OMSETRENDERTARGETS_INVALIDVIEW
  D3D11_MESSAGE_ID_DEVICE_SETTEXTFILTERSIZE_INVALIDDIMENSIONS
  D3D11_MESSAGE_ID_DEVICE_DRAW_SAMPLER_MISMATCH
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_TYPE_MISMATCH
  D3D11_MESSAGE_ID_BLENDSTATE_GETDESC_LEGACY
  D3D11_MESSAGE_ID_SHADERRESOURCEVIEW_GETDESC_LEGACY
  D3D11_MESSAGE_ID_CREATEQUERY_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATEPREDICATE_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATECOUNTER_OUTOFRANGE_COUNTER
  D3D11_MESSAGE_ID_CREATECOUNTER_SIMULTANEOUS_ACTIVE_COUNTERS_EXHAUSTED
  D3D11_MESSAGE_ID_CREATECOUNTER_UNSUPPORTED_WELLKNOWN_COUNTER
  D3D11_MESSAGE_ID_CREATECOUNTER_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATECOUNTER_NONEXCLUSIVE_RETURN
  D3D11_MESSAGE_ID_CREATECOUNTER_NULLDESC
  D3D11_MESSAGE_ID_CHECKCOUNTER_OUTOFRANGE_COUNTER
  D3D11_MESSAGE_ID_CHECKCOUNTER_UNSUPPORTED_WELLKNOWN_COUNTER
  D3D11_MESSAGE_ID_SETPREDICATION_INVALID_PREDICATE_STATE
  D3D11_MESSAGE_ID_QUERY_BEGIN_UNSUPPORTED
  D3D11_MESSAGE_ID_PREDICATE_BEGIN_DURING_PREDICATION
  D3D11_MESSAGE_ID_QUERY_BEGIN_DUPLICATE
  D3D11_MESSAGE_ID_QUERY_BEGIN_ABANDONING_PREVIOUS_RESULTS
  D3D11_MESSAGE_ID_PREDICATE_END_DURING_PREDICATION
  D3D11_MESSAGE_ID_QUERY_END_ABANDONING_PREVIOUS_RESULTS
  D3D11_MESSAGE_ID_QUERY_END_WITHOUT_BEGIN
  D3D11_MESSAGE_ID_QUERY_GETDATA_INVALID_DATASIZE
  D3D11_MESSAGE_ID_QUERY_GETDATA_INVALID_FLAGS
  D3D11_MESSAGE_ID_QUERY_GETDATA_INVALID_CALL
  D3D11_MESSAGE_ID_DEVICE_DRAW_PS_OUTPUT_TYPE_MISMATCH
  D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_FORMAT_GATHER_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_CENTER_MULTISAMPLE_PATTERN
  D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_STRIDE_TOO_LARGE
  D3D11_MESSAGE_ID_DEVICE_IASETVERTEXBUFFERS_INVALIDRANGE
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_EMPTY_LAYOUT
  D3D11_MESSAGE_ID_DEVICE_DRAW_RESOURCE_SAMPLE_COUNT_MISMATCH
  D3D11_MESSAGE_ID_LIVE_OBJECT_SUMMARY
  D3D11_MESSAGE_ID_LIVE_BUFFER
  D3D11_MESSAGE_ID_LIVE_TEXTURE1D
  D3D11_MESSAGE_ID_LIVE_TEXTURE2D
  D3D11_MESSAGE_ID_LIVE_TEXTURE3D
  D3D11_MESSAGE_ID_LIVE_SHADERRESOURCEVIEW
  D3D11_MESSAGE_ID_LIVE_RENDERTARGETVIEW
  D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILVIEW
  D3D11_MESSAGE_ID_LIVE_VERTEXSHADER
  D3D11_MESSAGE_ID_LIVE_GEOMETRYSHADER
  D3D11_MESSAGE_ID_LIVE_PIXELSHADER
  D3D11_MESSAGE_ID_LIVE_INPUTLAYOUT
  D3D11_MESSAGE_ID_LIVE_SAMPLER
  D3D11_MESSAGE_ID_LIVE_BLENDSTATE
  D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILSTATE
  D3D11_MESSAGE_ID_LIVE_RASTERIZERSTATE
  D3D11_MESSAGE_ID_LIVE_QUERY
  D3D11_MESSAGE_ID_LIVE_PREDICATE
  D3D11_MESSAGE_ID_LIVE_COUNTER
  D3D11_MESSAGE_ID_LIVE_DEVICE
  D3D11_MESSAGE_ID_LIVE_SWAPCHAIN
  D3D11_MESSAGE_ID_D3D10_MESSAGES_END
  D3D11_MESSAGE_ID_D3D10L9_MESSAGES_START
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILSTATE_STENCIL_NO_TWO_SIDED
  D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_DepthBiasClamp_NOT_SUPPORTED
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_NO_COMPARISON_SUPPORT
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_EXCESSIVE_ANISOTROPY
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_BORDER_OUT_OF_RANGE
  D3D11_MESSAGE_ID_VSSETSAMPLERS_NOT_SUPPORTED
  D3D11_MESSAGE_ID_VSSETSAMPLERS_TOO_MANY_SAMPLERS
  D3D11_MESSAGE_ID_PSSETSAMPLERS_TOO_MANY_SAMPLERS
  D3D11_MESSAGE_ID_CREATERESOURCE_NO_ARRAYS
  D3D11_MESSAGE_ID_CREATERESOURCE_NO_VB_AND_IB_BIND
  D3D11_MESSAGE_ID_CREATERESOURCE_NO_TEXTURE_1D
  D3D11_MESSAGE_ID_CREATERESOURCE_DIMENSION_OUT_OF_RANGE
  D3D11_MESSAGE_ID_CREATERESOURCE_NOT_BINDABLE_AS_SHADER_RESOURCE
  D3D11_MESSAGE_ID_OMSETRENDERTARGETS_TOO_MANY_RENDER_TARGETS
  D3D11_MESSAGE_ID_OMSETRENDERTARGETS_NO_DIFFERING_BIT_DEPTHS
  D3D11_MESSAGE_ID_IASETVERTEXBUFFERS_BAD_BUFFER_INDEX
  D3D11_MESSAGE_ID_DEVICE_RSSETVIEWPORTS_TOO_MANY_VIEWPORTS
  D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_ADJACENCY_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_TOO_MANY_SCISSORS
  D3D11_MESSAGE_ID_COPYRESOURCE_ONLY_TEXTURE_2D_WITHIN_GPU_MEMORY
  D3D11_MESSAGE_ID_COPYRESOURCE_NO_TEXTURE_3D_READBACK
  D3D11_MESSAGE_ID_COPYRESOURCE_NO_TEXTURE_ONLY_READBACK
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_UNSUPPORTED_FORMAT
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_ALPHA_TO_COVERAGE
  D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_DepthClipEnable_MUST_BE_TRUE
  D3D11_MESSAGE_ID_DRAWINDEXED_STARTINDEXLOCATION_MUST_BE_POSITIVE
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_MUST_USE_LOWEST_LOD
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_MINLOD_MUST_NOT_BE_FRACTIONAL
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_MAXLOD_MUST_BE_FLT_MAX
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_FIRSTARRAYSLICE_MUST_BE_ZERO
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_CUBES_MUST_HAVE_6_SIDES
  D3D11_MESSAGE_ID_CREATERESOURCE_NOT_BINDABLE_AS_RENDER_TARGET
  D3D11_MESSAGE_ID_CREATERESOURCE_NO_DWORD_INDEX_BUFFER
  D3D11_MESSAGE_ID_CREATERESOURCE_MSAA_PRECLUDES_SHADER_RESOURCE
  D3D11_MESSAGE_ID_CREATERESOURCE_PRESENTATION_PRECLUDES_SHADER_RESOURCE
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_INDEPENDENT_BLEND_ENABLE
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_INDEPENDENT_WRITE_MASKS
  D3D11_MESSAGE_ID_CREATERESOURCE_NO_STREAM_OUT
  D3D11_MESSAGE_ID_CREATERESOURCE_ONLY_VB_IB_FOR_BUFFERS
  D3D11_MESSAGE_ID_CREATERESOURCE_NO_AUTOGEN_FOR_VOLUMES
  D3D11_MESSAGE_ID_CREATERESOURCE_DXGI_FORMAT_R8G8B8A8_CANNOT_BE_SHARED
  D3D11_MESSAGE_ID_VSSHADERRESOURCES_NOT_SUPPORTED
  D3D11_MESSAGE_ID_GEOMETRY_SHADER_NOT_SUPPORTED
  D3D11_MESSAGE_ID_STREAM_OUT_NOT_SUPPORTED
  D3D11_MESSAGE_ID_TEXT_FILTER_NOT_SUPPORTED
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_SEPARATE_ALPHA_BLEND
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_NO_MRT_BLEND
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_OPERATION_NOT_SUPPORTED
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_NO_MIRRORONCE
  D3D11_MESSAGE_ID_DRAWINSTANCED_NOT_SUPPORTED
  D3D11_MESSAGE_ID_DRAWINDEXEDINSTANCED_NOT_SUPPORTED_BELOW_9_3
  D3D11_MESSAGE_ID_DRAWINDEXED_POINTLIST_UNSUPPORTED
  D3D11_MESSAGE_ID_SETBLENDSTATE_SAMPLE_MASK_CANNOT_BE_ZERO
  D3D11_MESSAGE_ID_CREATERESOURCE_DIMENSION_EXCEEDS_FEATURE_LEVEL_DEFINITION
  D3D11_MESSAGE_ID_CREATERESOURCE_ONLY_SINGLE_MIP_LEVEL_DEPTH_STENCIL_SUPPORTED
  D3D11_MESSAGE_ID_DEVICE_RSSETSCISSORRECTS_NEGATIVESCISSOR
  D3D11_MESSAGE_ID_SLOT_ZERO_MUST_BE_D3D10_INPUT_PER_VERTEX_DATA
  D3D11_MESSAGE_ID_CREATERESOURCE_NON_POW_2_MIPMAP
  D3D11_MESSAGE_ID_CREATESAMPLERSTATE_BORDER_NOT_SUPPORTED
  D3D11_MESSAGE_ID_OMSETRENDERTARGETS_NO_SRGB_MRT
  D3D11_MESSAGE_ID_COPYRESOURCE_NO_3D_MISMATCHED_UPDATES
  D3D11_MESSAGE_ID_D3D10L9_MESSAGES_END
  D3D11_MESSAGE_ID_D3D11_MESSAGES_START
  D3D11_MESSAGE_ID_CREATEDEPTHSTENCILVIEW_INVALIDFLAGS
  D3D11_MESSAGE_ID_CREATEVERTEXSHADER_INVALIDCLASSLINKAGE
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADER_INVALIDCLASSLINKAGE
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTREAMS
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAMTORASTERIZER
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTREAMS
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDCLASSLINKAGE
  D3D11_MESSAGE_ID_CREATEPIXELSHADER_INVALIDCLASSLINKAGE
  D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_INVALID_COMMANDLISTFLAGS
  D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_SINGLETHREADED
  D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_INVALIDARG_RETURN
  D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_INVALID_CALL_RETURN
  D3D11_MESSAGE_ID_CREATEDEFERREDCONTEXT_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_FINISHDISPLAYLIST_ONIMMEDIATECONTEXT
  D3D11_MESSAGE_ID_FINISHDISPLAYLIST_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_FINISHDISPLAYLIST_INVALID_CALL_RETURN
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDSTREAM
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDENTRIES
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UNEXPECTEDSTRIDES
  D3D11_MESSAGE_ID_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_INVALIDNUMSTRIDES
  D3D11_MESSAGE_ID_DEVICE_HSSETSHADERRESOURCES_HAZARD
  D3D11_MESSAGE_ID_DEVICE_HSSETCONSTANTBUFFERS_HAZARD
  D3D11_MESSAGE_ID_HSSETSHADERRESOURCES_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_HSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDCALL
  D3D11_MESSAGE_ID_CREATEHULLSHADER_OUTOFMEMORY
  D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERBYTECODE
  D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDSHADERTYPE
  D3D11_MESSAGE_ID_CREATEHULLSHADER_INVALIDCLASSLINKAGE
  D3D11_MESSAGE_ID_DEVICE_HSSETSHADERRESOURCES_VIEWS_EMPTY
  D3D11_MESSAGE_ID_HSSETCONSTANTBUFFERS_INVALIDBUFFER
  D3D11_MESSAGE_ID_DEVICE_HSSETCONSTANTBUFFERS_BUFFERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_HSSETSAMPLERS_SAMPLERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_HSGETSHADERRESOURCES_VIEWS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_HSGETCONSTANTBUFFERS_BUFFERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_HSGETSAMPLERS_SAMPLERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_DSSETSHADERRESOURCES_HAZARD
  D3D11_MESSAGE_ID_DEVICE_DSSETCONSTANTBUFFERS_HAZARD
  D3D11_MESSAGE_ID_DSSETSHADERRESOURCES_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_DSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCALL
  D3D11_MESSAGE_ID_CREATEDOMAINSHADER_OUTOFMEMORY
  D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERBYTECODE
  D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDSHADERTYPE
  D3D11_MESSAGE_ID_CREATEDOMAINSHADER_INVALIDCLASSLINKAGE
  D3D11_MESSAGE_ID_DEVICE_DSSETSHADERRESOURCES_VIEWS_EMPTY
  D3D11_MESSAGE_ID_DSSETCONSTANTBUFFERS_INVALIDBUFFER
  D3D11_MESSAGE_ID_DEVICE_DSSETCONSTANTBUFFERS_BUFFERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_DSSETSAMPLERS_SAMPLERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_DSGETSHADERRESOURCES_VIEWS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_DSGETCONSTANTBUFFERS_BUFFERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_DSGETSAMPLERS_SAMPLERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_DRAW_HS_XOR_DS_MISMATCH
  D3D11_MESSAGE_ID_DEFERRED_CONTEXT_REMOVAL_PROCESS_AT_FAULT
  D3D11_MESSAGE_ID_DEVICE_DRAWINDIRECT_INVALID_ARG_BUFFER
  D3D11_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_UNALIGNED
  D3D11_MESSAGE_ID_DEVICE_DRAWINDIRECT_OFFSET_OVERFLOW
  D3D11_MESSAGE_ID_RESOURCE_MAP_INVALIDMAPTYPE
  D3D11_MESSAGE_ID_RESOURCE_MAP_INVALIDSUBRESOURCE
  D3D11_MESSAGE_ID_RESOURCE_MAP_INVALIDFLAGS
  D3D11_MESSAGE_ID_RESOURCE_MAP_ALREADYMAPPED
  D3D11_MESSAGE_ID_RESOURCE_MAP_DEVICEREMOVED_RETURN
  D3D11_MESSAGE_ID_RESOURCE_MAP_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_RESOURCE_MAP_WITHOUT_INITIAL_DISCARD
  D3D11_MESSAGE_ID_RESOURCE_UNMAP_INVALIDSUBRESOURCE
  D3D11_MESSAGE_ID_RESOURCE_UNMAP_NOTMAPPED
  D3D11_MESSAGE_ID_DEVICE_DRAW_RASTERIZING_CONTROL_POINTS
  D3D11_MESSAGE_ID_DEVICE_IASETPRIMITIVETOPOLOGY_TOPOLOGY_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_DRAW_HS_DS_SIGNATURE_MISMATCH
  D3D11_MESSAGE_ID_DEVICE_DRAW_HULL_SHADER_INPUT_TOPOLOGY_MISMATCH
  D3D11_MESSAGE_ID_DEVICE_DRAW_HS_DS_CONTROL_POINT_COUNT_MISMATCH
  D3D11_MESSAGE_ID_DEVICE_DRAW_HS_DS_TESSELLATOR_DOMAIN_MISMATCH
  D3D11_MESSAGE_ID_CREATE_CONTEXT
  D3D11_MESSAGE_ID_LIVE_CONTEXT
  D3D11_MESSAGE_ID_DESTROY_CONTEXT
  D3D11_MESSAGE_ID_CREATE_BUFFER
  D3D11_MESSAGE_ID_LIVE_BUFFER_WIN7
  D3D11_MESSAGE_ID_DESTROY_BUFFER
  D3D11_MESSAGE_ID_CREATE_TEXTURE1D
  D3D11_MESSAGE_ID_LIVE_TEXTURE1D_WIN7
  D3D11_MESSAGE_ID_DESTROY_TEXTURE1D
  D3D11_MESSAGE_ID_CREATE_TEXTURE2D
  D3D11_MESSAGE_ID_LIVE_TEXTURE2D_WIN7
  D3D11_MESSAGE_ID_DESTROY_TEXTURE2D
  D3D11_MESSAGE_ID_CREATE_TEXTURE3D
  D3D11_MESSAGE_ID_LIVE_TEXTURE3D_WIN7
  D3D11_MESSAGE_ID_DESTROY_TEXTURE3D
  D3D11_MESSAGE_ID_CREATE_SHADERRESOURCEVIEW
  D3D11_MESSAGE_ID_LIVE_SHADERRESOURCEVIEW_WIN7
  D3D11_MESSAGE_ID_DESTROY_SHADERRESOURCEVIEW
  D3D11_MESSAGE_ID_CREATE_RENDERTARGETVIEW
  D3D11_MESSAGE_ID_LIVE_RENDERTARGETVIEW_WIN7
  D3D11_MESSAGE_ID_DESTROY_RENDERTARGETVIEW
  D3D11_MESSAGE_ID_CREATE_DEPTHSTENCILVIEW
  D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILVIEW_WIN7
  D3D11_MESSAGE_ID_DESTROY_DEPTHSTENCILVIEW
  D3D11_MESSAGE_ID_CREATE_VERTEXSHADER
  D3D11_MESSAGE_ID_LIVE_VERTEXSHADER_WIN7
  D3D11_MESSAGE_ID_DESTROY_VERTEXSHADER
  D3D11_MESSAGE_ID_CREATE_HULLSHADER
  D3D11_MESSAGE_ID_LIVE_HULLSHADER
  D3D11_MESSAGE_ID_DESTROY_HULLSHADER
  D3D11_MESSAGE_ID_CREATE_DOMAINSHADER
  D3D11_MESSAGE_ID_LIVE_DOMAINSHADER
  D3D11_MESSAGE_ID_DESTROY_DOMAINSHADER
  D3D11_MESSAGE_ID_CREATE_GEOMETRYSHADER
  D3D11_MESSAGE_ID_LIVE_GEOMETRYSHADER_WIN7
  D3D11_MESSAGE_ID_DESTROY_GEOMETRYSHADER
  D3D11_MESSAGE_ID_CREATE_PIXELSHADER
  D3D11_MESSAGE_ID_LIVE_PIXELSHADER_WIN7
  D3D11_MESSAGE_ID_DESTROY_PIXELSHADER
  D3D11_MESSAGE_ID_CREATE_INPUTLAYOUT
  D3D11_MESSAGE_ID_LIVE_INPUTLAYOUT_WIN7
  D3D11_MESSAGE_ID_DESTROY_INPUTLAYOUT
  D3D11_MESSAGE_ID_CREATE_SAMPLER
  D3D11_MESSAGE_ID_LIVE_SAMPLER_WIN7
  D3D11_MESSAGE_ID_DESTROY_SAMPLER
  D3D11_MESSAGE_ID_CREATE_BLENDSTATE
  D3D11_MESSAGE_ID_LIVE_BLENDSTATE_WIN7
  D3D11_MESSAGE_ID_DESTROY_BLENDSTATE
  D3D11_MESSAGE_ID_CREATE_DEPTHSTENCILSTATE
  D3D11_MESSAGE_ID_LIVE_DEPTHSTENCILSTATE_WIN7
  D3D11_MESSAGE_ID_DESTROY_DEPTHSTENCILSTATE
  D3D11_MESSAGE_ID_CREATE_RASTERIZERSTATE
  D3D11_MESSAGE_ID_LIVE_RASTERIZERSTATE_WIN7
  D3D11_MESSAGE_ID_DESTROY_RASTERIZERSTATE
  D3D11_MESSAGE_ID_CREATE_QUERY
  D3D11_MESSAGE_ID_LIVE_QUERY_WIN7
  D3D11_MESSAGE_ID_DESTROY_QUERY
  D3D11_MESSAGE_ID_CREATE_PREDICATE
  D3D11_MESSAGE_ID_LIVE_PREDICATE_WIN7
  D3D11_MESSAGE_ID_DESTROY_PREDICATE
  D3D11_MESSAGE_ID_CREATE_COUNTER
  D3D11_MESSAGE_ID_DESTROY_COUNTER
  D3D11_MESSAGE_ID_CREATE_COMMANDLIST
  D3D11_MESSAGE_ID_LIVE_COMMANDLIST
  D3D11_MESSAGE_ID_DESTROY_COMMANDLIST
  D3D11_MESSAGE_ID_CREATE_CLASSINSTANCE
  D3D11_MESSAGE_ID_LIVE_CLASSINSTANCE
  D3D11_MESSAGE_ID_DESTROY_CLASSINSTANCE
  D3D11_MESSAGE_ID_CREATE_CLASSLINKAGE
  D3D11_MESSAGE_ID_LIVE_CLASSLINKAGE
  D3D11_MESSAGE_ID_DESTROY_CLASSLINKAGE
  D3D11_MESSAGE_ID_LIVE_DEVICE_WIN7
  D3D11_MESSAGE_ID_LIVE_OBJECT_SUMMARY_WIN7
  D3D11_MESSAGE_ID_CREATE_COMPUTESHADER
  D3D11_MESSAGE_ID_LIVE_COMPUTESHADER
  D3D11_MESSAGE_ID_DESTROY_COMPUTESHADER
  D3D11_MESSAGE_ID_CREATE_UNORDEREDACCESSVIEW
  D3D11_MESSAGE_ID_LIVE_UNORDEREDACCESSVIEW
  D3D11_MESSAGE_ID_DESTROY_UNORDEREDACCESSVIEW
  D3D11_MESSAGE_ID_DEVICE_SETSHADER_INTERFACES_FEATURELEVEL
  D3D11_MESSAGE_ID_DEVICE_SETSHADER_INTERFACE_COUNT_MISMATCH
  D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE
  D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE_INDEX
  D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE_TYPE
  D3D11_MESSAGE_ID_DEVICE_SETSHADER_INVALID_INSTANCE_DATA
  D3D11_MESSAGE_ID_DEVICE_SETSHADER_UNBOUND_INSTANCE_DATA
  D3D11_MESSAGE_ID_DEVICE_SETSHADER_INSTANCE_DATA_BINDINGS
  D3D11_MESSAGE_ID_DEVICE_CREATESHADER_CLASSLINKAGE_FULL
  D3D11_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_UNRECOGNIZED_FEATURE
  D3D11_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_MISMATCHED_DATA_SIZE
  D3D11_MESSAGE_ID_DEVICE_CHECKFEATURESUPPORT_INVALIDARG_RETURN
  D3D11_MESSAGE_ID_DEVICE_CSSETSHADERRESOURCES_HAZARD
  D3D11_MESSAGE_ID_DEVICE_CSSETCONSTANTBUFFERS_HAZARD
  D3D11_MESSAGE_ID_CSSETSHADERRESOURCES_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_CSSETCONSTANTBUFFERS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCALL
  D3D11_MESSAGE_ID_CREATECOMPUTESHADER_OUTOFMEMORY
  D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERBYTECODE
  D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDSHADERTYPE
  D3D11_MESSAGE_ID_CREATECOMPUTESHADER_INVALIDCLASSLINKAGE
  D3D11_MESSAGE_ID_DEVICE_CSSETSHADERRESOURCES_VIEWS_EMPTY
  D3D11_MESSAGE_ID_CSSETCONSTANTBUFFERS_INVALIDBUFFER
  D3D11_MESSAGE_ID_DEVICE_CSSETCONSTANTBUFFERS_BUFFERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_CSSETSAMPLERS_SAMPLERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_CSGETSHADERRESOURCES_VIEWS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_CSGETCONSTANTBUFFERS_BUFFERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_CSGETSAMPLERS_SAMPLERS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEFLOATOPSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEFLOATOPSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEFLOATOPSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEFLOATOPSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEFLOATOPSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEFLOATOPSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEFLOATOPSNOTSUPPORTED
  D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDSTRUCTURESTRIDE
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDFLAGS
  D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDRESOURCE
  D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDESC
  D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFORMAT
  D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDIMENSIONS
  D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_UNRECOGNIZEDFORMAT
  D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_HAZARD
  D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_OVERLAPPING_OLD_SLOTS
  D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_NO_OP
  D3D11_MESSAGE_ID_CSSETUNORDEREDACCESSVIEWS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_PSSETUNORDEREDACCESSVIEWS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDARG_RETURN
  D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_TOOMANYOBJECTS
  D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_HAZARD
  D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEW_DENORMFLUSH
  D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSS_VIEWS_EMPTY
  D3D11_MESSAGE_ID_DEVICE_CSGETUNORDEREDACCESSS_VIEWS_EMPTY
  D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDFLAGS
  D3D11_MESSAGE_ID_CREATESHADERRESESOURCEVIEW_TOOMANYOBJECTS
  D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_INVALID_ARG_BUFFER
  D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_UNALIGNED
  D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_OFFSET_OVERFLOW
  D3D11_MESSAGE_ID_DEVICE_SETRESOURCEMINLOD_INVALIDCONTEXT
  D3D11_MESSAGE_ID_DEVICE_SETRESOURCEMINLOD_INVALIDRESOURCE
  D3D11_MESSAGE_ID_DEVICE_SETRESOURCEMINLOD_INVALIDMINLOD
  D3D11_MESSAGE_ID_DEVICE_GETRESOURCEMINLOD_INVALIDCONTEXT
  D3D11_MESSAGE_ID_DEVICE_GETRESOURCEMINLOD_INVALIDRESOURCE
  D3D11_MESSAGE_ID_OMSETDEPTHSTENCIL_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_DEPTH_READONLY
  D3D11_MESSAGE_ID_CLEARDEPTHSTENCILVIEW_STENCIL_READONLY
  D3D11_MESSAGE_ID_CHECKFEATURESUPPORT_FORMAT_DEPRECATED
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RETURN_TYPE_MISMATCH
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET
  D3D11_MESSAGE_ID_DEVICE_DRAW_UNORDEREDACCESSVIEW_RENDERTARGETVIEW_OVERLAP
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_DIMENSION_MISMATCH
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_APPEND_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMICS_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_STRUCTURE_STRIDE_MISMATCH
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_BUFFER_TYPE_MISMATCH
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_RAW_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_LD_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_FORMAT_STORE_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_ADD_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_BITWISE_OPS_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_CMPSTORE_CMPEXCHANGE_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_EXCHANGE_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_SIGNED_MINMAX_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_ATOMIC_UNSIGNED_MINMAX_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_DISPATCH_BOUND_RESOURCE_MAPPED
  D3D11_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_OVERFLOW
  D3D11_MESSAGE_ID_DEVICE_DISPATCH_THREADGROUPCOUNT_ZERO
  D3D11_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_STRUCTURE_STRIDE_MISMATCH
  D3D11_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_BUFFER_TYPE_MISMATCH
  D3D11_MESSAGE_ID_DEVICE_SHADERRESOURCEVIEW_RAW_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_DISPATCH_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_DISPATCHINDIRECT_UNSUPPORTED
  D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDOFFSET
  D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_LARGEOFFSET
  D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDDESTINATIONSTATE
  D3D11_MESSAGE_ID_COPYSTRUCTURECOUNT_INVALIDSOURCESTATE
  D3D11_MESSAGE_ID_CHECKFORMATSUPPORT_FORMAT_NOT_SUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_INVALIDVIEW
  D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_INVALIDOFFSET
  D3D11_MESSAGE_ID_DEVICE_CSSETUNORDEREDACCESSVIEWS_TOOMANYVIEWS
  D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWFLOAT_INVALIDFORMAT
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_COUNTER_UNSUPPORTED
  D3D11_MESSAGE_ID_REF_WARNING
  D3D11_MESSAGE_ID_DEVICE_DRAW_PIXEL_SHADER_WITHOUT_RTV_OR_DSV
  D3D11_MESSAGE_ID_SHADER_ABORT
  D3D11_MESSAGE_ID_SHADER_MESSAGE
  D3D11_MESSAGE_ID_SHADER_ERROR
  D3D11_MESSAGE_ID_OFFERRESOURCES_INVALIDRESOURCE
  D3D11_MESSAGE_ID_HSSETSAMPLERS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_DSSETSAMPLERS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_CSSETSAMPLERS_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_HSSETSHADER_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_DSSETSHADER_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_CSSETSHADER_UNBINDDELETINGOBJECT
  D3D11_MESSAGE_ID_ENQUEUESETEVENT_INVALIDARG_RETURN
  D3D11_MESSAGE_ID_ENQUEUESETEVENT_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_ENQUEUESETEVENT_ACCESSDENIED_RETURN
  D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_NUMUAVS_INVALIDRANGE
  D3D11_MESSAGE_ID_USE_OF_ZERO_REFCOUNT_OBJECT
  D3D11_MESSAGE_ID_D3D11_MESSAGES_END
  D3D11_MESSAGE_ID_D3D11_1_MESSAGES_START
  D3D11_MESSAGE_ID_CREATE_VIDEODECODER
  D3D11_MESSAGE_ID_CREATE_VIDEOPROCESSORENUM
  D3D11_MESSAGE_ID_CREATE_VIDEOPROCESSOR
  D3D11_MESSAGE_ID_CREATE_DECODEROUTPUTVIEW
  D3D11_MESSAGE_ID_CREATE_PROCESSORINPUTVIEW
  D3D11_MESSAGE_ID_CREATE_PROCESSOROUTPUTVIEW
  D3D11_MESSAGE_ID_CREATE_DEVICECONTEXTSTATE
  D3D11_MESSAGE_ID_LIVE_VIDEODECODER
  D3D11_MESSAGE_ID_LIVE_VIDEOPROCESSORENUM
  D3D11_MESSAGE_ID_LIVE_VIDEOPROCESSOR
  D3D11_MESSAGE_ID_LIVE_DECODEROUTPUTVIEW
  D3D11_MESSAGE_ID_LIVE_PROCESSORINPUTVIEW
  D3D11_MESSAGE_ID_LIVE_PROCESSOROUTPUTVIEW
  D3D11_MESSAGE_ID_LIVE_DEVICECONTEXTSTATE
  D3D11_MESSAGE_ID_DESTROY_VIDEODECODER
  D3D11_MESSAGE_ID_DESTROY_VIDEOPROCESSORENUM
  D3D11_MESSAGE_ID_DESTROY_VIDEOPROCESSOR
  D3D11_MESSAGE_ID_DESTROY_DECODEROUTPUTVIEW
  D3D11_MESSAGE_ID_DESTROY_PROCESSORINPUTVIEW
  D3D11_MESSAGE_ID_DESTROY_PROCESSOROUTPUTVIEW
  D3D11_MESSAGE_ID_DESTROY_DEVICECONTEXTSTATE
  D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_INVALIDFLAGS
  D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_INVALIDFEATURELEVEL
  D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_FEATURELEVELS_NOT_SUPPORTED
  D3D11_MESSAGE_ID_CREATEDEVICECONTEXTSTATE_INVALIDREFIID
  D3D11_MESSAGE_ID_DEVICE_DISCARDVIEW_INVALIDVIEW
  D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION1_INVALIDCOPYFLAGS
  D3D11_MESSAGE_ID_UPDATESUBRESOURCE1_INVALIDCOPYFLAGS
  D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALIDFORCEDSAMPLECOUNT
  D3D11_MESSAGE_ID_CREATEVIDEODECODER_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATEVIDEODECODER_NULLPARAM
  D3D11_MESSAGE_ID_CREATEVIDEODECODER_INVALIDFORMAT
  D3D11_MESSAGE_ID_CREATEVIDEODECODER_ZEROWIDTHHEIGHT
  D3D11_MESSAGE_ID_CREATEVIDEODECODER_DRIVER_INVALIDBUFFERSIZE
  D3D11_MESSAGE_ID_CREATEVIDEODECODER_DRIVER_INVALIDBUFFERUSAGE
  D3D11_MESSAGE_ID_GETVIDEODECODERPROFILECOUNT_OUTOFMEMORY
  D3D11_MESSAGE_ID_GETVIDEODECODERPROFILE_NULLPARAM
  D3D11_MESSAGE_ID_GETVIDEODECODERPROFILE_INVALIDINDEX
  D3D11_MESSAGE_ID_GETVIDEODECODERPROFILE_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CHECKVIDEODECODERFORMAT_NULLPARAM
  D3D11_MESSAGE_ID_CHECKVIDEODECODERFORMAT_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_GETVIDEODECODERCONFIGCOUNT_NULLPARAM
  D3D11_MESSAGE_ID_GETVIDEODECODERCONFIGCOUNT_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_GETVIDEODECODERCONFIG_NULLPARAM
  D3D11_MESSAGE_ID_GETVIDEODECODERCONFIG_INVALIDINDEX
  D3D11_MESSAGE_ID_GETVIDEODECODERCONFIG_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_GETDECODERCREATIONPARAMS_NULLPARAM
  D3D11_MESSAGE_ID_GETDECODERDRIVERHANDLE_NULLPARAM
  D3D11_MESSAGE_ID_GETDECODERBUFFER_NULLPARAM
  D3D11_MESSAGE_ID_GETDECODERBUFFER_INVALIDBUFFER
  D3D11_MESSAGE_ID_GETDECODERBUFFER_INVALIDTYPE
  D3D11_MESSAGE_ID_GETDECODERBUFFER_LOCKED
  D3D11_MESSAGE_ID_RELEASEDECODERBUFFER_NULLPARAM
  D3D11_MESSAGE_ID_RELEASEDECODERBUFFER_INVALIDTYPE
  D3D11_MESSAGE_ID_RELEASEDECODERBUFFER_NOTLOCKED
  D3D11_MESSAGE_ID_DECODERBEGINFRAME_NULLPARAM
  D3D11_MESSAGE_ID_DECODERBEGINFRAME_HAZARD
  D3D11_MESSAGE_ID_DECODERENDFRAME_NULLPARAM
  D3D11_MESSAGE_ID_SUBMITDECODERBUFFERS_NULLPARAM
  D3D11_MESSAGE_ID_SUBMITDECODERBUFFERS_INVALIDTYPE
  D3D11_MESSAGE_ID_DECODEREXTENSION_NULLPARAM
  D3D11_MESSAGE_ID_DECODEREXTENSION_INVALIDRESOURCE
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_NULLPARAM
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDFRAMEFORMAT
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDUSAGE
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDINPUTFRAMERATE
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDOUTPUTFRAMERATE
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORENUMERATOR_INVALIDWIDTHHEIGHT
  D3D11_MESSAGE_ID_GETVIDEOPROCESSORCONTENTDESC_NULLPARAM
  D3D11_MESSAGE_ID_CHECKVIDEOPROCESSORFORMAT_NULLPARAM
  D3D11_MESSAGE_ID_GETVIDEOPROCESSORCAPS_NULLPARAM
  D3D11_MESSAGE_ID_GETVIDEOPROCESSORRATECONVERSIONCAPS_NULLPARAM
  D3D11_MESSAGE_ID_GETVIDEOPROCESSORRATECONVERSIONCAPS_INVALIDINDEX
  D3D11_MESSAGE_ID_GETVIDEOPROCESSORCUSTOMRATE_NULLPARAM
  D3D11_MESSAGE_ID_GETVIDEOPROCESSORCUSTOMRATE_INVALIDINDEX
  D3D11_MESSAGE_ID_GETVIDEOPROCESSORFILTERRANGE_NULLPARAM
  D3D11_MESSAGE_ID_GETVIDEOPROCESSORFILTERRANGE_UNSUPPORTED
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOR_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOR_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTTARGETRECT_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTBACKGROUNDCOLOR_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTBACKGROUNDCOLOR_INVALIDALPHA
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCOLORSPACE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_UNSUPPORTED
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTALPHAFILLMODE_INVALIDFILLMODE
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCONSTRICTION_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSTEREOMODE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSTEREOMODE_UNSUPPORTED
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTEXTENSION_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTTARGETRECT_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTBACKGROUNDCOLOR_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCOLORSPACE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTALPHAFILLMODE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCONSTRICTION_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCONSTRICTION_UNSUPPORTED
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCONSTRICTION_INVALIDSIZE
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTSTEREOMODE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTEXTENSION_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFRAMEFORMAT_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFRAMEFORMAT_INVALIDFORMAT
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFRAMEFORMAT_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_INVALIDRATE
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_INVALIDFLAG
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMOUTPUTRATE_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSOURCERECT_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSOURCERECT_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSOURCERECT_INVALIDRECT
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMDESTRECT_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMDESTRECT_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMDESTRECT_INVALIDRECT
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_INVALIDALPHA
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_INVALIDCOUNT
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPALETTE_INVALIDALPHA
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_INVALIDRATIO
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_INVALIDRANGE
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMLUMAKEY_UNSUPPORTED
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_UNSUPPORTED
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_FLIPUNSUPPORTED
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_MONOOFFSETUNSUPPORTED
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_FORMATUNSUPPORTED
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMSTEREOFORMAT_INVALIDFORMAT
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMAUTOPROCESSINGMODE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMAUTOPROCESSINGMODE_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_INVALIDFILTER
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_UNSUPPORTED
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMFILTER_INVALIDLEVEL
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMEXTENSION_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMEXTENSION_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFRAMEFORMAT_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMOUTPUTRATE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSOURCERECT_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMDESTRECT_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMALPHA_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPALETTE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPIXELASPECTRATIO_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMLUMAKEY_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSTEREOFORMAT_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMAUTOPROCESSINGMODE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFILTER_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMEXTENSION_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMEXTENSION_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDSTREAMCOUNT
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_TARGETRECT
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDOUTPUT
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDPASTFRAMES
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDFUTUREFRAMES
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDSOURCERECT
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDDESTRECT
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDINPUTRESOURCE
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDARRAYSIZE
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDARRAY
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_RIGHTEXPECTED
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_RIGHTNOTEXPECTED
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_STEREONOTENABLED
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INVALIDRIGHTRESOURCE
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_NOSTEREOSTREAMS
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_INPUTHAZARD
  D3D11_MESSAGE_ID_VIDEOPROCESSORBLT_OUTPUTHAZARD
  D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_NULLPARAM
  D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDTYPE
  D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDBIND
  D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_UNSUPPORTEDFORMAT
  D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDMIP
  D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_UNSUPPORTEMIP
  D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDARRAYSIZE
  D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDARRAY
  D3D11_MESSAGE_ID_CREATEVIDEODECODEROUTPUTVIEW_INVALIDDIMENSION
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_NULLPARAM
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDTYPE
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDBIND
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMISC
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDUSAGE
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDFORMAT
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDFOURCC
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMIP
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_UNSUPPORTEDMIP
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDARRAYSIZE
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDARRAY
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDDIMENSION
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_NULLPARAM
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDTYPE
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDBIND
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDFORMAT
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDMIP
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_UNSUPPORTEDMIP
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_UNSUPPORTEDARRAY
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDARRAY
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDDIMENSION
  D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_USE_OF_FORCED_SAMPLE_COUNT
  D3D11_MESSAGE_ID_CREATEBLENDSTATE_INVALIDLOGICOPS
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDDARRAYWITHDECODER
  D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDDARRAYWITHDECODER
  D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDDARRAYWITHDECODER
  D3D11_MESSAGE_ID_DEVICE_LOCKEDOUT_INTERFACE
  D3D11_MESSAGE_ID_REF_WARNING_ATOMIC_INCONSISTENT
  D3D11_MESSAGE_ID_REF_WARNING_READING_UNINITIALIZED_RESOURCE
  D3D11_MESSAGE_ID_REF_WARNING_RAW_HAZARD
  D3D11_MESSAGE_ID_REF_WARNING_WAR_HAZARD
  D3D11_MESSAGE_ID_REF_WARNING_WAW_HAZARD
  D3D11_MESSAGE_ID_CREATECRYPTOSESSION_NULLPARAM
  D3D11_MESSAGE_ID_CREATECRYPTOSESSION_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_GETCRYPTOTYPE_NULLPARAM
  D3D11_MESSAGE_ID_GETDECODERPROFILE_NULLPARAM
  D3D11_MESSAGE_ID_GETCRYPTOSESSIONCERTIFICATESIZE_NULLPARAM
  D3D11_MESSAGE_ID_GETCRYPTOSESSIONCERTIFICATE_NULLPARAM
  D3D11_MESSAGE_ID_GETCRYPTOSESSIONCERTIFICATE_WRONGSIZE
  D3D11_MESSAGE_ID_GETCRYPTOSESSIONHANDLE_WRONGSIZE
  D3D11_MESSAGE_ID_NEGOTIATECRPYTOSESSIONKEYEXCHANGE_NULLPARAM
  D3D11_MESSAGE_ID_ENCRYPTIONBLT_UNSUPPORTED
  D3D11_MESSAGE_ID_ENCRYPTIONBLT_NULLPARAM
  D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_WRONGDEVICE
  D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_WRONGDEVICE
  D3D11_MESSAGE_ID_ENCRYPTIONBLT_FORMAT_MISMATCH
  D3D11_MESSAGE_ID_ENCRYPTIONBLT_SIZE_MISMATCH
  D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_MULTISAMPLED
  D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_NOT_STAGING
  D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_MAPPED
  D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_MAPPED
  D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_OFFERED
  D3D11_MESSAGE_ID_ENCRYPTIONBLT_DST_OFFERED
  D3D11_MESSAGE_ID_ENCRYPTIONBLT_SRC_CONTENT_UNDEFINED
  D3D11_MESSAGE_ID_DECRYPTIONBLT_UNSUPPORTED
  D3D11_MESSAGE_ID_DECRYPTIONBLT_NULLPARAM
  D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_WRONGDEVICE
  D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_WRONGDEVICE
  D3D11_MESSAGE_ID_DECRYPTIONBLT_FORMAT_MISMATCH
  D3D11_MESSAGE_ID_DECRYPTIONBLT_SIZE_MISMATCH
  D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_MULTISAMPLED
  D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_NOT_STAGING
  D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_NOT_RENDER_TARGET
  D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_MAPPED
  D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_MAPPED
  D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_OFFERED
  D3D11_MESSAGE_ID_DECRYPTIONBLT_DST_OFFERED
  D3D11_MESSAGE_ID_DECRYPTIONBLT_SRC_CONTENT_UNDEFINED
  D3D11_MESSAGE_ID_STARTSESSIONKEYREFRESH_NULLPARAM
  D3D11_MESSAGE_ID_STARTSESSIONKEYREFRESH_INVALIDSIZE
  D3D11_MESSAGE_ID_FINISHSESSIONKEYREFRESH_NULLPARAM
  D3D11_MESSAGE_ID_GETENCRYPTIONBLTKEY_NULLPARAM
  D3D11_MESSAGE_ID_GETENCRYPTIONBLTKEY_INVALIDSIZE
  D3D11_MESSAGE_ID_GETCONTENTPROTECTIONCAPS_NULLPARAM
  D3D11_MESSAGE_ID_CHECKCRYPTOKEYEXCHANGE_NULLPARAM
  D3D11_MESSAGE_ID_CHECKCRYPTOKEYEXCHANGE_INVALIDINDEX
  D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_NULLPARAM
  D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_UNSUPPORTED
  D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_INVALIDTYPE
  D3D11_MESSAGE_ID_CREATEAUTHENTICATEDCHANNEL_OUTOFMEMORY_RETURN
  D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATESIZE_INVALIDCHANNEL
  D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATESIZE_NULLPARAM
  D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATE_INVALIDCHANNEL
  D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATE_NULLPARAM
  D3D11_MESSAGE_ID_GETAUTHENTICATEDCHANNELCERTIFICATE_WRONGSIZE
  D3D11_MESSAGE_ID_NEGOTIATEAUTHENTICATEDCHANNELKEYEXCHANGE_INVALIDCHANNEL
  D3D11_MESSAGE_ID_NEGOTIATEAUTHENTICATEDCHANNELKEYEXCHANGE_NULLPARAM
  D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_NULLPARAM
  D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_WRONGCHANNEL
  D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_UNSUPPORTEDQUERY
  D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_WRONGSIZE
  D3D11_MESSAGE_ID_QUERYAUTHENTICATEDCHANNEL_INVALIDPROCESSINDEX
  D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_NULLPARAM
  D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_WRONGCHANNEL
  D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_UNSUPPORTEDCONFIGURE
  D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_WRONGSIZE
  D3D11_MESSAGE_ID_CONFIGUREAUTHENTICATEDCHANNEL_INVALIDPROCESSIDTYPE
  D3D11_MESSAGE_ID_VSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT
  D3D11_MESSAGE_ID_DSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT
  D3D11_MESSAGE_ID_HSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT
  D3D11_MESSAGE_ID_GSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT
  D3D11_MESSAGE_ID_PSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT
  D3D11_MESSAGE_ID_CSSETCONSTANTBUFFERS_INVALIDBUFFEROFFSETORCOUNT
  D3D11_MESSAGE_ID_NEGOTIATECRPYTOSESSIONKEYEXCHANGE_INVALIDSIZE
  D3D11_MESSAGE_ID_NEGOTIATEAUTHENTICATEDCHANNELKEYEXCHANGE_INVALIDSIZE
  D3D11_MESSAGE_ID_OFFERRESOURCES_INVALIDPRIORITY
  D3D11_MESSAGE_ID_GETCRYPTOSESSIONHANDLE_OUTOFMEMORY
  D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_NULLPARAM
  D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_INVALIDTYPE
  D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_INVALIDBIND
  D3D11_MESSAGE_ID_ACQUIREHANDLEFORCAPTURE_INVALIDARRAY
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_INVALID
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMROTATION_UNSUPPORTED
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMROTATION_NULLPARAM
  D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDVIEW
  D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_DOUBLEEXTENSIONSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_SHADEREXTENSIONSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_DOUBLEEXTENSIONSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_SHADEREXTENSIONSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_DOUBLEEXTENSIONSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_SHADEREXTENSIONSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_DOUBLEEXTENSIONSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_SHADEREXTENSIONSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_DOUBLEEXTENSIONSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_SHADEREXTENSIONSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_DOUBLEEXTENSIONSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_SHADEREXTENSIONSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_DOUBLEEXTENSIONSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_SHADEREXTENSIONSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_SHADER_LINKAGE_MINPRECISION
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMALPHA_UNSUPPORTED
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMPIXELASPECTRATIO_UNSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEVERTEXSHADER_UAVSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEHULLSHADER_UAVSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEDOMAINSHADER_UAVSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADER_UAVSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEGEOMETRYSHADERWITHSTREAMOUTPUT_UAVSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATEPIXELSHADER_UAVSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_CREATECOMPUTESHADER_UAVSNOTSUPPORTED
  D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_INVALIDOFFSET
  D3D11_MESSAGE_ID_DEVICE_OMSETRENDERTARGETSANDUNORDEREDACCESSVIEWS_TOOMANYVIEWS
  D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_NOTSUPPORTED
  D3D11_MESSAGE_ID_SWAPDEVICECONTEXTSTATE_NOTSUPPORTED
  D3D11_MESSAGE_ID_UPDATESUBRESOURCE_PREFERUPDATESUBRESOURCE1
  D3D11_MESSAGE_ID_GETDC_INACCESSIBLE
  D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDRECT
  D3D11_MESSAGE_ID_DEVICE_DRAW_SAMPLE_MASK_IGNORED_ON_FL9
  D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE1_NOT_SUPPORTED
  D3D11_MESSAGE_ID_DEVICE_OPEN_SHARED_RESOURCE_BY_NAME_NOT_SUPPORTED
  D3D11_MESSAGE_ID_ENQUEUESETEVENT_NOT_SUPPORTED
  D3D11_MESSAGE_ID_OFFERRELEASE_NOT_SUPPORTED
  D3D11_MESSAGE_ID_OFFERRESOURCES_INACCESSIBLE
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSORINPUTVIEW_INVALIDMSAA
  D3D11_MESSAGE_ID_CREATEVIDEOPROCESSOROUTPUTVIEW_INVALIDMSAA
  D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_INVALIDSOURCERECT
  D3D11_MESSAGE_ID_DEVICE_CLEARVIEW_EMPTYRECT
  D3D11_MESSAGE_ID_UPDATESUBRESOURCE_EMPTYDESTBOX
  D3D11_MESSAGE_ID_COPYSUBRESOURCEREGION_EMPTYSOURCEBOX
  D3D11_MESSAGE_ID_DEVICE_DRAW_OM_RENDER_TARGET_DOES_NOT_SUPPORT_LOGIC_OPS
  D3D11_MESSAGE_ID_DEVICE_DRAW_DEPTHSTENCILVIEW_NOT_SET
  D3D11_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET
  D3D11_MESSAGE_ID_DEVICE_DRAW_RENDERTARGETVIEW_NOT_SET_DUE_TO_FLIP_PRESENT
  D3D11_MESSAGE_ID_DEVICE_UNORDEREDACCESSVIEW_NOT_SET_DUE_TO_FLIP_PRESENT
  D3D11_MESSAGE_ID_GETDATAFORNEWHARDWAREKEY_NULLPARAM
  D3D11_MESSAGE_ID_CHECKCRYPTOSESSIONSTATUS_NULLPARAM
  D3D11_MESSAGE_ID_GETCRYPTOSESSIONPRIVATEDATASIZE_NULLPARAM
  D3D11_MESSAGE_ID_GETVIDEODECODERCAPS_NULLPARAM
  D3D11_MESSAGE_ID_GETVIDEODECODERCAPS_ZEROWIDTHHEIGHT
  D3D11_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_NULLPARAM
  D3D11_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE
  D3D11_MESSAGE_ID_CHECKVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT
  D3D11_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_NULLPARAM
  D3D11_MESSAGE_ID_VIDEODECODERENABLEDOWNSAMPLING_UNSUPPORTED
  D3D11_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_NULLPARAM
  D3D11_MESSAGE_ID_VIDEODECODERUPDATEDOWNSAMPLING_UNSUPPORTED
  D3D11_MESSAGE_ID_CHECKVIDEOPROCESSORFORMATCONVERSION_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTCOLORSPACE1_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTCOLORSPACE1_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMCOLORSPACE1_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMMIRROR_UNSUPPORTED
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE1_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMMIRROR_NULLPARAM
  D3D11_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_NULLPARAM
  D3D11_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_INVALIDCOLORSPACE
  D3D11_MESSAGE_ID_RECOMMENDVIDEODECODERDOWNSAMPLING_ZEROWIDTHHEIGHT
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTSHADERUSAGE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTSHADERUSAGE_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSTREAMCOUNT
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_TARGETRECT
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDSOURCERECT
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETBEHAVIORHINTS_INVALIDDESTRECT
  D3D11_MESSAGE_ID_GETCRYPTOSESSIONPRIVATEDATASIZE_INVALID_KEY_EXCHANGE_TYPE
  D3D11_MESSAGE_ID_D3D11_1_MESSAGES_END
  D3D11_MESSAGE_ID_D3D11_2_MESSAGES_START
  D3D11_MESSAGE_ID_CREATEBUFFER_INVALIDUSAGE
  D3D11_MESSAGE_ID_CREATETEXTURE1D_INVALIDUSAGE
  D3D11_MESSAGE_ID_CREATETEXTURE2D_INVALIDUSAGE
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_STEPRATE_NOT_1
  D3D11_MESSAGE_ID_CREATEINPUTLAYOUT_LEVEL9_INSTANCING_NOT_SUPPORTED
  D3D11_MESSAGE_ID_UPDATETILEMAPPINGS_INVALID_PARAMETER
  D3D11_MESSAGE_ID_COPYTILEMAPPINGS_INVALID_PARAMETER
  D3D11_MESSAGE_ID_COPYTILES_INVALID_PARAMETER
  D3D11_MESSAGE_ID_UPDATETILES_INVALID_PARAMETER
  D3D11_MESSAGE_ID_RESIZETILEPOOL_INVALID_PARAMETER
  D3D11_MESSAGE_ID_TILEDRESOURCEBARRIER_INVALID_PARAMETER
  D3D11_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_WARNING
  D3D11_MESSAGE_ID_NULL_TILE_MAPPING_ACCESS_ERROR
  D3D11_MESSAGE_ID_DIRTY_TILE_MAPPING_ACCESS
  D3D11_MESSAGE_ID_DUPLICATE_TILE_MAPPINGS_IN_COVERED_AREA
  D3D11_MESSAGE_ID_TILE_MAPPINGS_IN_COVERED_AREA_DUPLICATED_OUTSIDE
  D3D11_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INCOMPATIBLE_RESOURCES
  D3D11_MESSAGE_ID_TILE_MAPPINGS_SHARED_BETWEEN_INPUT_AND_OUTPUT
  D3D11_MESSAGE_ID_CHECKMULTISAMPLEQUALITYLEVELS_INVALIDFLAGS
  D3D11_MESSAGE_ID_GETRESOURCETILING_NONTILED_RESOURCE
  D3D11_MESSAGE_ID_RESIZETILEPOOL_SHRINK_WITH_MAPPINGS_STILL_DEFINED_PAST_END
  D3D11_MESSAGE_ID_NEED_TO_CALL_TILEDRESOURCEBARRIER
  D3D11_MESSAGE_ID_CREATEDEVICE_INVALIDARGS
  D3D11_MESSAGE_ID_CREATEDEVICE_WARNING
  D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWUINT_HAZARD
  D3D11_MESSAGE_ID_CLEARUNORDEREDACCESSVIEWFLOAT_HAZARD
  D3D11_MESSAGE_ID_TILED_RESOURCE_TIER_1_BUFFER_TEXTURE_MISMATCH
  D3D11_MESSAGE_ID_CREATE_CRYPTOSESSION
  D3D11_MESSAGE_ID_CREATE_AUTHENTICATEDCHANNEL
  D3D11_MESSAGE_ID_LIVE_CRYPTOSESSION
  D3D11_MESSAGE_ID_LIVE_AUTHENTICATEDCHANNEL
  D3D11_MESSAGE_ID_DESTROY_CRYPTOSESSION
  D3D11_MESSAGE_ID_DESTROY_AUTHENTICATEDCHANNEL
  D3D11_MESSAGE_ID_D3D11_2_MESSAGES_END
  D3D11_MESSAGE_ID_D3D11_3_MESSAGES_START
  D3D11_MESSAGE_ID_CREATERASTERIZERSTATE_INVALID_CONSERVATIVERASTERMODE
  D3D11_MESSAGE_ID_DEVICE_DRAW_INVALID_SYSTEMVALUE
  D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_INVALIDCONTEXTTYPE
  D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_DECODENOTSUPPORTED
  D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_ENCODENOTSUPPORTED
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDPLANEINDEX
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_INVALIDVIDEOPLANEINDEX
  D3D11_MESSAGE_ID_CREATESHADERRESOURCEVIEW_AMBIGUOUSVIDEOPLANEINDEX
  D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDPLANEINDEX
  D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_INVALIDVIDEOPLANEINDEX
  D3D11_MESSAGE_ID_CREATERENDERTARGETVIEW_AMBIGUOUSVIDEOPLANEINDEX
  D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDPLANEINDEX
  D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_INVALIDVIDEOPLANEINDEX
  D3D11_MESSAGE_ID_CREATEUNORDEREDACCESSVIEW_AMBIGUOUSVIDEOPLANEINDEX
  D3D11_MESSAGE_ID_JPEGDECODE_INVALIDSCANDATAOFFSET
  D3D11_MESSAGE_ID_JPEGDECODE_NOTSUPPORTED
  D3D11_MESSAGE_ID_JPEGDECODE_DIMENSIONSTOOLARGE
  D3D11_MESSAGE_ID_JPEGDECODE_INVALIDCOMPONENTS
  D3D11_MESSAGE_ID_JPEGDECODE_DESTINATIONNOT2D
  D3D11_MESSAGE_ID_JPEGDECODE_TILEDRESOURCESUNSUPPORTED
  D3D11_MESSAGE_ID_JPEGDECODE_GUARDRECTSUNSUPPORTED
  D3D11_MESSAGE_ID_JPEGDECODE_FORMATUNSUPPORTED
  D3D11_MESSAGE_ID_JPEGDECODE_INVALIDSUBRESOURCE
  D3D11_MESSAGE_ID_JPEGDECODE_INVALIDMIPLEVEL
  D3D11_MESSAGE_ID_JPEGDECODE_EMPTYDESTBOX
  D3D11_MESSAGE_ID_JPEGDECODE_DESTBOXNOT2D
  D3D11_MESSAGE_ID_JPEGDECODE_DESTBOXNOTSUB
  D3D11_MESSAGE_ID_JPEGDECODE_DESTBOXESINTERSECT
  D3D11_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEMISMATCH
  D3D11_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEMISMATCH
  D3D11_MESSAGE_ID_JPEGDECODE_XSUBSAMPLEODD
  D3D11_MESSAGE_ID_JPEGDECODE_YSUBSAMPLEODD
  D3D11_MESSAGE_ID_JPEGDECODE_OUTPUTDIMENSIONSTOOLARGE
  D3D11_MESSAGE_ID_JPEGDECODE_NONPOW2SCALEUNSUPPORTED
  D3D11_MESSAGE_ID_JPEGDECODE_FRACTIONALDOWNSCALETOLARGE
  D3D11_MESSAGE_ID_JPEGDECODE_CHROMASIZEMISMATCH
  D3D11_MESSAGE_ID_JPEGDECODE_LUMACHROMASIZEMISMATCH
  D3D11_MESSAGE_ID_JPEGDECODE_INVALIDNUMDESTINATIONS
  D3D11_MESSAGE_ID_JPEGDECODE_SUBBOXUNSUPPORTED
  D3D11_MESSAGE_ID_JPEGDECODE_1DESTUNSUPPORTEDFORMAT
  D3D11_MESSAGE_ID_JPEGDECODE_3DESTUNSUPPORTEDFORMAT
  D3D11_MESSAGE_ID_JPEGDECODE_SCALEUNSUPPORTED
  D3D11_MESSAGE_ID_JPEGDECODE_INVALIDSOURCESIZE
  D3D11_MESSAGE_ID_JPEGDECODE_INVALIDCOPYFLAGS
  D3D11_MESSAGE_ID_JPEGDECODE_HAZARD
  D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERUSAGE
  D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDSRCBUFFERMISCFLAGS
  D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPORTEDDSTTEXTUREUSAGE
  D3D11_MESSAGE_ID_JPEGDECODE_BACKBUFFERNOTSUPPORTED
  D3D11_MESSAGE_ID_JPEGDECODE_UNSUPPRTEDCOPYFLAGS
  D3D11_MESSAGE_ID_JPEGENCODE_NOTSUPPORTED
  D3D11_MESSAGE_ID_JPEGENCODE_INVALIDSCANDATAOFFSET
  D3D11_MESSAGE_ID_JPEGENCODE_INVALIDCOMPONENTS
  D3D11_MESSAGE_ID_JPEGENCODE_SOURCENOT2D
  D3D11_MESSAGE_ID_JPEGENCODE_TILEDRESOURCESUNSUPPORTED
  D3D11_MESSAGE_ID_JPEGENCODE_GUARDRECTSUNSUPPORTED
  D3D11_MESSAGE_ID_JPEGENCODE_XSUBSAMPLEMISMATCH
  D3D11_MESSAGE_ID_JPEGENCODE_YSUBSAMPLEMISMATCH
  D3D11_MESSAGE_ID_JPEGENCODE_FORMATUNSUPPORTED
  D3D11_MESSAGE_ID_JPEGENCODE_INVALIDSUBRESOURCE
  D3D11_MESSAGE_ID_JPEGENCODE_INVALIDMIPLEVEL
  D3D11_MESSAGE_ID_JPEGENCODE_DIMENSIONSTOOLARGE
  D3D11_MESSAGE_ID_JPEGENCODE_HAZARD
  D3D11_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERUSAGE
  D3D11_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDDSTBUFFERMISCFLAGS
  D3D11_MESSAGE_ID_JPEGENCODE_UNSUPPORTEDSRCTEXTUREUSAGE
  D3D11_MESSAGE_ID_JPEGENCODE_BACKBUFFERNOTSUPPORTED
  D3D11_MESSAGE_ID_CREATEQUERYORPREDICATE_UNSUPPORTEDCONTEXTTTYPEFORQUERY
  D3D11_MESSAGE_ID_FLUSH1_INVALIDCONTEXTTYPE
  D3D11_MESSAGE_ID_DEVICE_SETHARDWAREPROTECTION_INVALIDCONTEXT
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTHDRMETADATA_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETOUTPUTHDRMETADATA_INVALIDSIZE
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTHDRMETADATA_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETOUTPUTHDRMETADATA_INVALIDSIZE
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMHDRMETADATA_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMHDRMETADATA_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORSETSTREAMHDRMETADATA_INVALIDSIZE
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMHDRMETADATA_NULLPARAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMHDRMETADATA_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMHDRMETADATA_INVALIDSIZE
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFRAMEFORMAT_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMOUTPUTRATE_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSOURCERECT_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMDESTRECT_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMALPHA_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPALETTE_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMPIXELASPECTRATIO_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMLUMAKEY_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMSTEREOFORMAT_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMAUTOPROCESSINGMODE_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMFILTER_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMROTATION_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMCOLORSPACE1_INVALIDSTREAM
  D3D11_MESSAGE_ID_VIDEOPROCESSORGETSTREAMMIRROR_INVALIDSTREAM
  D3D11_MESSAGE_ID_CREATE_FENCE
  D3D11_MESSAGE_ID_LIVE_FENCE
  D3D11_MESSAGE_ID_DESTROY_FENCE
  D3D11_MESSAGE_ID_CREATE_SYNCHRONIZEDCHANNEL
  D3D11_MESSAGE_ID_LIVE_SYNCHRONIZEDCHANNEL
  D3D11_MESSAGE_ID_DESTROY_SYNCHRONIZEDCHANNEL
  D3D11_MESSAGE_ID_CREATEFENCE_INVALIDFLAGS
  D3D11_MESSAGE_ID_D3D11_3_MESSAGES_END
  D3D11_MESSAGE_ID_D3D11_5_MESSAGES_START
  D3D11_MESSAGE_ID_NEGOTIATECRYPTOSESSIONKEYEXCHANGEMT_INVALIDKEYEXCHANGETYPE
  D3D11_MESSAGE_ID_NEGOTIATECRYPTOSESSIONKEYEXCHANGEMT_NOT_SUPPORTED
  D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_COMPONENT_COUNT
  D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_COMPONENT
  D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_SIZE
  D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_USAGE
  D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_MISC_FLAGS
  D3D11_MESSAGE_ID_DECODERBEGINFRAME_INVALID_HISTOGRAM_BUFFER_OFFSET
  D3D11_MESSAGE_ID_CREATE_TRACKEDWORKLOAD
  D3D11_MESSAGE_ID_LIVE_TRACKEDWORKLOAD
  D3D11_MESSAGE_ID_DESTROY_TRACKEDWORKLOAD
  D3D11_MESSAGE_ID_CREATE_TRACKED_WORKLOAD_NULLPARAM
  D3D11_MESSAGE_ID_CREATE_TRACKED_WORKLOAD_INVALID_MAX_INSTANCES
  D3D11_MESSAGE_ID_CREATE_TRACKED_WORKLOAD_INVALID_DEADLINE_TYPE
  D3D11_MESSAGE_ID_CREATE_TRACKED_WORKLOAD_INVALID_ENGINE_TYPE
  D3D11_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOADS
  D3D11_MESSAGE_ID_MULTIPLE_TRACKED_WORKLOAD_PAIRS
  D3D11_MESSAGE_ID_INCOMPLETE_TRACKED_WORKLOAD_PAIR
  D3D11_MESSAGE_ID_OUT_OF_ORDER_TRACKED_WORKLOAD_PAIR
  D3D11_MESSAGE_ID_CANNOT_ADD_TRACKED_WORKLOAD
  D3D11_MESSAGE_ID_TRACKED_WORKLOAD_NOT_SUPPORTED
  D3D11_MESSAGE_ID_TRACKED_WORKLOAD_ENGINE_TYPE_NOT_FOUND
  D3D11_MESSAGE_ID_NO_TRACKED_WORKLOAD_SLOT_AVAILABLE
  D3D11_MESSAGE_ID_END_TRACKED_WORKLOAD_INVALID_ARG
  D3D11_MESSAGE_ID_TRACKED_WORKLOAD_DISJOINT_FAILURE
  D3D11_MESSAGE_ID_D3D11_5_MESSAGES_END

type D3D11_MESSAGE* = object
  Category*              : D3D11_MESSAGE_CATEGORY
  Severity*              : D3D11_MESSAGE_SEVERITY
  ID*                    : D3D11_MESSAGE_ID
  pDescription*          : cstring
  DescriptionByteLength* : uint

type D3D11_INFO_QUEUE_FILTER_DESC* = object
    NumCategories* : uint32
    pCategoryList* : ptr D3D11_MESSAGE_CATEGORY
    NumSeverities* : uint32
    pSeverityList* : ptr D3D11_MESSAGE_SEVERITY
    NumIDs*        : uint32
    pIDList*       : ptr D3D11_MESSAGE_ID

type D3D11_INFO_QUEUE_FILTER* = object
  AllowList* : D3D11_INFO_QUEUE_FILTER_DESC
  DenyList*  : D3D11_INFO_QUEUE_FILTER_DESC

var IID_ID3D11InfoQueue* {.importc.}: IID

comapi ID3D11InfoQueue of IUnknown:
  proc QueryInterface(riid: ptr IID; ppvObject: ptr pointer): HRESULT
  proc AddRef(): uint32
  proc Release(): uint32
  proc SetMessageCountLimit(MessageCountLimit: uint64): HRESULT
  proc ClearStoredMessages()
  proc GetMessage(MessageIndex: uint64, pMessage: ptr D3D11_MESSAGE, pMessageByteLength: ptr uint): HRESULT
  proc GetNumMessagesAllowedByStorageFilter(): uint64
  proc GetNumMessagesDeniedByStorageFilter(): uint64
  proc GetNumStoredMessages(): uint64
  proc GetNumStoredMessagesAllowedByRetrievalFilter(): uint64
  proc GetNumMessagesDiscardedByMessageCountLimit(): uint64
  proc GetMessageCountLimit(): uint64
  proc AddStorageFilterEntries(pFilter: ptr D3D11_INFO_QUEUE_FILTER): HRESULT;
  proc GetStorageFilter(pFilter: ptr D3D11_INFO_QUEUE_FILTER, pFilterByteLength: ptr uint): HRESULT
  proc ClearStorageFilter()
  proc PushEmptyStorageFilter(): HRESULT
  proc PushCopyOfStorageFilter(): HRESULT
  proc PushStorageFilter(pFilter: ptr D3D11_INFO_QUEUE_FILTER): HRESULT
  proc PopStorageFilter()
  proc GetStorageFilterStackSize(): uint32
  proc AddRetrievalFilterEntries(pFilter: ptr D3D11_INFO_QUEUE_FILTER): HRESULT
  proc GetRetrievalFilter(pFilter: ptr D3D11_INFO_QUEUE_FILTER, pFilterByteLength: ptr uint): HRESULT
  proc ClearRetrievalFilter()
  proc PushEmptyRetrievalFilter(): HRESULT
  proc PushCopyOfRetrievalFilter(): HRESULT
  proc PushRetrievalFilter(pFilter: ptr D3D11_INFO_QUEUE_FILTER): HRESULT
  proc PopRetrievalFilter()
  proc GetRetrievalFilterStackSize(): uint32
  proc AddMessage(Category: D3D11_MESSAGE_CATEGORY, Severity: D3D11_MESSAGE_SEVERITY, ID: D3D11_MESSAGE_ID, pDescription: cstring): HRESULT
  proc AddApplicationMessage(Severity: D3D11_MESSAGE_SEVERITY, pDescription: cstring): HRESULT
  proc SetBreakOnCategory(Category: D3D11_MESSAGE_CATEGORY, bEnable: BOOL): HRESULT
  proc SetBreakOnSeverity(Severity: D3D11_MESSAGE_SEVERITY, bEnable: BOOL): HRESULT
  proc SetBreakOnID(ID: D3D11_MESSAGE_ID, bEnable: BOOL): HRESULT
  proc GetBreakOnCategory(Category: D3D11_MESSAGE_CATEGORY): BOOL
  proc GetBreakOnSeverity(Severity: D3D11_MESSAGE_SEVERITY): BOOL
  proc GetBreakOnID(ID: D3D11_MESSAGE_ID): BOOL
  proc SetMuteDebugOutput(bMute: BOOL)
  proc GetMuteDebugOutput(): BOOL

#===============================================================================

template checkresult*(expression:untyped) =
  let hresult = (int32)(expression)
  if (hresult < 0):
    const loc = $instantiationInfo(fullPaths = compileOption("excessiveStackTrace"))
    const expr = astToStr(expression)
    failedAssertImpl(loc & " `" & expr & "` = (HRESULT)" & $hresult)

proc saferelease*[T](t:var ptr T) =
  (if (t != nil): (discard t.Release(); t = nil))

proc saferelease*[T](a:openarray[ptr T]) =
  for i,v in pairs(a): saferelease a[i]

#===============================================================================

import std/exitprocs

let (device*,context*) = (proc():(ptr ID3D11Device1,ptr ID3D11DeviceContext1) =
  echo "d3d11.acquire()"

  var adapter       : ptr IDXGIAdapter = nil
  var featureLevel  : D3D_FEATURE_LEVEL
  let featureLevels = [ D3D_FEATURE_LEVEL_11_0 ]
  var creationFlags = D3D11_CREATE_DEVICE_BGRA_SUPPORT.uint32

  when compileOption("assertions"):
    creationFlags = creationFlags or D3D11_CREATE_DEVICE_DEBUG.uint32

  var tmpDevice  : ptr ID3D11Device
  defer: saferelease tmpDevice

  var tmpContext : ptr ID3D11DeviceContext
  defer: saferelease tmpContext

  checkresult D3D11CreateDevice(
    pAdapter           = adapter,
    DriverType         = D3D_DRIVER_TYPE_HARDWARE,
    Software           = nil.HMODULE,
    Flags              = creationFlags,
    pFeatureLevels     = unsafeaddr featureLevels[0],
    FeatureLevels      = featureLevels.len.uint32,
    SDKVersion         = D3D11_SDK_VERSION.uint32,
    ppDevice           = addr tmpDevice,
    pFeatureLevel      = addr featureLevel,
    ppImmediateContext = addr tmpContext,
  )

  var device : ptr ID3D11Device1
  checkresult tmpDevice.QueryInterface(
    addr IID_ID3D11Device1,
    cast[ptr pointer](addr device),
  )

  var context : ptr ID3D11DeviceContext1
  checkresult tmpContext.QueryInterface(
    addr IID_ID3D11DeviceContext1,
    cast[ptr pointer](addr context),
  )

  when compileOption("assertions"):
    var tmpDebug : ptr ID3D11Debug = nil
    defer: saferelease tmpDebug
    checkresult device.QueryInterface(
      addr IID_ID3D11Debug,
      cast[ptr pointer](addr tmpDebug),
    )
    var tmpInfoQueue : ptr ID3D11InfoQueue = nil
    defer: saferelease tmpInfoQueue
    checkresult tmpDebug.QueryInterface(
      addr IID_ID3D11InfoQueue,
      cast[ptr pointer](addr tmpInfoQueue)
    )
    checkresult tmpInfoQueue.SetBreakOnSeverity(
      D3D11_MESSAGE_SEVERITY_CORRUPTION, true
    )
    checkresult tmpInfoQueue.SetBreakOnSeverity(
      D3D11_MESSAGE_SEVERITY_ERROR, true
    )
    checkresult tmpInfoQueue.SetBreakOnSeverity(
      D3D11_MESSAGE_SEVERITY_WARNING, true
    )

  addExitProc proc() =
    echo "d3d11.release()"
    discard context.Release()
    discard device.Release()

  return (device,context)
)()